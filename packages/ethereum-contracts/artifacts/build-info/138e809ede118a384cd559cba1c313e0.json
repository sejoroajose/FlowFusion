{"id":"138e809ede118a384cd559cba1c313e0","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/FlowFusionBridge.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"./libraries/TWAPMath.sol\";\r\nimport \"./interfaces/IFlowFusionBridge.sol\";\r\n\r\n/**\r\n * @title FlowFusion Bridge\r\n * @notice Multi-chain TWAP bridge for professional trading with MEV protection\r\n * @dev Handles order creation, TWAP execution, and cross-chain coordination\r\n * @author FlowFusion Team\r\n */\r\ncontract FlowFusionBridge is \r\n    IFlowFusionBridge, \r\n    ReentrancyGuard, \r\n    Pausable, \r\n    Ownable \r\n{\r\n    using SafeERC20 for IERC20;\r\n    using TWAPMath for uint256;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                                CONSTANTS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    uint256 public constant BASIS_POINTS = 10000;\r\n    uint256 public constant MAX_SLIPPAGE = 1000; // 10%\r\n    uint256 public constant MIN_WINDOW_MINUTES = 5;\r\n    uint256 public constant MAX_WINDOW_MINUTES = 1440; // 24 hours\r\n    uint256 public constant MAX_EXECUTION_INTERVALS = 20;\r\n    uint256 public constant MIN_EXECUTION_AMOUNT = 1000; // Minimum wei to prevent dust attacks\r\n    uint256 public constant VERSION = 1;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                                 STATE\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    mapping(bytes32 => TWAPOrder) public orders;\r\n    mapping(address => bytes32[]) public userOrders;\r\n    mapping(bytes32 => ExecutionRecord[]) public executionHistory;\r\n    mapping(string => bool) public supportedChains;\r\n    mapping(address => bool) public authorizedExecutors;\r\n    mapping(address => uint256) public userOrderCount; // Track user order counts\r\n    \r\n    uint256 public orderNonce;\r\n    uint256 public totalOrders;\r\n    uint256 public totalVolume;\r\n    address public feeCollector;\r\n    uint256 public protocolFeeRate; // basis points\r\n    uint256 public maxOrdersPerUser = 100; // Prevent spam\r\n    \r\n    /*//////////////////////////////////////////////////////////////\r\n                                EVENTS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    /* event OrderCreated(\r\n        bytes32 indexed orderId,\r\n        address indexed user,\r\n        string targetChain,\r\n        address sourceToken,\r\n        uint256 sourceAmount,\r\n        string targetToken,\r\n        TWAPConfig twapConfig\r\n    ); */\r\n\r\n    event TWAPExecution(\r\n        bytes32 indexed orderId,\r\n        uint256 intervalNumber,\r\n        uint256 executedAmount,\r\n        uint256 averagePrice,\r\n        uint256 timestamp,\r\n        address executor\r\n    );\r\n\r\n    event OrderCompleted(\r\n        bytes32 indexed orderId,\r\n        uint256 totalExecuted,\r\n        uint256 averagePrice,\r\n        uint256 completionTime\r\n    );\r\n\r\n    event OrderCancelled(\r\n        bytes32 indexed orderId,\r\n        address indexed user,\r\n        uint256 refundAmount,\r\n        uint256 cancelledAt\r\n    );\r\n\r\n    /* event HTLCCreated(\r\n        bytes32 indexed orderId,\r\n        bytes32 indexed htlcHash,\r\n        uint256 amount,\r\n        uint256 timeoutHeight\r\n    ); */\r\n\r\n    event HTLCClaimed(\r\n        bytes32 indexed orderId,\r\n        bytes32 secret,\r\n        address claimer,\r\n        uint256 claimedAt\r\n    );\r\n\r\n    event ProtocolFeeCollected(\r\n        bytes32 indexed orderId,\r\n        uint256 feeAmount,\r\n        address feeCollector\r\n    );\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                               MODIFIERS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    modifier onlyAuthorizedExecutor() {\r\n        require(authorizedExecutors[msg.sender], \"FlowFusion: Not authorized executor\");\r\n        _;\r\n    }\r\n\r\n    modifier orderExists(bytes32 orderId) {\r\n        require(orders[orderId].user != address(0), \"FlowFusion: Order does not exist\");\r\n        _;\r\n    }\r\n\r\n    modifier orderActive(bytes32 orderId) {\r\n        require(orders[orderId].status == OrderStatus.Executing, \"FlowFusion: Order not active\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOrderOwner(bytes32 orderId) {\r\n        require(orders[orderId].user == msg.sender, \"FlowFusion: Not order owner\");\r\n        _;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                              CONSTRUCTOR\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    constructor(\r\n        address _feeCollector,\r\n        uint256 _protocolFeeRate\r\n    ) Ownable(msg.sender) {\r\n        require(_feeCollector != address(0), \"FlowFusion: Invalid fee collector\");\r\n        require(_protocolFeeRate <= 100, \"FlowFusion: Fee rate too high\"); // Max 1%\r\n        \r\n        feeCollector = _feeCollector;\r\n        protocolFeeRate = _protocolFeeRate;\r\n        \r\n        // Initialize supported chains\r\n        supportedChains[\"cosmos\"] = true;\r\n        supportedChains[\"stellar\"] = true;\r\n        supportedChains[\"bitcoin\"] = true;\r\n        supportedChains[\"ethereum\"] = true;\r\n        supportedChains[\"polygon\"] = true;\r\n        supportedChains[\"arbitrum\"] = true;\r\n        supportedChains[\"optimism\"] = true;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            ORDER MANAGEMENT\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    /**\r\n     * @notice Create a new TWAP order for cross-chain execution\r\n     * @param sourceToken Address of source token (address(0) for ETH)\r\n     * @param sourceAmount Amount of source tokens\r\n     * @param targetChain Target blockchain identifier\r\n     * @param targetToken Target token identifier\r\n     * @param targetRecipient Recipient address on target chain\r\n     * @param twapConfig TWAP execution configuration\r\n     * @param htlcHash Hash for HTLC mechanism\r\n     * @param timeoutHeight Block height timeout\r\n     * @return orderId Unique order identifier\r\n     */\r\n    function createTWAPOrder(\r\n        address sourceToken,\r\n        uint256 sourceAmount,\r\n        string memory targetChain,\r\n        string memory targetToken,\r\n        string memory targetRecipient,\r\n        TWAPConfig memory twapConfig,\r\n        bytes32 htlcHash,\r\n        uint256 timeoutHeight\r\n    ) external payable nonReentrant whenNotPaused returns (bytes32 orderId) {\r\n        // Validate inputs\r\n        require(sourceAmount >= MIN_EXECUTION_AMOUNT, \"FlowFusion: Amount too small\");\r\n        require(supportedChains[targetChain], \"FlowFusion: Unsupported target chain\");\r\n        require(bytes(targetToken).length > 0, \"FlowFusion: Invalid target token\");\r\n        require(bytes(targetRecipient).length > 0, \"FlowFusion: Invalid recipient\");\r\n        require(htlcHash != bytes32(0), \"FlowFusion: Invalid HTLC hash\");\r\n        require(timeoutHeight > block.number + 100, \"FlowFusion: Timeout too soon\"); // At least 100 blocks\r\n        require(userOrderCount[msg.sender] < maxOrdersPerUser, \"FlowFusion: Too many orders\");\r\n        \r\n        // Validate TWAP configuration\r\n        _validateTWAPConfig(twapConfig);\r\n        \r\n        // Calculate protocol fee\r\n        uint256 protocolFee = (sourceAmount * protocolFeeRate) / BASIS_POINTS;\r\n        uint256 netAmount = sourceAmount - protocolFee;\r\n        \r\n        // Generate order ID\r\n        orderId = keccak256(abi.encodePacked(\r\n            msg.sender,\r\n            sourceToken,\r\n            sourceAmount,\r\n            targetChain,\r\n            block.timestamp,\r\n            orderNonce++\r\n        ));\r\n        \r\n        // Handle token transfer\r\n        if (sourceToken == address(0)) {\r\n            require(msg.value == sourceAmount, \"FlowFusion: ETH amount mismatch\");\r\n            // Send protocol fee to fee collector\r\n            if (protocolFee > 0) {\r\n                payable(feeCollector).transfer(protocolFee);\r\n                emit ProtocolFeeCollected(orderId, protocolFee, feeCollector);\r\n            }\r\n        } else {\r\n            IERC20(sourceToken).safeTransferFrom(msg.sender, address(this), sourceAmount);\r\n            // Send protocol fee to fee collector\r\n            if (protocolFee > 0) {\r\n                IERC20(sourceToken).safeTransfer(feeCollector, protocolFee);\r\n                emit ProtocolFeeCollected(orderId, protocolFee, feeCollector);\r\n            }\r\n        }\r\n        \r\n        // Create order\r\n        orders[orderId] = TWAPOrder({\r\n            id: orderId,\r\n            user: msg.sender,\r\n            sourceToken: sourceToken,\r\n            sourceAmount: netAmount, // Store net amount after fee\r\n            targetChain: targetChain,\r\n            targetToken: targetToken,\r\n            targetRecipient: targetRecipient,\r\n            twapConfig: twapConfig,\r\n            htlcHash: htlcHash,\r\n            timeoutHeight: timeoutHeight,\r\n            createdAt: block.timestamp,\r\n            executedAmount: 0,\r\n            lastExecution: 0,\r\n            status: OrderStatus.Executing,\r\n            averagePrice: 0\r\n        });\r\n        \r\n        // Update mappings\r\n        userOrders[msg.sender].push(orderId);\r\n        userOrderCount[msg.sender]++;\r\n        totalOrders++;\r\n        totalVolume += sourceAmount;\r\n        \r\n        emit OrderCreated(\r\n            orderId,\r\n            msg.sender,\r\n            targetChain,\r\n            sourceToken,\r\n            sourceAmount,\r\n            targetToken,\r\n            twapConfig\r\n        );\r\n        \r\n        emit HTLCCreated(orderId, htlcHash, netAmount, timeoutHeight);\r\n        \r\n        return orderId;\r\n    }\r\n\r\n    /**\r\n     * @notice Execute a TWAP interval for an order\r\n     * @param orderId Order to execute\r\n     * @param intervalAmount Amount to execute in this interval\r\n     * @param executionPrice Price for this execution\r\n     * @param priceProof Proof of price validity (for oracle verification)\r\n     */\r\n    function executeTWAPInterval(\r\n        bytes32 orderId,\r\n        uint256 intervalAmount,\r\n        uint256 executionPrice,\r\n        bytes calldata priceProof\r\n    ) external onlyAuthorizedExecutor orderExists(orderId) orderActive(orderId) nonReentrant {\r\n        TWAPOrder storage order = orders[orderId];\r\n        \r\n        // Validate execution timing\r\n        require(intervalAmount > 0, \"FlowFusion: Invalid interval amount\");\r\n        require(intervalAmount <= order.sourceAmount - order.executedAmount, \"FlowFusion: Exceeds remaining\");\r\n        require(block.number < order.timeoutHeight, \"FlowFusion: Order expired\");\r\n        \r\n        // Check minimum interval time\r\n        uint256 intervalDuration = _getIntervalDuration(order.twapConfig);\r\n        require(\r\n            order.lastExecution == 0 || \r\n            block.timestamp >= order.lastExecution + intervalDuration,\r\n            \"FlowFusion: Too early for next execution\"\r\n        );\r\n        \r\n        // Verify price (implement oracle price verification)\r\n        require(_verifyPrice(executionPrice, priceProof), \"FlowFusion: Invalid price\");\r\n        \r\n        // Calculate and validate slippage\r\n        uint256 twapPrice = _calculateTWAP(orderId);\r\n        if (twapPrice > 0) {\r\n            uint256 slippage = _calculateSlippage(twapPrice, executionPrice);\r\n            require(slippage <= order.twapConfig.maxSlippage, \"FlowFusion: Slippage too high\");\r\n        }\r\n        \r\n        // Validate minimum fill size\r\n        require(\r\n            intervalAmount >= order.twapConfig.minFillSize || \r\n            intervalAmount == order.sourceAmount - order.executedAmount, // Allow final small amount\r\n            \"FlowFusion: Below minimum fill size\"\r\n        );\r\n        \r\n        // Execute interval\r\n        uint256 intervalNumber = executionHistory[orderId].length;\r\n        \r\n        // Record execution\r\n        executionHistory[orderId].push(ExecutionRecord({\r\n            timestamp: block.timestamp,\r\n            amount: intervalAmount,\r\n            price: executionPrice,\r\n            gasUsed: gasleft(),\r\n            slippage: twapPrice > 0 ? _calculateSlippage(twapPrice, executionPrice) : 0\r\n        }));\r\n        \r\n        // Update order state\r\n        order.executedAmount += intervalAmount;\r\n        order.lastExecution = block.timestamp;\r\n        \r\n        // Update average price\r\n        if (order.averagePrice == 0) {\r\n            order.averagePrice = executionPrice;\r\n        } else {\r\n            order.averagePrice = _calculateWeightedAveragePrice(order, executionPrice, intervalAmount);\r\n        }\r\n        \r\n        emit TWAPExecution(\r\n            orderId, \r\n            intervalNumber, \r\n            intervalAmount, \r\n            executionPrice, \r\n            block.timestamp,\r\n            msg.sender\r\n        );\r\n        \r\n        // Check if order is complete\r\n        if (order.executedAmount >= order.sourceAmount) {\r\n            order.status = OrderStatus.Completed;\r\n            emit OrderCompleted(orderId, order.executedAmount, order.averagePrice, block.timestamp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Cancel an order and refund remaining tokens\r\n     * @param orderId Order to cancel\r\n     */\r\n    function cancelOrder(bytes32 orderId) \r\n        external \r\n        orderExists(orderId) \r\n        onlyOrderOwner(orderId)\r\n        nonReentrant \r\n    {\r\n        TWAPOrder storage order = orders[orderId];\r\n        require(order.status == OrderStatus.Executing, \"FlowFusion: Order not cancellable\");\r\n        \r\n        uint256 refundAmount = order.sourceAmount - order.executedAmount;\r\n        \r\n        if (refundAmount > 0) {\r\n            order.status = OrderStatus.Cancelled;\r\n            \r\n            // Refund tokens\r\n            if (order.sourceToken == address(0)) {\r\n                payable(msg.sender).transfer(refundAmount);\r\n            } else {\r\n                IERC20(order.sourceToken).safeTransfer(msg.sender, refundAmount);\r\n            }\r\n            \r\n            // Decrease user order count\r\n            userOrderCount[msg.sender]--;\r\n            \r\n            emit OrderCancelled(orderId, msg.sender, refundAmount, block.timestamp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Claim HTLC with secret to complete cross-chain swap\r\n     * @param orderId Order to claim\r\n     * @param secret Secret to unlock HTLC\r\n     */\r\n    function claimHTLC(bytes32 orderId, bytes32 secret) \r\n        external \r\n        orderExists(orderId) \r\n        nonReentrant \r\n    {\r\n        TWAPOrder storage order = orders[orderId];\r\n        require(order.status == OrderStatus.Completed, \"FlowFusion: Order not completed\");\r\n        require(keccak256(abi.encodePacked(secret)) == order.htlcHash, \"FlowFusion: Invalid secret\");\r\n        \r\n        order.status = OrderStatus.Claimed;\r\n        \r\n        // Decrease user order count\r\n        userOrderCount[order.user]--;\r\n        \r\n        emit HTLCClaimed(orderId, secret, msg.sender, block.timestamp);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            VIEW FUNCTIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    function getOrder(bytes32 orderId) external view returns (TWAPOrder memory) {\r\n        return orders[orderId];\r\n    }\r\n    \r\n    function getUserOrders(address user) external view returns (bytes32[] memory) {\r\n        return userOrders[user];\r\n    }\r\n    \r\n    function getExecutionHistory(bytes32 orderId) external view returns (ExecutionRecord[] memory) {\r\n        return executionHistory[orderId];\r\n    }\r\n    \r\n    function getCurrentTWAPPrice(bytes32 orderId) external view returns (uint256) {\r\n        return _calculateTWAP(orderId);\r\n    }\r\n    \r\n    function getNextExecutionTime(bytes32 orderId) external view returns (uint256) {\r\n        TWAPOrder memory order = orders[orderId];\r\n        if (order.lastExecution == 0) return block.timestamp;\r\n        return order.lastExecution + _getIntervalDuration(order.twapConfig);\r\n    }\r\n\r\n    function getOrdersByStatus(OrderStatus status) external view returns (bytes32[] memory) {\r\n        bytes32[] memory result = new bytes32[](totalOrders);\r\n        uint256 count = 0;\r\n        \r\n        // Note: This is inefficient for large datasets. Consider using events or off-chain indexing\r\n        for (uint256 i = 0; i < orderNonce; i++) {\r\n            bytes32 orderId = keccak256(abi.encodePacked(i));\r\n            if (orders[orderId].user != address(0) && orders[orderId].status == status) {\r\n                result[count] = orderId;\r\n                count++;\r\n            }\r\n        }\r\n        \r\n        // Resize array\r\n        bytes32[] memory trimmed = new bytes32[](count);\r\n        for (uint256 i = 0; i < count; i++) {\r\n            trimmed[i] = result[i];\r\n        }\r\n        \r\n        return trimmed;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                           INTERNAL FUNCTIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    function _validateTWAPConfig(TWAPConfig memory config) internal pure {\r\n        require(config.windowMinutes >= MIN_WINDOW_MINUTES, \"FlowFusion: Window too small\");\r\n        require(config.windowMinutes <= MAX_WINDOW_MINUTES, \"FlowFusion: Window too large\");\r\n        require(config.executionIntervals > 1, \"FlowFusion: Need multiple intervals\");\r\n        require(config.executionIntervals <= MAX_EXECUTION_INTERVALS, \"FlowFusion: Too many intervals\");\r\n        require(config.maxSlippage <= MAX_SLIPPAGE, \"FlowFusion: Slippage too high\");\r\n        require(config.minFillSize > 0, \"FlowFusion: Invalid min fill size\");\r\n    }\r\n    \r\n    function _getIntervalDuration(TWAPConfig memory config) internal pure returns (uint256) {\r\n        return (config.windowMinutes * 60) / config.executionIntervals;\r\n    }\r\n    \r\n    function _calculateTWAP(bytes32 orderId) internal view returns (uint256) {\r\n        ExecutionRecord[] memory history = executionHistory[orderId];\r\n        if (history.length == 0) return 0;\r\n        \r\n        TWAPOrder memory order = orders[orderId];\r\n        uint256 windowStart = block.timestamp - (order.twapConfig.windowMinutes * 60);\r\n        \r\n        uint256 totalValue = 0;\r\n        uint256 totalWeight = 0;\r\n        \r\n        for (uint256 i = 0; i < history.length; i++) {\r\n            if (history[i].timestamp >= windowStart) {\r\n                uint256 weight = i > 0 ? \r\n                    history[i].timestamp - history[i-1].timestamp : 1;\r\n                totalValue += history[i].price * weight;\r\n                totalWeight += weight;\r\n            }\r\n        }\r\n        \r\n        return totalWeight > 0 ? totalValue / totalWeight : 0;\r\n    }\r\n    \r\n    function _calculateSlippage(uint256 expectedPrice, uint256 actualPrice) \r\n        internal \r\n        pure \r\n        returns (uint256) \r\n    {\r\n        if (expectedPrice == 0) return 0;\r\n        uint256 diff = expectedPrice > actualPrice ? \r\n            expectedPrice - actualPrice : actualPrice - expectedPrice;\r\n        return (diff * BASIS_POINTS) / expectedPrice;\r\n    }\r\n    \r\n    function _calculateWeightedAveragePrice(\r\n        TWAPOrder memory order,\r\n        uint256 newPrice,\r\n        uint256 newAmount\r\n    ) internal pure returns (uint256) {\r\n        uint256 totalValue = (order.averagePrice * order.executedAmount) + (newPrice * newAmount);\r\n        uint256 totalAmount = order.executedAmount + newAmount;\r\n        return totalValue / totalAmount;\r\n    }\r\n    \r\n    function _verifyPrice(uint256 price, bytes calldata proof) internal pure returns (bool) {\r\n        // Implement price oracle verification\r\n        // This is simplified - integrate with Chainlink, Pyth, or other oracles\r\n        // For now, just validate that price is positive and proof is provided\r\n        return price > 0 && proof.length > 0;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            ADMIN FUNCTIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    function addSupportedChain(string memory chainId) external onlyOwner {\r\n        supportedChains[chainId] = true;\r\n    }\r\n    \r\n    function removeSupportedChain(string memory chainId) external onlyOwner {\r\n        supportedChains[chainId] = false;\r\n    }\r\n    \r\n    function addAuthorizedExecutor(address executor) external onlyOwner {\r\n        require(executor != address(0), \"FlowFusion: Invalid executor\");\r\n        authorizedExecutors[executor] = true;\r\n    }\r\n    \r\n    function removeAuthorizedExecutor(address executor) external onlyOwner {\r\n        authorizedExecutors[executor] = false;\r\n    }\r\n    \r\n    function updateFeeCollector(address newFeeCollector) external onlyOwner {\r\n        require(newFeeCollector != address(0), \"FlowFusion: Invalid fee collector\");\r\n        feeCollector = newFeeCollector;\r\n    }\r\n    \r\n    function updateProtocolFeeRate(uint256 newFeeRate) external onlyOwner {\r\n        require(newFeeRate <= 100, \"FlowFusion: Fee rate too high\");\r\n        protocolFeeRate = newFeeRate;\r\n    }\r\n\r\n    function updateMaxOrdersPerUser(uint256 newMaxOrders) external onlyOwner {\r\n        require(newMaxOrders > 0, \"FlowFusion: Invalid max orders\");\r\n        maxOrdersPerUser = newMaxOrders;\r\n    }\r\n    \r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n    \r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n    \r\n    function emergencyWithdraw(address token, uint256 amount) external onlyOwner {\r\n        if (token == address(0)) {\r\n            payable(owner()).transfer(amount);\r\n        } else {\r\n            IERC20(token).safeTransfer(owner(), amount);\r\n        }\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                        RECEIVE & FALLBACK\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    receive() external payable {\r\n        // Allow contract to receive ETH\r\n        require(msg.value > 0, \"FlowFusion: No ETH sent\");\r\n    }\r\n    \r\n    fallback() external payable {\r\n        revert(\"FlowFusion: Function not found\");\r\n    }\r\n}"},"contracts/interfaces/IFlowFusionBridge.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\n/**\r\n * @title IFlowFusionBridge\r\n * @notice Interface for FlowFusion Multi-Chain TWAP Bridge\r\n */\r\ninterface IFlowFusionBridge {\r\n    \r\n    /*//////////////////////////////////////////////////////////////\r\n                                STRUCTS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    struct TWAPConfig {\r\n        uint256 windowMinutes;      // TWAP calculation window (5-1440 minutes)\r\n        uint256 executionIntervals; // Number of execution intervals (2-20)\r\n        uint256 maxSlippage;        // Maximum slippage in basis points (1-1000)\r\n        uint256 minFillSize;        // Minimum fill size per interval\r\n        bool enableMEVProtection;   // Enable MEV protection\r\n    }\r\n    \r\n    struct TWAPOrder {\r\n        bytes32 id;                 // Unique order identifier\r\n        address user;               // Order creator\r\n        address sourceToken;        // Source token address (address(0) for ETH)\r\n        uint256 sourceAmount;       // Total source amount\r\n        string targetChain;         // Target blockchain identifier\r\n        string targetToken;         // Target token identifier\r\n        string targetRecipient;     // Recipient address on target chain\r\n        TWAPConfig twapConfig;      // TWAP execution configuration\r\n        bytes32 htlcHash;          // Hash for HTLC mechanism\r\n        uint256 timeoutHeight;      // Block height timeout\r\n        uint256 createdAt;          // Creation timestamp\r\n        uint256 executedAmount;     // Amount already executed\r\n        uint256 lastExecution;      // Last execution timestamp\r\n        OrderStatus status;         // Current order status\r\n        uint256 averagePrice;       // Weighted average execution price\r\n    }\r\n    \r\n    struct ExecutionRecord {\r\n        uint256 timestamp;          // Execution timestamp\r\n        uint256 amount;            // Amount executed\r\n        uint256 price;             // Execution price\r\n        uint256 gasUsed;           // Gas used for execution\r\n        uint256 slippage;          // Slippage in basis points\r\n    }\r\n    \r\n    enum OrderStatus {\r\n        Executing,      // Order is being executed\r\n        Completed,      // All intervals executed\r\n        Cancelled,      // Order cancelled by user\r\n        Expired,        // Order expired (timeout reached)\r\n        Claimed         // HTLC claimed (cross-chain completed)\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                                EVENTS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    event OrderCreated(\r\n        bytes32 indexed orderId,\r\n        address indexed user,\r\n        string targetChain,\r\n        address sourceToken,\r\n        uint256 sourceAmount,\r\n        string targetToken,\r\n        TWAPConfig twapConfig\r\n    );\r\n\r\n    event TWAPExecution(\r\n        bytes32 indexed orderId,\r\n        uint256 intervalNumber,\r\n        uint256 executedAmount,\r\n        uint256 averagePrice,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OrderCompleted(\r\n        bytes32 indexed orderId,\r\n        uint256 totalExecuted,\r\n        uint256 averagePrice\r\n    );\r\n\r\n    event OrderCancelled(\r\n        bytes32 indexed orderId,\r\n        address indexed user,\r\n        uint256 refundAmount\r\n    );\r\n\r\n    event HTLCCreated(\r\n        bytes32 indexed orderId,\r\n        bytes32 indexed htlcHash,\r\n        uint256 amount,\r\n        uint256 timeoutHeight\r\n    );\r\n\r\n    event HTLCClaimed(\r\n        bytes32 indexed orderId,\r\n        bytes32 secret,\r\n        address claimer\r\n    );\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            MAIN FUNCTIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    /**\r\n     * @notice Create a new TWAP order for cross-chain execution\r\n     */\r\n    function createTWAPOrder(\r\n        address sourceToken,\r\n        uint256 sourceAmount,\r\n        string memory targetChain,\r\n        string memory targetToken,\r\n        string memory targetRecipient,\r\n        TWAPConfig memory twapConfig,\r\n        bytes32 htlcHash,\r\n        uint256 timeoutHeight\r\n    ) external payable returns (bytes32 orderId);\r\n\r\n    /**\r\n     * @notice Execute a TWAP interval for an order\r\n     */\r\n    function executeTWAPInterval(\r\n        bytes32 orderId,\r\n        uint256 intervalAmount,\r\n        uint256 executionPrice,\r\n        bytes calldata priceProof\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Cancel an order and refund remaining tokens\r\n     */\r\n    function cancelOrder(bytes32 orderId) external;\r\n\r\n    /**\r\n     * @notice Claim HTLC with secret to complete cross-chain swap\r\n     */\r\n    function claimHTLC(bytes32 orderId, bytes32 secret) external;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            VIEW FUNCTIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    function getOrder(bytes32 orderId) external view returns (TWAPOrder memory);\r\n    function getUserOrders(address user) external view returns (bytes32[] memory);\r\n    function getExecutionHistory(bytes32 orderId) external view returns (ExecutionRecord[] memory);\r\n    function getCurrentTWAPPrice(bytes32 orderId) external view returns (uint256);\r\n    function getNextExecutionTime(bytes32 orderId) external view returns (uint256);\r\n}"},"contracts/libraries/TWAPMath.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\n/**\r\n * @title TWAPMath\r\n * @notice Library for Time-Weighted Average Price calculations and related math\r\n * @dev Used by FlowFusion Bridge for sophisticated TWAP execution\r\n */\r\nlibrary TWAPMath {\r\n    \r\n    /*//////////////////////////////////////////////////////////////\r\n                                CONSTANTS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    uint256 constant BASIS_POINTS = 10000;\r\n    uint256 constant PRECISION = 1e18;\r\n    \r\n    /*//////////////////////////////////////////////////////////////\r\n                                STRUCTS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    struct PricePoint {\r\n        uint256 timestamp;\r\n        uint256 price;\r\n        uint256 volume;\r\n    }\r\n    \r\n    struct TWAPData {\r\n        uint256 cumulativePrice;\r\n        uint256 cumulativeVolume;\r\n        uint256 lastUpdateTime;\r\n        uint256 windowStart;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            TWAP CALCULATIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    /**\r\n     * @notice Calculate Time-Weighted Average Price from price points\r\n     * @param pricePoints Array of price data points\r\n     * @param windowStart Start of the TWAP window (timestamp)\r\n     * @param windowEnd End of the TWAP window (timestamp)\r\n     * @return twapPrice Calculated TWAP price\r\n     */\r\n    function calculateTWAP(\r\n        PricePoint[] memory pricePoints,\r\n        uint256 windowStart,\r\n        uint256 windowEnd\r\n    ) internal pure returns (uint256 twapPrice) {\r\n        require(windowEnd > windowStart, \"Invalid window\");\r\n        \r\n        if (pricePoints.length == 0) return 0;\r\n        \r\n        uint256 totalValue = 0;\r\n        uint256 totalTime = 0;\r\n        \r\n        for (uint256 i = 0; i < pricePoints.length; i++) {\r\n            if (pricePoints[i].timestamp >= windowStart && pricePoints[i].timestamp <= windowEnd) {\r\n                uint256 timeWeight = i > 0 ? \r\n                    pricePoints[i].timestamp - pricePoints[i-1].timestamp : \r\n                    windowEnd - windowStart;\r\n                \r\n                // Prevent division by zero and overflow\r\n                if (timeWeight > 0 && pricePoints[i].price > 0) {\r\n                    totalValue += pricePoints[i].price * timeWeight;\r\n                    totalTime += timeWeight;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return totalTime > 0 ? totalValue / totalTime : 0;\r\n    }\r\n    \r\n    /**\r\n     * @notice Calculate Volume-Weighted Average Price\r\n     * @param pricePoints Array of price data points with volume\r\n     * @param windowStart Start of the VWAP window\r\n     * @param windowEnd End of the VWAP window\r\n     * @return vwapPrice Calculated VWAP price\r\n     */\r\n    function calculateVWAP(\r\n        PricePoint[] memory pricePoints,\r\n        uint256 windowStart,\r\n        uint256 windowEnd\r\n    ) internal pure returns (uint256 vwapPrice) {\r\n        require(windowEnd > windowStart, \"Invalid window\");\r\n        \r\n        if (pricePoints.length == 0) return 0;\r\n        \r\n        uint256 totalValue = 0;\r\n        uint256 totalVolume = 0;\r\n        \r\n        for (uint256 i = 0; i < pricePoints.length; i++) {\r\n            if (pricePoints[i].timestamp >= windowStart && \r\n                pricePoints[i].timestamp <= windowEnd &&\r\n                pricePoints[i].volume > 0) {\r\n                \r\n                totalValue += pricePoints[i].price * pricePoints[i].volume;\r\n                totalVolume += pricePoints[i].volume;\r\n            }\r\n        }\r\n        \r\n        return totalVolume > 0 ? totalValue / totalVolume : 0;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                         SLIPPAGE CALCULATIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    /**\r\n     * @notice Calculate slippage between expected and actual price\r\n     * @param expectedPrice Expected price\r\n     * @param actualPrice Actual execution price\r\n     * @return slippage Slippage in basis points\r\n     */\r\n    function calculateSlippage(\r\n        uint256 expectedPrice,\r\n        uint256 actualPrice\r\n    ) internal pure returns (uint256 slippage) {\r\n        if (expectedPrice == 0) return 0;\r\n        \r\n        uint256 difference = expectedPrice > actualPrice ? \r\n            expectedPrice - actualPrice : \r\n            actualPrice - expectedPrice;\r\n        \r\n        return (difference * BASIS_POINTS) / expectedPrice;\r\n    }\r\n    \r\n    /**\r\n     * @notice Check if slippage is within tolerance\r\n     * @param expectedPrice Expected price\r\n     * @param actualPrice Actual price\r\n     * @param maxSlippage Maximum allowed slippage in basis points\r\n     * @return isValid True if slippage is within tolerance\r\n     */\r\n    function isSlippageAcceptable(\r\n        uint256 expectedPrice,\r\n        uint256 actualPrice,\r\n        uint256 maxSlippage\r\n    ) internal pure returns (bool isValid) {\r\n        uint256 slippage = calculateSlippage(expectedPrice, actualPrice);\r\n        return slippage <= maxSlippage;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                        PRICE IMPACT CALCULATIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    /**\r\n     * @notice Calculate price impact for a given trade size\r\n     * @param currentPrice Current market price\r\n     * @param tradeSize Size of the trade\r\n     * @param liquidity Available liquidity\r\n     * @return priceImpact Price impact in basis points\r\n     */\r\n    function calculatePriceImpact(\r\n        uint256 currentPrice,\r\n        uint256 tradeSize,\r\n        uint256 liquidity\r\n    ) internal pure returns (uint256 priceImpact) {\r\n        if (liquidity == 0 || currentPrice == 0) return BASIS_POINTS; // 100% impact\r\n        \r\n        // Simplified price impact model: impact = (tradeSize / liquidity) * 100%\r\n        uint256 impactRatio = (tradeSize * BASIS_POINTS) / liquidity;\r\n        \r\n        // Cap at 100% impact\r\n        return impactRatio > BASIS_POINTS ? BASIS_POINTS : impactRatio;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                         INTERVAL CALCULATIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    /**\r\n     * @notice Calculate optimal interval size for TWAP execution\r\n     * @param totalAmount Total amount to execute\r\n     * @param numberOfIntervals Number of execution intervals\r\n     * @param minFillSize Minimum fill size per interval\r\n     * @return intervalSize Optimal size per interval\r\n     */\r\n    function calculateIntervalSize(\r\n        uint256 totalAmount,\r\n        uint256 numberOfIntervals,\r\n        uint256 minFillSize\r\n    ) internal pure returns (uint256 intervalSize) {\r\n        require(numberOfIntervals > 0, \"Invalid intervals\");\r\n        \r\n        uint256 baseSize = totalAmount / numberOfIntervals;\r\n        return baseSize < minFillSize ? minFillSize : baseSize;\r\n    }\r\n    \r\n    /**\r\n     * @notice Calculate time between intervals\r\n     * @param windowMinutes Total execution window in minutes\r\n     * @param numberOfIntervals Number of execution intervals\r\n     * @return intervalDuration Duration between intervals in seconds\r\n     */\r\n    function calculateIntervalDuration(\r\n        uint256 windowMinutes,\r\n        uint256 numberOfIntervals\r\n    ) internal pure returns (uint256 intervalDuration) {\r\n        require(numberOfIntervals > 0, \"Invalid intervals\");\r\n        return (windowMinutes * 60) / numberOfIntervals;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                         WEIGHTED AVERAGES\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    /**\r\n     * @notice Calculate weighted average price\r\n     * @param prices Array of prices\r\n     * @param weights Array of weights (same length as prices)\r\n     * @return weightedAverage Calculated weighted average\r\n     */\r\n    function calculateWeightedAverage(\r\n        uint256[] memory prices,\r\n        uint256[] memory weights\r\n    ) internal pure returns (uint256 weightedAverage) {\r\n        require(prices.length == weights.length, \"Array length mismatch\");\r\n        \r\n        if (prices.length == 0) return 0;\r\n        \r\n        uint256 totalValue = 0;\r\n        uint256 totalWeight = 0;\r\n        \r\n        for (uint256 i = 0; i < prices.length; i++) {\r\n            totalValue += prices[i] * weights[i];\r\n            totalWeight += weights[i];\r\n        }\r\n        \r\n        return totalWeight > 0 ? totalValue / totalWeight : 0;\r\n    }\r\n    \r\n    /**\r\n     * @notice Update running weighted average with new data point\r\n     * @param currentAverage Current weighted average\r\n     * @param currentWeight Current total weight\r\n     * @param newPrice New price to incorporate\r\n     * @param newWeight Weight of new price\r\n     * @return newAverage Updated weighted average\r\n     * @return newTotalWeight Updated total weight\r\n     */\r\n    function updateWeightedAverage(\r\n        uint256 currentAverage,\r\n        uint256 currentWeight,\r\n        uint256 newPrice,\r\n        uint256 newWeight\r\n    ) internal pure returns (uint256 newAverage, uint256 newTotalWeight) {\r\n        newTotalWeight = currentWeight + newWeight;\r\n        \r\n        if (newTotalWeight == 0) {\r\n            return (0, 0);\r\n        }\r\n        \r\n        uint256 totalValue = (currentAverage * currentWeight) + (newPrice * newWeight);\r\n        newAverage = totalValue / newTotalWeight;\r\n        \r\n        return (newAverage, newTotalWeight);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                          UTILITY FUNCTIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n    \r\n    /**\r\n     * @notice Safe multiplication with overflow protection\r\n     */\r\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"Multiplication overflow\");\r\n        return c;\r\n    }\r\n    \r\n    /**\r\n     * @notice Safe division with zero protection\r\n     */\r\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"Division by zero\");\r\n        return a / b;\r\n    }\r\n    \r\n    /**\r\n     * @notice Calculate percentage of a value\r\n     * @param value Base value\r\n     * @param percentage Percentage in basis points\r\n     * @return result Calculated percentage\r\n     */\r\n    function percentage(uint256 value, uint256 percentage) internal pure returns (uint256) {\r\n        return (value * percentage) / BASIS_POINTS;\r\n    }\r\n    \r\n    /**\r\n     * @notice Linear interpolation between two values\r\n     * @param start Start value\r\n     * @param end End value\r\n     * @param progress Progress from 0 to PRECISION (1e18)\r\n     * @return interpolated Interpolated value\r\n     */\r\n    function linearInterpolation(\r\n        uint256 start,\r\n        uint256 end,\r\n        uint256 progress\r\n    ) internal pure returns (uint256 interpolated) {\r\n        require(progress <= PRECISION, \"Progress out of range\");\r\n        \r\n        if (progress == 0) return start;\r\n        if (progress == PRECISION) return end;\r\n        \r\n        if (end >= start) {\r\n            uint256 diff = end - start;\r\n            return start + (diff * progress) / PRECISION;\r\n        } else {\r\n            uint256 diff = start - end;\r\n            return start - (diff * progress) / PRECISION;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @notice Calculate exponential moving average\r\n     * @param currentEMA Current EMA value\r\n     * @param newValue New value to incorporate\r\n     * @param alpha Smoothing factor (0 to PRECISION)\r\n     * @return newEMA Updated EMA value\r\n     */\r\n    function exponentialMovingAverage(\r\n        uint256 currentEMA,\r\n        uint256 newValue,\r\n        uint256 alpha\r\n    ) internal pure returns (uint256 newEMA) {\r\n        require(alpha <= PRECISION, \"Alpha out of range\");\r\n        \r\n        // EMA = alpha * newValue + (1 - alpha) * currentEMA\r\n        uint256 newComponent = (alpha * newValue) / PRECISION;\r\n        uint256 oldComponent = ((PRECISION - alpha) * currentEMA) / PRECISION;\r\n        \r\n        return newComponent + oldComponent;\r\n    }\r\n}"},"contracts/test/TestERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n/**\r\n * @title TestERC20\r\n * @notice Simple ERC20 token for testing FlowFusion Bridge\r\n */\r\ncontract TestERC20 is ERC20 {\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 initialSupply\r\n    ) ERC20(name, symbol) {\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n\r\n    /**\r\n     * @notice Mint tokens for testing\r\n     */\r\n    function mint(address to, uint256 amount) external {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Burn tokens for testing\r\n     */\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/libraries/TWAPMath.sol:291:40:\n    |\n291 |     function percentage(uint256 value, uint256 percentage) internal pure returns (uint256) {\n    |                                        ^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/libraries/TWAPMath.sol:291:5:\n    |\n291 |     function percentage(uint256 value, uint256 percentage) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":10787,"file":"contracts/libraries/TWAPMath.sol","message":"The shadowed declaration is here:","start":10639}],"severity":"warning","sourceLocation":{"end":10692,"file":"contracts/libraries/TWAPMath.sol","start":10674},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1487],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1488,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1487,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1487],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[1676],"IERC20":[967]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1676,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,1676,967],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[901,910]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1676]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":1677,"src":"133:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[967]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":968,"src":"132:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"140:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[374],"IERC20Errors":[279],"IERC721Errors":[327]},"id":375,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":279,"linearizedBaseContracts":[279],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":249,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":249,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":249,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":249,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":254,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":254,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":259,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":259,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":268,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":268,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":268,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":268,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":273,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":273,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":278,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":278,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":375,"src":"280:1764:4","usedErrors":[249,254,259,268,273,278],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":327,"linearizedBaseContracts":[327],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":285,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":285,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":290,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":290,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":299,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":299,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":299,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":299,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":304,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":304,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":309,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":309,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":316,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":316,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":316,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":321,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":321,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":326,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":326,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":375,"src":"2190:2092:4","usedErrors":[285,290,299,304,309,316,321,326],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":374,"linearizedBaseContracts":[374],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":339,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":339,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":339,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":339,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":339,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":344,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":344,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":349,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":349,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":356,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":356,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":356,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":361,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":361,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":366,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":366,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":373,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":373,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":373,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":375,"src":"4430:2107:4","usedErrors":[339,344,349,356,361,366,373],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1487],"ERC20":[889],"IERC20":[967],"IERC20Errors":[279],"IERC20Metadata":[993]},"id":890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":376,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":968,"src":"131:36:5","symbolAliases":[{"foreign":{"id":377,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"139:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":994,"src":"168:63:5","symbolAliases":[{"foreign":{"id":379,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"176:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":1488,"src":"232:48:5","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"240:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":375,"src":"281:65:5","symbolAliases":[{"foreign":{"id":383,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"289:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":386,"name":"Context","nameLocations":["1133:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1487,"src":"1133:7:5"},"id":387,"nodeType":"InheritanceSpecifier","src":"1133:7:5"},{"baseName":{"id":388,"name":"IERC20","nameLocations":["1142:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1142:6:5"},"id":389,"nodeType":"InheritanceSpecifier","src":"1142:6:5"},{"baseName":{"id":390,"name":"IERC20Metadata","nameLocations":["1150:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":993,"src":"1150:14:5"},"id":391,"nodeType":"InheritanceSpecifier","src":"1150:14:5"},{"baseName":{"id":392,"name":"IERC20Errors","nameLocations":["1166:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":279,"src":"1166:12:5"},"id":393,"nodeType":"InheritanceSpecifier","src":"1166:12:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"348:757:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":889,"linearizedBaseContracts":[889,279,993,967,1487],"name":"ERC20","nameLocation":"1124:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":397,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:5","nodeType":"VariableDeclaration","scope":889,"src":"1185:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":396,"keyName":"account","keyNameLocation":"1201:7:5","keyType":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":403,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:5","nodeType":"VariableDeclaration","scope":889,"src":"1245:83:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":402,"keyName":"account","keyNameLocation":"1261:7:5","keyType":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":401,"keyName":"spender","keyNameLocation":"1288:7:5","keyType":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":405,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:5","nodeType":"VariableDeclaration","scope":889,"src":"1335:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":407,"mutability":"mutable","name":"_name","nameLocation":"1385:5:5","nodeType":"VariableDeclaration","scope":889,"src":"1370:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":406,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":409,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:5","nodeType":"VariableDeclaration","scope":889,"src":"1396:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":408,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":425,"nodeType":"Block","src":"1638:57:5","statements":[{"expression":{"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":417,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1648:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":418,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"1656:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":420,"nodeType":"ExpressionStatement","src":"1648:13:5"},{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":421,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1671:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":422,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1681:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":424,"nodeType":"ExpressionStatement","src":"1671:17:5"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"1425:152:5","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":426,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"name_","nameLocation":"1608:5:5","nodeType":"VariableDeclaration","scope":426,"src":"1594:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":411,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:5","nodeType":"VariableDeclaration","scope":426,"src":"1615:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":413,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:5"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"1638:0:5"},"scope":889,"src":"1582:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[980],"body":{"id":434,"nodeType":"Block","src":"1820:29:5","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1837:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"1830:12:5"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"1701:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:5","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"1773:2:5"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"1805:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:5"},"scope":889,"src":"1760:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[986],"body":{"id":443,"nodeType":"Block","src":"2024:31:5","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2041:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2034:14:5"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1855:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:5","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"1977:2:5"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2009:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:5"},"scope":889,"src":"1962:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[992],"body":{"id":452,"nodeType":"Block","src":"2744:26:5","statements":[{"expression":{"hexValue":"3138","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":449,"id":451,"nodeType":"Return","src":"2754:9:5"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2061:622:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:5","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"2705:2:5"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"2737:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":447,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:5"},"scope":889,"src":"2688:82:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[916],"body":{"id":461,"nodeType":"Block","src":"2864:36:5","statements":[{"expression":{"id":459,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2881:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":458,"id":460,"nodeType":"Return","src":"2874:19:5"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"2776:22:5","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":462,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:5","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"2823:2:5"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":462,"src":"2855:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:5"},"scope":889,"src":"2803:97:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[924],"body":{"id":474,"nodeType":"Block","src":"3007:42:5","statements":[{"expression":{"baseExpression":{"id":470,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3024:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":472,"indexExpression":{"id":471,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3034:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":469,"id":473,"nodeType":"Return","src":"3017:25:5"}]},"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"2906:22:5","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:5","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"account","nameLocation":"2960:7:5","nodeType":"VariableDeclaration","scope":475,"src":"2952:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:5"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"2998:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:5"},"scope":889,"src":"2933:116:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[934],"body":{"id":498,"nodeType":"Block","src":"3319:103:5","statements":[{"assignments":[486],"declarations":[{"constant":false,"id":486,"mutability":"mutable","name":"owner","nameLocation":"3337:5:5","nodeType":"VariableDeclaration","scope":498,"src":"3329:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":489,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":487,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"3345:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:5"},{"expression":{"arguments":[{"id":491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3377:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"3384:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"3388:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":490,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"3367:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"3367:27:5"},{"expression":{"hexValue":"74727565","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":484,"id":497,"nodeType":"Return","src":"3404:11:5"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"3055:184:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":499,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:5","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"to","nameLocation":"3270:2:5","nodeType":"VariableDeclaration","scope":499,"src":"3262:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"value","nameLocation":"3282:5:5","nodeType":"VariableDeclaration","scope":499,"src":"3274:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:5"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":499,"src":"3313:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":482,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:5"},"scope":889,"src":"3244:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[944],"body":{"id":515,"nodeType":"Block","src":"3544:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":509,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3561:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":511,"indexExpression":{"id":510,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3573:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":513,"indexExpression":{"id":512,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"3580:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":508,"id":514,"nodeType":"Return","src":"3554:34:5"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"3428:22:5","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":516,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:5","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"owner","nameLocation":"3482:5:5","nodeType":"VariableDeclaration","scope":516,"src":"3474:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"spender","nameLocation":"3497:7:5","nodeType":"VariableDeclaration","scope":516,"src":"3489:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:5"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":516,"src":"3535:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:5"},"scope":889,"src":"3455:140:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[954],"body":{"id":539,"nodeType":"Block","src":"3981:107:5","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"3999:5:5","nodeType":"VariableDeclaration","scope":539,"src":"3991:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":528,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"4007:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:5"},{"expression":{"arguments":[{"id":532,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"4038:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4045:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"4054:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":531,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":780,"src":"4029:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"4029:31:5"},{"expression":{"hexValue":"74727565","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":525,"id":538,"nodeType":"Return","src":"4070:11:5"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"3601:296:5","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":540,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:5","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"spender","nameLocation":"3927:7:5","nodeType":"VariableDeclaration","scope":540,"src":"3919:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"value","nameLocation":"3944:5:5","nodeType":"VariableDeclaration","scope":540,"src":"3936:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:5"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":540,"src":"3975:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":523,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:5"},"scope":889,"src":"3902:186:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[966],"body":{"id":571,"nodeType":"Block","src":"4773:151:5","statements":[{"assignments":[553],"declarations":[{"constant":false,"id":553,"mutability":"mutable","name":"spender","nameLocation":"4791:7:5","nodeType":"VariableDeclaration","scope":571,"src":"4783:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":556,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":554,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"4801:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:5"},{"expression":{"arguments":[{"id":558,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4839:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4845:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4854:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":557,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4823:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"ExpressionStatement","src":"4823:37:5"},{"expression":{"arguments":[{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4880:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4886:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4890:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4870:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"ExpressionStatement","src":"4870:26:5"},{"expression":{"hexValue":"74727565","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":551,"id":570,"nodeType":"Return","src":"4906:11:5"}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4094:581:5","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":572,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:5","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"from","nameLocation":"4710:4:5","nodeType":"VariableDeclaration","scope":572,"src":"4702:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"to","nameLocation":"4724:2:5","nodeType":"VariableDeclaration","scope":572,"src":"4716:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"value","nameLocation":"4736:5:5","nodeType":"VariableDeclaration","scope":572,"src":"4728:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:5"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"4767:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":549,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:5"},"scope":889,"src":"4680:244:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":618,"nodeType":"Block","src":"5366:231:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":582,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"5380:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:5","typeDescriptions":{}}},"id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":596,"nodeType":"IfStatement","src":"5376:86:5","trueBody":{"id":595,"nodeType":"Block","src":"5400:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:5","typeDescriptions":{}}},"id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":588,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5421:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":594,"nodeType":"RevertStatement","src":"5414:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"5475:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:5","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":611,"nodeType":"IfStatement","src":"5471:86:5","trueBody":{"id":610,"nodeType":"Block","src":"5493:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:5","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":603,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"5514:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":609,"nodeType":"RevertStatement","src":"5507:39:5"}]}},{"expression":{"arguments":[{"id":613,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"5574:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"5580:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"5584:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":612,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"5566:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"5566:24:5"}]},"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"4930:362:5","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":619,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:5","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"from","nameLocation":"5324:4:5","nodeType":"VariableDeclaration","scope":619,"src":"5316:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"to","nameLocation":"5338:2:5","nodeType":"VariableDeclaration","scope":619,"src":"5330:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"value","nameLocation":"5350:5:5","nodeType":"VariableDeclaration","scope":619,"src":"5342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:5"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"5366:0:5"},"scope":889,"src":"5297:300:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"5987:1032:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6001:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:5","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":666,"nodeType":"Block","src":"6175:362:5","statements":[{"assignments":[641],"declarations":[{"constant":false,"id":641,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:5","nodeType":"VariableDeclaration","scope":666,"src":"6189:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":645,"initialValue":{"baseExpression":{"id":642,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6211:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":644,"indexExpression":{"id":643,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6221:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6244:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6258:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"6240:115:5","trueBody":{"id":655,"nodeType":"Block","src":"6265:90:5","statements":[{"errorCall":{"arguments":[{"id":650,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6315:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6321:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6334:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6290:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"RevertStatement","src":"6283:57:5"}]}},{"id":665,"nodeType":"UncheckedBlock","src":"6368:159:5","statements":[{"expression":{"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":657,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6475:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":659,"indexExpression":{"id":658,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6485:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":660,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6493:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6507:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":664,"nodeType":"ExpressionStatement","src":"6475:37:5"}]}]},"id":667,"nodeType":"IfStatement","src":"5997:540:5","trueBody":{"id":639,"nodeType":"Block","src":"6021:148:5","statements":[{"expression":{"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":635,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"6137:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6153:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":638,"nodeType":"ExpressionStatement","src":"6137:21:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":668,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6551:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:5","typeDescriptions":{}}},"id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":687,"nodeType":"Block","src":"6766:206:5","statements":[{"id":686,"nodeType":"UncheckedBlock","src":"6780:182:5","statements":[{"expression":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":680,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6925:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":682,"indexExpression":{"id":681,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6935:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6942:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":685,"nodeType":"ExpressionStatement","src":"6925:22:5"}]}]},"id":688,"nodeType":"IfStatement","src":"6547:425:5","trueBody":{"id":679,"nodeType":"Block","src":"6569:191:5","statements":[{"id":678,"nodeType":"UncheckedBlock","src":"6583:167:5","statements":[{"expression":{"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":674,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"6714:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6730:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":677,"nodeType":"ExpressionStatement","src":"6714:21:5"}]}]}},{"eventCall":{"arguments":[{"id":690,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6996:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"7002:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"7006:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":689,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"6987:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"EmitStatement","src":"6982:30:5"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"5603:304:5","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:5","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"5937:4:5","nodeType":"VariableDeclaration","scope":696,"src":"5929:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"5951:2:5","nodeType":"VariableDeclaration","scope":696,"src":"5943:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"value","nameLocation":"5963:5:5","nodeType":"VariableDeclaration","scope":696,"src":"5955:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:5"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[],"src":"5987:0:5"},"scope":889,"src":"5912:1107:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"7418:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7432:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:5","typeDescriptions":{}}},"id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":718,"nodeType":"IfStatement","src":"7428:91:5","trueBody":{"id":717,"nodeType":"Block","src":"7455:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:5","typeDescriptions":{}}},"id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":710,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"7476:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"RevertStatement","src":"7469:39:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:5","typeDescriptions":{}}},"id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7548:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"7557:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":719,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"7528:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"7528:35:5"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"7025:332:5","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":729,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:5","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"account","nameLocation":"7385:7:5","nodeType":"VariableDeclaration","scope":729,"src":"7377:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"value","nameLocation":"7402:5:5","nodeType":"VariableDeclaration","scope":729,"src":"7394:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:5"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"7418:0:5"},"scope":889,"src":"7362:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"7944:150:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":737,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"7958:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:5","typeDescriptions":{}}},"id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":751,"nodeType":"IfStatement","src":"7954:89:5","trueBody":{"id":750,"nodeType":"Block","src":"7981:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:5","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8002:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"RevertStatement","src":"7995:37:5"}]}},{"expression":{"arguments":[{"id":753,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"8060:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:5","typeDescriptions":{}}},"id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"8081:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":752,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"8052:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"ExpressionStatement","src":"8052:35:5"}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"7576:307:5","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:5","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"account","nameLocation":"7911:7:5","nodeType":"VariableDeclaration","scope":762,"src":"7903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"value","nameLocation":"7928:5:5","nodeType":"VariableDeclaration","scope":762,"src":"7920:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:5"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"7944:0:5"},"scope":889,"src":"7888:206:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":779,"nodeType":"Block","src":"8704:54:5","statements":[{"expression":{"arguments":[{"id":773,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8723:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"8730:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8739:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":772,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":840,"src":"8714:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"8714:37:5"}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"8100:525:5","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":780,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:5","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"owner","nameLocation":"8656:5:5","nodeType":"VariableDeclaration","scope":780,"src":"8648:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"spender","nameLocation":"8671:7:5","nodeType":"VariableDeclaration","scope":780,"src":"8663:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"value","nameLocation":"8688:5:5","nodeType":"VariableDeclaration","scope":780,"src":"8680:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:5"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"8704:0:5"},"scope":889,"src":"8630:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":839,"nodeType":"Block","src":"9703:334:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9717:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:5","typeDescriptions":{}}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":806,"nodeType":"IfStatement","src":"9713:89:5","trueBody":{"id":805,"nodeType":"Block","src":"9738:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:5","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":798,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"9759:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"RevertStatement","src":"9752:39:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":807,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"9815:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:5","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"9811:90:5","trueBody":{"id":820,"nodeType":"Block","src":"9838:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:5","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":813,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"9859:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"RevertStatement","src":"9852:38:5"}]}},{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":822,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"9910:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":825,"indexExpression":{"id":823,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9922:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":826,"indexExpression":{"id":824,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"9929:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"9940:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"9910:35:5"},{"condition":{"id":830,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"9959:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"9955:76:5","trueBody":{"id":837,"nodeType":"Block","src":"9970:61:5","statements":[{"eventCall":{"arguments":[{"id":832,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9998:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"10005:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10014:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":831,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9989:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"EmitStatement","src":"9984:36:5"}]}}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"8764:836:5","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":840,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:5","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"owner","nameLocation":"9631:5:5","nodeType":"VariableDeclaration","scope":840,"src":"9623:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"spender","nameLocation":"9646:7:5","nodeType":"VariableDeclaration","scope":840,"src":"9638:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"value","nameLocation":"9663:5:5","nodeType":"VariableDeclaration","scope":840,"src":"9655:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:5","nodeType":"VariableDeclaration","scope":840,"src":"9670:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":788,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:5"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"9703:0:5"},"scope":889,"src":"9605:432:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":887,"nodeType":"Block","src":"10408:387:5","statements":[{"assignments":[851],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:5","nodeType":"VariableDeclaration","scope":887,"src":"10418:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":856,"initialValue":{"arguments":[{"id":853,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10455:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":854,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10462:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":852,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"10445:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10484:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":858,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:5","memberName":"max","nodeType":"MemberAccess","src":"10503:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":886,"nodeType":"IfStatement","src":"10480:309:5","trueBody":{"id":885,"nodeType":"Block","src":"10522:267:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10540:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10559:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":874,"nodeType":"IfStatement","src":"10536:130:5","trueBody":{"id":873,"nodeType":"Block","src":"10566:100:5","statements":[{"errorCall":{"arguments":[{"id":868,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10618:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10627:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10645:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":867,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"10591:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":872,"nodeType":"RevertStatement","src":"10584:67:5"}]}},{"id":884,"nodeType":"UncheckedBlock","src":"10679:100:5","statements":[{"expression":{"arguments":[{"id":876,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10716:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":877,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10723:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10732:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10751:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":875,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":840,"src":"10707:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"10707:57:5"}]}]}}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"10043:271:5","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":888,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:5","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"owner","nameLocation":"10352:5:5","nodeType":"VariableDeclaration","scope":888,"src":"10344:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"spender","nameLocation":"10367:7:5","nodeType":"VariableDeclaration","scope":888,"src":"10359:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"value","nameLocation":"10384:5:5","nodeType":"VariableDeclaration","scope":888,"src":"10376:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:5"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"10408:0:5"},"scope":889,"src":"10319:476:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":890,"src":"1106:9691:5","usedErrors":[249,254,259,268,273,278],"usedEvents":[901,910]}],"src":"105:10693:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[967]},"id":968,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":891,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"133:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":967,"linearizedBaseContracts":[967],"name":"IERC20","nameLocation":"215:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"228:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":901,"name":"Transfer","nameLocation":"397:8:6","nodeType":"EventDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:6","nodeType":"VariableDeclaration","scope":901,"src":"406:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:6","nodeType":"VariableDeclaration","scope":901,"src":"428:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:6","nodeType":"VariableDeclaration","scope":901,"src":"448:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:6"},"src":"391:72:6"},{"anonymous":false,"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"469:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":910,"name":"Approval","nameLocation":"628:8:6","nodeType":"EventDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:6","nodeType":"VariableDeclaration","scope":910,"src":"637:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:6","nodeType":"VariableDeclaration","scope":910,"src":"660:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":908,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:6","nodeType":"VariableDeclaration","scope":910,"src":"685:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:6"},"src":"622:78:6"},{"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"706:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":916,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:6","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"796:2:6"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":916,"src":"822:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:6"},"scope":967,"src":"776:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"837:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":924,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:6","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"account","nameLocation":"940:7:6","nodeType":"VariableDeclaration","scope":924,"src":"932:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:6"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"972:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:6"},"scope":967,"src":"913:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"987:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":934,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:6","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"to","nameLocation":"1231:2:6","nodeType":"VariableDeclaration","scope":934,"src":"1223:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"value","nameLocation":"1243:5:6","nodeType":"VariableDeclaration","scope":934,"src":"1235:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:6"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"1268:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":931,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:6"},"scope":967,"src":"1205:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"1280:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":944,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:6","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"owner","nameLocation":"1576:5:6","nodeType":"VariableDeclaration","scope":944,"src":"1568:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"spender","nameLocation":"1591:7:6","nodeType":"VariableDeclaration","scope":944,"src":"1583:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:6"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"1623:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:6"},"scope":967,"src":"1549:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"1638:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":954,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:6","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"spender","nameLocation":"2335:7:6","nodeType":"VariableDeclaration","scope":954,"src":"2327:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"value","nameLocation":"2352:5:6","nodeType":"VariableDeclaration","scope":954,"src":"2344:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:6"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":954,"src":"2377:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":951,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:6"},"scope":967,"src":"2310:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"2389:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:6","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"2721:4:6","nodeType":"VariableDeclaration","scope":966,"src":"2713:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"2735:2:6","nodeType":"VariableDeclaration","scope":966,"src":"2727:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"2747:5:6","nodeType":"VariableDeclaration","scope":966,"src":"2739:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:6"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"2772:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":963,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:6"},"scope":967,"src":"2691:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":968,"src":"205:2575:6","usedErrors":[],"usedEvents":[901,910]}],"src":"106:2675:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[967],"IERC20Metadata":[993]},"id":994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":969,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":994,"sourceUnit":968,"src":"151:37:7","symbolAliases":[{"foreign":{"id":970,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":973,"name":"IERC20","nameLocations":["306:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"306:6:7"},"id":974,"nodeType":"InheritanceSpecifier","src":"306:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"190:87:7","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":993,"linearizedBaseContracts":[993,967],"name":"IERC20Metadata","nameLocation":"288:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"319:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":980,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:7","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"391:2:7"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"417:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":977,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:7"},"scope":993,"src":"378:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"438:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":986,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:7","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"514:2:7"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":986,"src":"540:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":983,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:7"},"scope":993,"src":"499:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"561:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":992,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:7","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"648:2:7"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"674:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":989,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:7"},"scope":993,"src":"631:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":994,"src":"278:405:7","usedErrors":[],"usedEvents":[901,910]}],"src":"125:559:7"},"id":7},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[967],"SafeERC20":[1457]},"id":1458,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":995,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":968,"src":"141:37:8","symbolAliases":[{"foreign":{"id":996,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"149:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":230,"src":"179:58:8","symbolAliases":[{"foreign":{"id":998,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"239:458:8","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1457,"linearizedBaseContracts":[1457],"name":"SafeERC20","nameLocation":"706:9:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"722:65:8","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1005,"name":"SafeERC20FailedOperation","nameLocation":"798:24:8","nodeType":"ErrorDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"token","nameLocation":"831:5:8","nodeType":"VariableDeclaration","scope":1005,"src":"823:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:8"},"src":"792:46:8"},{"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"844:71:8","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1014,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:8","nodeType":"ErrorDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"spender","nameLocation":"967:7:8","nodeType":"VariableDeclaration","scope":1014,"src":"959:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:8","nodeType":"VariableDeclaration","scope":1014,"src":"976:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:8","nodeType":"VariableDeclaration","scope":1014,"src":"1002:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:8"},"src":"920:109:8"},{"body":{"id":1037,"nodeType":"Block","src":"1291:88:8","statements":[{"expression":{"arguments":[{"id":1026,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1321:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1343:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":934,"src":"1343:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"1360:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"1364:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1027,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1025,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1301:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1036,"nodeType":"ExpressionStatement","src":"1301:71:8"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"1035:179:8","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1038,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:8","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"token","nameLocation":"1248:5:8","nodeType":"VariableDeclaration","scope":1038,"src":"1241:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1017,"nodeType":"UserDefinedTypeName","pathNode":{"id":1016,"name":"IERC20","nameLocations":["1241:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1241:6:8"},"referencedDeclaration":967,"src":"1241:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"to","nameLocation":"1263:2:8","nodeType":"VariableDeclaration","scope":1038,"src":"1255:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"value","nameLocation":"1275:5:8","nodeType":"VariableDeclaration","scope":1038,"src":"1267:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:8"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"1291:0:8"},"scope":1457,"src":"1219:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"1708:98:8","statements":[{"expression":{"arguments":[{"id":1052,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1738:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1055,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1760:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":966,"src":"1760:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1057,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1781:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1058,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"1787:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"1791:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1053,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1051,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1718:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1063,"nodeType":"ExpressionStatement","src":"1718:81:8"}]},"documentation":{"id":1039,"nodeType":"StructuredDocumentation","src":"1385:228:8","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:8","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"token","nameLocation":"1651:5:8","nodeType":"VariableDeclaration","scope":1065,"src":"1644:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1041,"nodeType":"UserDefinedTypeName","pathNode":{"id":1040,"name":"IERC20","nameLocations":["1644:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1644:6:8"},"referencedDeclaration":967,"src":"1644:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"from","nameLocation":"1666:4:8","nodeType":"VariableDeclaration","scope":1065,"src":"1658:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"to","nameLocation":"1680:2:8","nodeType":"VariableDeclaration","scope":1065,"src":"1672:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"value","nameLocation":"1692:5:8","nodeType":"VariableDeclaration","scope":1065,"src":"1684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:8"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[],"src":"1708:0:8"},"scope":1457,"src":"1618:188:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1090,"nodeType":"Block","src":"2033:99:8","statements":[{"expression":{"arguments":[{"id":1079,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2074:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1082,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2096:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":934,"src":"2096:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2113:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"2117:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1080,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1078,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2050:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1077,"id":1089,"nodeType":"Return","src":"2043:82:8"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"1812:126:8","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:8","nodeType":"FunctionDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"token","nameLocation":"1975:5:8","nodeType":"VariableDeclaration","scope":1091,"src":"1968:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1068,"nodeType":"UserDefinedTypeName","pathNode":{"id":1067,"name":"IERC20","nameLocations":["1968:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1968:6:8"},"referencedDeclaration":967,"src":"1968:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"to","nameLocation":"1990:2:8","nodeType":"VariableDeclaration","scope":1091,"src":"1982:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"value","nameLocation":"2002:5:8","nodeType":"VariableDeclaration","scope":1091,"src":"1994:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:8"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"2027:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1075,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:8"},"scope":1457,"src":"1943:189:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"2381:109:8","statements":[{"expression":{"arguments":[{"id":1107,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2422:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1110,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2444:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":966,"src":"2444:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1112,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"2465:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2471:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2475:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1106,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2398:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1105,"id":1118,"nodeType":"Return","src":"2391:92:8"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"2138:130:8","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:8","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"token","nameLocation":"2309:5:8","nodeType":"VariableDeclaration","scope":1120,"src":"2302:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1094,"nodeType":"UserDefinedTypeName","pathNode":{"id":1093,"name":"IERC20","nameLocations":["2302:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"2302:6:8"},"referencedDeclaration":967,"src":"2302:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"from","nameLocation":"2324:4:8","nodeType":"VariableDeclaration","scope":1120,"src":"2316:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"to","nameLocation":"2338:2:8","nodeType":"VariableDeclaration","scope":1120,"src":"2330:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"value","nameLocation":"2350:5:8","nodeType":"VariableDeclaration","scope":1120,"src":"2342:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:8"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"2375:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1103,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:8"},"scope":1457,"src":"2273:217:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"3232:139:8","statements":[{"assignments":[1132],"declarations":[{"constant":false,"id":1132,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:8","nodeType":"VariableDeclaration","scope":1150,"src":"3242:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1141,"initialValue":{"arguments":[{"arguments":[{"id":1137,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:8","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1139,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3296:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3265:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"3265:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:8"},{"expression":{"arguments":[{"id":1143,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3327:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1144,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3334:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"3343:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1142,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3314:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"3314:50:8"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"2496:645:8","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:8","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"token","nameLocation":"3184:5:8","nodeType":"VariableDeclaration","scope":1151,"src":"3177:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1123,"nodeType":"UserDefinedTypeName","pathNode":{"id":1122,"name":"IERC20","nameLocations":["3177:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"3177:6:8"},"referencedDeclaration":967,"src":"3177:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"spender","nameLocation":"3199:7:8","nodeType":"VariableDeclaration","scope":1151,"src":"3191:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"3216:5:8","nodeType":"VariableDeclaration","scope":1151,"src":"3208:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:8"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"3232:0:8"},"scope":1457,"src":"3146:225:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"4137:370:8","statements":[{"id":1192,"nodeType":"UncheckedBlock","src":"4147:354:8","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:8","nodeType":"VariableDeclaration","scope":1192,"src":"4171:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1172,"initialValue":{"arguments":[{"arguments":[{"id":1168,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:8","typeDescriptions":{}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1170,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4229:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4198:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"4198:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4255:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1174,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4274:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"4251:160:8","trueBody":{"id":1182,"nodeType":"Block","src":"4293:118:8","statements":[{"errorCall":{"arguments":[{"id":1177,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4351:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4360:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1179,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4378:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1176,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4318:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"RevertStatement","src":"4311:85:8"}]}},{"expression":{"arguments":[{"id":1185,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4437:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4444:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4453:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1188,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4472:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1184,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"4424:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"4424:66:8"}]}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"3377:657:8","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:8","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"token","nameLocation":"4077:5:8","nodeType":"VariableDeclaration","scope":1194,"src":"4070:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1154,"nodeType":"UserDefinedTypeName","pathNode":{"id":1153,"name":"IERC20","nameLocations":["4070:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"4070:6:8"},"referencedDeclaration":967,"src":"4070:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"spender","nameLocation":"4092:7:8","nodeType":"VariableDeclaration","scope":1194,"src":"4084:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:8","nodeType":"VariableDeclaration","scope":1194,"src":"4101:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:8"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"4137:0:8"},"scope":1457,"src":"4039:468:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"5161:303:8","statements":[{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:8","nodeType":"VariableDeclaration","scope":1240,"src":"5171:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1205,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1215,"initialValue":{"arguments":[{"expression":{"id":1209,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5214:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":954,"src":"5214:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1211,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5230:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5239:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:8"},{"condition":{"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:8","subExpression":{"arguments":[{"id":1217,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5286:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1218,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5293:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1216,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5262:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"nodeType":"IfStatement","src":"5257:201:8","trueBody":{"id":1238,"nodeType":"Block","src":"5308:150:8","statements":[{"expression":{"arguments":[{"id":1222,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5342:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1225,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5364:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":954,"src":"5364:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1227,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5380:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1223,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1221,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5322:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"5322:71:8"},{"expression":{"arguments":[{"id":1234,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5427:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1235,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5434:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1233,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5407:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1237,"nodeType":"ExpressionStatement","src":"5407:40:8"}]}}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"4513:566:8","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:8","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"token","nameLocation":"5113:5:8","nodeType":"VariableDeclaration","scope":1241,"src":"5106:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1197,"nodeType":"UserDefinedTypeName","pathNode":{"id":1196,"name":"IERC20","nameLocations":["5106:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"5106:6:8"},"referencedDeclaration":967,"src":"5106:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"spender","nameLocation":"5128:7:8","nodeType":"VariableDeclaration","scope":1241,"src":"5120:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"value","nameLocation":"5145:5:8","nodeType":"VariableDeclaration","scope":1241,"src":"5137:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:8"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"5161:0:8"},"scope":1457,"src":"5084:380:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"5911:219:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5925:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:8","memberName":"code","nodeType":"MemberAccess","src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:8","memberName":"length","nodeType":"MemberAccess","src":"5925:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:8","subExpression":{"arguments":[{"id":1268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6034:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6038:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1270,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6045:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1266,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6012:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:8","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"IfStatement","src":"6007:117:8","trueBody":{"id":1280,"nodeType":"Block","src":"6052:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1276,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6106:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:8","typeDescriptions":{}}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1273,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6073:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1279,"nodeType":"RevertStatement","src":"6066:47:8"}]}},"id":1282,"nodeType":"IfStatement","src":"5921:203:8","trueBody":{"id":1265,"nodeType":"Block","src":"5946:55:8","statements":[{"expression":{"arguments":[{"id":1260,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5973:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1261,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5980:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"5984:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1259,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5960:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"5960:30:8"}]}}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"5470:333:8","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:8","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"token","nameLocation":"5849:5:8","nodeType":"VariableDeclaration","scope":1284,"src":"5840:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1244,"nodeType":"UserDefinedTypeName","pathNode":{"id":1243,"name":"IERC1363","nameLocations":["5840:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:8"},"referencedDeclaration":229,"src":"5840:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"to","nameLocation":"5864:2:8","nodeType":"VariableDeclaration","scope":1284,"src":"5856:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"5876:5:8","nodeType":"VariableDeclaration","scope":1284,"src":"5868:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"data","nameLocation":"5896:4:8","nodeType":"VariableDeclaration","scope":1284,"src":"5883:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:8"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"5911:0:8"},"scope":1457,"src":"5808:322:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"6649:239:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1299,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6663:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:8","memberName":"code","nodeType":"MemberAccess","src":"6663:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:8","memberName":"length","nodeType":"MemberAccess","src":"6663:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:8","subExpression":{"arguments":[{"id":1314,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6786:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6792:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6796:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"6803:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1312,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6760:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:8","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1328,"nodeType":"IfStatement","src":"6755:127:8","trueBody":{"id":1327,"nodeType":"Block","src":"6810:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1323,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6864:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:8","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1320,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6831:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1326,"nodeType":"RevertStatement","src":"6824:47:8"}]}},"id":1329,"nodeType":"IfStatement","src":"6659:223:8","trueBody":{"id":1311,"nodeType":"Block","src":"6684:65:8","statements":[{"expression":{"arguments":[{"id":1305,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6715:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1306,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6722:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6728:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6732:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1304,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"6698:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"6698:40:8"}]}}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"6136:341:8","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:8","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"token","nameLocation":"6536:5:8","nodeType":"VariableDeclaration","scope":1331,"src":"6527:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1287,"nodeType":"UserDefinedTypeName","pathNode":{"id":1286,"name":"IERC1363","nameLocations":["6527:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:8"},"referencedDeclaration":229,"src":"6527:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"from","nameLocation":"6559:4:8","nodeType":"VariableDeclaration","scope":1331,"src":"6551:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"to","nameLocation":"6581:2:8","nodeType":"VariableDeclaration","scope":1331,"src":"6573:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"value","nameLocation":"6601:5:8","nodeType":"VariableDeclaration","scope":1331,"src":"6593:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"data","nameLocation":"6629:4:8","nodeType":"VariableDeclaration","scope":1331,"src":"6616:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:8"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"6649:0:8"},"scope":1457,"src":"6482:406:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1373,"nodeType":"Block","src":"7655:218:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7669:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:8","memberName":"code","nodeType":"MemberAccess","src":"7669:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:8","memberName":"length","nodeType":"MemberAccess","src":"7669:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:8","subExpression":{"arguments":[{"id":1358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7777:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7781:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1360,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"7788:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1356,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7756:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:8","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1371,"nodeType":"IfStatement","src":"7751:116:8","trueBody":{"id":1370,"nodeType":"Block","src":"7795:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1366,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7849:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:8","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1363,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"7816:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1369,"nodeType":"RevertStatement","src":"7809:47:8"}]}},"id":1372,"nodeType":"IfStatement","src":"7665:202:8","trueBody":{"id":1355,"nodeType":"Block","src":"7690:55:8","statements":[{"expression":{"arguments":[{"id":1350,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7717:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1351,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7724:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7728:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1349,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"7704:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1354,"nodeType":"ExpressionStatement","src":"7704:30:8"}]}}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"6894:654:8","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"token","nameLocation":"7593:5:8","nodeType":"VariableDeclaration","scope":1374,"src":"7584:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1334,"nodeType":"UserDefinedTypeName","pathNode":{"id":1333,"name":"IERC1363","nameLocations":["7584:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:8"},"referencedDeclaration":229,"src":"7584:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"to","nameLocation":"7608:2:8","nodeType":"VariableDeclaration","scope":1374,"src":"7600:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"value","nameLocation":"7620:5:8","nodeType":"VariableDeclaration","scope":1374,"src":"7612:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"data","nameLocation":"7640:4:8","nodeType":"VariableDeclaration","scope":1374,"src":"7627:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1340,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"7655:0:8"},"scope":1457,"src":"7553:320:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"8440:650:8","statements":[{"assignments":[1384],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:8","nodeType":"VariableDeclaration","scope":1414,"src":"8450:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1385,"nodeType":"VariableDeclarationStatement","src":"8450:18:8"},{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:8","nodeType":"VariableDeclaration","scope":1414,"src":"8478:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"nodeType":"VariableDeclarationStatement","src":"8478:19:8"},{"AST":{"nativeSrc":"8532:396:8","nodeType":"YulBlock","src":"8532:396:8","statements":[{"nativeSrc":"8546:75:8","nodeType":"YulVariableDeclaration","src":"8546:75:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:8","nodeType":"YulIdentifier","src":"8566:3:8"},"nativeSrc":"8566:5:8","nodeType":"YulFunctionCall","src":"8566:5:8"},{"name":"token","nativeSrc":"8573:5:8","nodeType":"YulIdentifier","src":"8573:5:8"},{"kind":"number","nativeSrc":"8580:1:8","nodeType":"YulLiteral","src":"8580:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:8","nodeType":"YulIdentifier","src":"8587:4:8"},{"kind":"number","nativeSrc":"8593:4:8","nodeType":"YulLiteral","src":"8593:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:8","nodeType":"YulIdentifier","src":"8583:3:8"},"nativeSrc":"8583:15:8","nodeType":"YulFunctionCall","src":"8583:15:8"},{"arguments":[{"name":"data","nativeSrc":"8606:4:8","nodeType":"YulIdentifier","src":"8606:4:8"}],"functionName":{"name":"mload","nativeSrc":"8600:5:8","nodeType":"YulIdentifier","src":"8600:5:8"},"nativeSrc":"8600:11:8","nodeType":"YulFunctionCall","src":"8600:11:8"},{"kind":"number","nativeSrc":"8613:1:8","nodeType":"YulLiteral","src":"8613:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:8","nodeType":"YulLiteral","src":"8616:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:8","nodeType":"YulIdentifier","src":"8561:4:8"},"nativeSrc":"8561:60:8","nodeType":"YulFunctionCall","src":"8561:60:8"},"variables":[{"name":"success","nativeSrc":"8550:7:8","nodeType":"YulTypedName","src":"8550:7:8","type":""}]},{"body":{"nativeSrc":"8682:157:8","nodeType":"YulBlock","src":"8682:157:8","statements":[{"nativeSrc":"8700:22:8","nodeType":"YulVariableDeclaration","src":"8700:22:8","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:8","nodeType":"YulLiteral","src":"8717:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:8","nodeType":"YulIdentifier","src":"8711:5:8"},"nativeSrc":"8711:11:8","nodeType":"YulFunctionCall","src":"8711:11:8"},"variables":[{"name":"ptr","nativeSrc":"8704:3:8","nodeType":"YulTypedName","src":"8704:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:8","nodeType":"YulIdentifier","src":"8754:3:8"},{"kind":"number","nativeSrc":"8759:1:8","nodeType":"YulLiteral","src":"8759:1:8","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:8","nodeType":"YulIdentifier","src":"8762:14:8"},"nativeSrc":"8762:16:8","nodeType":"YulFunctionCall","src":"8762:16:8"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:8","nodeType":"YulIdentifier","src":"8739:14:8"},"nativeSrc":"8739:40:8","nodeType":"YulFunctionCall","src":"8739:40:8"},"nativeSrc":"8739:40:8","nodeType":"YulExpressionStatement","src":"8739:40:8"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:8","nodeType":"YulIdentifier","src":"8803:3:8"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:8","nodeType":"YulIdentifier","src":"8808:14:8"},"nativeSrc":"8808:16:8","nodeType":"YulFunctionCall","src":"8808:16:8"}],"functionName":{"name":"revert","nativeSrc":"8796:6:8","nodeType":"YulIdentifier","src":"8796:6:8"},"nativeSrc":"8796:29:8","nodeType":"YulFunctionCall","src":"8796:29:8"},"nativeSrc":"8796:29:8","nodeType":"YulExpressionStatement","src":"8796:29:8"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:8","nodeType":"YulIdentifier","src":"8673:7:8"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:8","nodeType":"YulIdentifier","src":"8666:6:8"},"nativeSrc":"8666:15:8","nodeType":"YulFunctionCall","src":"8666:15:8"},"nativeSrc":"8663:176:8","nodeType":"YulIf","src":"8663:176:8"},{"nativeSrc":"8852:30:8","nodeType":"YulAssignment","src":"8852:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:8","nodeType":"YulIdentifier","src":"8866:14:8"},"nativeSrc":"8866:16:8","nodeType":"YulFunctionCall","src":"8866:16:8"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:8","nodeType":"YulIdentifier","src":"8852:10:8"}]},{"nativeSrc":"8895:23:8","nodeType":"YulAssignment","src":"8895:23:8","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:8","nodeType":"YulLiteral","src":"8916:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:8","nodeType":"YulIdentifier","src":"8910:5:8"},"nativeSrc":"8910:8:8","nodeType":"YulFunctionCall","src":"8910:8:8"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:8","nodeType":"YulIdentifier","src":"8895:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1380,"isOffset":false,"isSlot":false,"src":"8587:4:8","valueSize":1},{"declaration":1380,"isOffset":false,"isSlot":false,"src":"8606:4:8","valueSize":1},{"declaration":1384,"isOffset":false,"isSlot":false,"src":"8852:10:8","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"8895:11:8","valueSize":1},{"declaration":1378,"isOffset":false,"isSlot":false,"src":"8573:5:8","valueSize":1}],"flags":["memory-safe"],"id":1389,"nodeType":"InlineAssembly","src":"8507:421:8"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8942:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"8994:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"8968:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:8","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:8","memberName":"code","nodeType":"MemberAccess","src":"8960:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:8","memberName":"length","nodeType":"MemberAccess","src":"8960:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"8938:146:8","trueBody":{"id":1412,"nodeType":"Block","src":"9012:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1408,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"9066:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:8","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"9033:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1411,"nodeType":"RevertStatement","src":"9026:47:8"}]}}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"7879:486:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:8","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"token","nameLocation":"8406:5:8","nodeType":"VariableDeclaration","scope":1415,"src":"8399:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1377,"nodeType":"UserDefinedTypeName","pathNode":{"id":1376,"name":"IERC20","nameLocations":["8399:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"8399:6:8"},"referencedDeclaration":967,"src":"8399:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"data","nameLocation":"8426:4:8","nodeType":"VariableDeclaration","scope":1415,"src":"8413:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1379,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:8"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"8440:0:8"},"scope":1457,"src":"8370:720:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1455,"nodeType":"Block","src":"9681:391:8","statements":[{"assignments":[1427],"declarations":[{"constant":false,"id":1427,"mutability":"mutable","name":"success","nameLocation":"9696:7:8","nodeType":"VariableDeclaration","scope":1455,"src":"9691:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1426,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1428,"nodeType":"VariableDeclarationStatement","src":"9691:12:8"},{"assignments":[1430],"declarations":[{"constant":false,"id":1430,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:8","nodeType":"VariableDeclaration","scope":1455,"src":"9713:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1431,"nodeType":"VariableDeclarationStatement","src":"9713:18:8"},{"assignments":[1433],"declarations":[{"constant":false,"id":1433,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:8","nodeType":"VariableDeclaration","scope":1455,"src":"9741:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1434,"nodeType":"VariableDeclarationStatement","src":"9741:19:8"},{"AST":{"nativeSrc":"9795:174:8","nodeType":"YulBlock","src":"9795:174:8","statements":[{"nativeSrc":"9809:71:8","nodeType":"YulAssignment","src":"9809:71:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:8","nodeType":"YulIdentifier","src":"9825:3:8"},"nativeSrc":"9825:5:8","nodeType":"YulFunctionCall","src":"9825:5:8"},{"name":"token","nativeSrc":"9832:5:8","nodeType":"YulIdentifier","src":"9832:5:8"},{"kind":"number","nativeSrc":"9839:1:8","nodeType":"YulLiteral","src":"9839:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:8","nodeType":"YulIdentifier","src":"9846:4:8"},{"kind":"number","nativeSrc":"9852:4:8","nodeType":"YulLiteral","src":"9852:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:8","nodeType":"YulIdentifier","src":"9842:3:8"},"nativeSrc":"9842:15:8","nodeType":"YulFunctionCall","src":"9842:15:8"},{"arguments":[{"name":"data","nativeSrc":"9865:4:8","nodeType":"YulIdentifier","src":"9865:4:8"}],"functionName":{"name":"mload","nativeSrc":"9859:5:8","nodeType":"YulIdentifier","src":"9859:5:8"},"nativeSrc":"9859:11:8","nodeType":"YulFunctionCall","src":"9859:11:8"},{"kind":"number","nativeSrc":"9872:1:8","nodeType":"YulLiteral","src":"9872:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:8","nodeType":"YulLiteral","src":"9875:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:8","nodeType":"YulIdentifier","src":"9820:4:8"},"nativeSrc":"9820:60:8","nodeType":"YulFunctionCall","src":"9820:60:8"},"variableNames":[{"name":"success","nativeSrc":"9809:7:8","nodeType":"YulIdentifier","src":"9809:7:8"}]},{"nativeSrc":"9893:30:8","nodeType":"YulAssignment","src":"9893:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:8","nodeType":"YulIdentifier","src":"9907:14:8"},"nativeSrc":"9907:16:8","nodeType":"YulFunctionCall","src":"9907:16:8"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:8","nodeType":"YulIdentifier","src":"9893:10:8"}]},{"nativeSrc":"9936:23:8","nodeType":"YulAssignment","src":"9936:23:8","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:8","nodeType":"YulLiteral","src":"9957:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:8","nodeType":"YulIdentifier","src":"9951:5:8"},"nativeSrc":"9951:8:8","nodeType":"YulFunctionCall","src":"9951:8:8"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:8","nodeType":"YulIdentifier","src":"9936:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1421,"isOffset":false,"isSlot":false,"src":"9846:4:8","valueSize":1},{"declaration":1421,"isOffset":false,"isSlot":false,"src":"9865:4:8","valueSize":1},{"declaration":1430,"isOffset":false,"isSlot":false,"src":"9893:10:8","valueSize":1},{"declaration":1433,"isOffset":false,"isSlot":false,"src":"9936:11:8","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"9809:7:8","valueSize":1},{"declaration":1419,"isOffset":false,"isSlot":false,"src":"9832:5:8","valueSize":1}],"flags":["memory-safe"],"id":1435,"nodeType":"InlineAssembly","src":"9770:199:8"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9985:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"9997:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10048:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1442,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"10023:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:8","typeDescriptions":{}}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:8","memberName":"code","nodeType":"MemberAccess","src":"10015:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:8","memberName":"length","nodeType":"MemberAccess","src":"10015:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1425,"id":1454,"nodeType":"Return","src":"9978:87:8"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"9096:491:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:8","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"token","nameLocation":"9632:5:8","nodeType":"VariableDeclaration","scope":1456,"src":"9625:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1418,"nodeType":"UserDefinedTypeName","pathNode":{"id":1417,"name":"IERC20","nameLocations":["9625:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"9625:6:8"},"referencedDeclaration":967,"src":"9625:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"data","nameLocation":"9652:4:8","nodeType":"VariableDeclaration","scope":1456,"src":"9639:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1420,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:8"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"9675:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1423,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:8"},"scope":1457,"src":"9592:480:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1458,"src":"698:9376:8","usedErrors":[1005,1014],"usedEvents":[]}],"src":"115:9960:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1487]},"id":1488,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1459,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1487,"linearizedBaseContracts":[1487],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1468,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":1465,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1464,"id":1467,"nodeType":"Return","src":"728:17:9"}]},"id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1469,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":1487,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1477,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":1474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1473,"id":1476,"nodeType":"Return","src":"835:15:9"}]},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1478,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1471,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":1487,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1485,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1482,"id":1484,"nodeType":"Return","src":"945:8:9"}]},"id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":1487,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1488,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1487],"Pausable":[1595]},"id":1596,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1489,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1596,"sourceUnit":1488,"src":"128:45:10","symbolAliases":[{"foreign":{"id":1490,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"136:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1493,"name":"Context","nameLocations":["645:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1487,"src":"645:7:10"},"id":1494,"nodeType":"InheritanceSpecifier","src":"645:7:10"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"175:439:10","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1595,"linearizedBaseContracts":[1595,1487],"name":"Pausable","nameLocation":"633:8:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1496,"mutability":"mutable","name":"_paused","nameLocation":"672:7:10","nodeType":"VariableDeclaration","scope":1595,"src":"659:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1495,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"686:73:10","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1501,"name":"Paused","nameLocation":"770:6:10","nodeType":"EventDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:10","nodeType":"VariableDeclaration","scope":1501,"src":"777:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:10"},"src":"764:30:10"},{"anonymous":false,"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"800:70:10","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1506,"name":"Unpaused","nameLocation":"881:8:10","nodeType":"EventDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:10","nodeType":"VariableDeclaration","scope":1506,"src":"890:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:10"},"src":"875:32:10"},{"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"913:76:10","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1509,"name":"EnforcedPause","nameLocation":"1000:13:10","nodeType":"ErrorDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[],"src":"1013:2:10"},"src":"994:22:10"},{"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"1022:80:10","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1512,"name":"ExpectedPause","nameLocation":"1113:13:10","nodeType":"ErrorDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[],"src":"1126:2:10"},"src":"1107:22:10"},{"body":{"id":1519,"nodeType":"Block","src":"1340:47:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1515,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"1350:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1517,"nodeType":"ExpressionStatement","src":"1350:19:10"},{"id":1518,"nodeType":"PlaceholderStatement","src":"1379:1:10"}]},"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"1135:175:10","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1520,"name":"whenNotPaused","nameLocation":"1324:13:10","nodeType":"ModifierDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[],"src":"1337:2:10"},"src":"1315:72:10","virtual":false,"visibility":"internal"},{"body":{"id":1527,"nodeType":"Block","src":"1587:44:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1523,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"1597:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1525,"nodeType":"ExpressionStatement","src":"1597:16:10"},{"id":1526,"nodeType":"PlaceholderStatement","src":"1623:1:10"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"1393:167:10","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1528,"name":"whenPaused","nameLocation":"1574:10:10","nodeType":"ModifierDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[],"src":"1584:2:10"},"src":"1565:66:10","virtual":false,"visibility":"internal"},{"body":{"id":1536,"nodeType":"Block","src":"1779:31:10","statements":[{"expression":{"id":1534,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1796:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1533,"id":1535,"nodeType":"Return","src":"1789:14:10"}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"1637:84:10","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1537,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:10","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[],"src":"1741:2:10"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1537,"src":"1773:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1531,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:10"},"scope":1595,"src":"1726:84:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1548,"nodeType":"Block","src":"1929:77:10","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1541,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"1943:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1547,"nodeType":"IfStatement","src":"1939:61:10","trueBody":{"id":1546,"nodeType":"Block","src":"1953:47:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1543,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"1974:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"RevertStatement","src":"1967:22:10"}]}}]},"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"1816:57:10","text":" @dev Throws if the contract is paused."},"id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:10","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[],"src":"1904:2:10"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[],"src":"1929:0:10"},"scope":1595,"src":"1878:128:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1561,"nodeType":"Block","src":"2126:78:10","statements":[{"condition":{"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:10","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1553,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"2141:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1560,"nodeType":"IfStatement","src":"2136:62:10","trueBody":{"id":1559,"nodeType":"Block","src":"2151:47:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1556,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2172:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1558,"nodeType":"RevertStatement","src":"2165:22:10"}]}}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"2012:61:10","text":" @dev Throws if the contract is not paused."},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:10","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[],"src":"2101:2:10"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[],"src":"2126:0:10"},"scope":1595,"src":"2078:126:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1577,"nodeType":"Block","src":"2388:66:10","statements":[{"expression":{"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1568,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2398:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1571,"nodeType":"ExpressionStatement","src":"2398:14:10"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1573,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"2434:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1572,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"2427:6:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1576,"nodeType":"EmitStatement","src":"2422:25:10"}]},"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"2210:124:10","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1578,"implemented":true,"kind":"function","modifiers":[{"id":1566,"kind":"modifierInvocation","modifierName":{"id":1565,"name":"whenNotPaused","nameLocations":["2374:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1520,"src":"2374:13:10"},"nodeType":"ModifierInvocation","src":"2374:13:10"}],"name":"_pause","nameLocation":"2348:6:10","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"2354:2:10"},"returnParameters":{"id":1567,"nodeType":"ParameterList","parameters":[],"src":"2388:0:10"},"scope":1595,"src":"2339:115:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"2634:69:10","statements":[{"expression":{"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1584,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2644:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1587,"nodeType":"ExpressionStatement","src":"2644:15:10"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1589,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"2683:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1588,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2674:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"EmitStatement","src":"2669:27:10"}]},"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"2460:121:10","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1594,"implemented":true,"kind":"function","modifiers":[{"id":1582,"kind":"modifierInvocation","modifierName":{"id":1581,"name":"whenPaused","nameLocations":["2623:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1528,"src":"2623:10:10"},"nodeType":"ModifierInvocation","src":"2623:10:10"}],"name":"_unpause","nameLocation":"2595:8:10","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[],"src":"2603:2:10"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[],"src":"2634:0:10"},"scope":1595,"src":"2586:117:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1596,"src":"615:2090:10","usedErrors":[1509,1512],"usedEvents":[1501,1506]}],"src":"102:2604:10"},"id":10},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1664]},"id":1665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1597,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"135:894:11","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1664,"linearizedBaseContracts":[1664],"name":"ReentrancyGuard","nameLocation":"1048:15:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1601,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:11","nodeType":"VariableDeclaration","scope":1664,"src":"1818:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1604,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:11","nodeType":"VariableDeclaration","scope":1664,"src":"1864:36:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1606,"mutability":"mutable","name":"_status","nameLocation":"1923:7:11","nodeType":"VariableDeclaration","scope":1664,"src":"1907:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"1937:52:11","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1609,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:11","nodeType":"ErrorDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"2028:2:11"},"src":"1994:37:11"},{"body":{"id":1616,"nodeType":"Block","src":"2051:38:11","statements":[{"expression":{"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1612,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2061:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1613,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2071:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1615,"nodeType":"ExpressionStatement","src":"2061:21:11"}]},"id":1617,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"2048:2:11"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"2051:0:11"},"scope":1664,"src":"2037:52:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1627,"nodeType":"Block","src":"2490:79:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1620,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"2500:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1622,"nodeType":"ExpressionStatement","src":"2500:21:11"},{"id":1623,"nodeType":"PlaceholderStatement","src":"2531:1:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1624,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2542:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1626,"nodeType":"ExpressionStatement","src":"2542:20:11"}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"2095:366:11","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1628,"name":"nonReentrant","nameLocation":"2475:12:11","nodeType":"ModifierDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[],"src":"2487:2:11"},"src":"2466:103:11","virtual":false,"visibility":"internal"},{"body":{"id":1643,"nodeType":"Block","src":"2614:268:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1631,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2702:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1632,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2713:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1638,"nodeType":"IfStatement","src":"2698:86:11","trueBody":{"id":1637,"nodeType":"Block","src":"2722:62:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1634,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"2743:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1636,"nodeType":"RevertStatement","src":"2736:37:11"}]}},{"expression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1639,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2858:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1640,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2868:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1642,"nodeType":"ExpressionStatement","src":"2858:17:11"}]},"id":1644,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:11","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"2603:2:11"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[],"src":"2614:0:11"},"scope":1664,"src":"2575:307:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1651,"nodeType":"Block","src":"2926:170:11","statements":[{"expression":{"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1647,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"3068:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1648,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"3078:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1650,"nodeType":"ExpressionStatement","src":"3068:21:11"}]},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:11","nodeType":"FunctionDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[],"src":"2915:2:11"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[],"src":"2926:0:11"},"scope":1664,"src":"2888:208:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1662,"nodeType":"Block","src":"3339:42:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"3356:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1659,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"3367:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1657,"id":1661,"nodeType":"Return","src":"3349:25:11"}]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"3102:168:11","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:11","nodeType":"FunctionDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[],"src":"3307:2:11"},"returnParameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"3333:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1655,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:11"},"scope":1664,"src":"3275:106:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1665,"src":"1030:2353:11","usedErrors":[1609],"usedEvents":[]}],"src":"109:3275:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1676]},"id":1677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1666,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"142:280:12","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1676,"linearizedBaseContracts":[1676],"name":"IERC165","nameLocation":"433:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"447:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1675,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:12","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:12","nodeType":"VariableDeclaration","scope":1675,"src":"819:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1669,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:12"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1675,"src":"862:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1672,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:12"},"scope":1676,"src":"792:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1677,"src":"423:447:12","usedErrors":[],"usedEvents":[]}],"src":"115:756:12"},"id":12},"contracts/FlowFusionBridge.sol":{"ast":{"absolutePath":"contracts/FlowFusionBridge.sol","exportedSymbols":{"Context":[1487],"FlowFusionBridge":[3286],"IERC1363":[229],"IERC20":[967],"IFlowFusionBridge":[3502],"Ownable":[147],"Pausable":[1595],"ReentrancyGuard":[1664],"SafeERC20":[1457],"TWAPMath":[4222]},"id":3287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1678,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":1679,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":1665,"src":"61:59:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":1680,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":1596,"src":"122:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1681,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":148,"src":"176:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1682,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":968,"src":"230:56:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1683,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":1458,"src":"288:65:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/TWAPMath.sol","file":"./libraries/TWAPMath.sol","id":1684,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":4223,"src":"355:34:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IFlowFusionBridge.sol","file":"./interfaces/IFlowFusionBridge.sol","id":1685,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":3503,"src":"391:44:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1687,"name":"IFlowFusionBridge","nameLocations":["700:17:13"],"nodeType":"IdentifierPath","referencedDeclaration":3502,"src":"700:17:13"},"id":1688,"nodeType":"InheritanceSpecifier","src":"700:17:13"},{"baseName":{"id":1689,"name":"ReentrancyGuard","nameLocations":["725:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"725:15:13"},"id":1690,"nodeType":"InheritanceSpecifier","src":"725:15:13"},{"baseName":{"id":1691,"name":"Pausable","nameLocations":["748:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"748:8:13"},"id":1692,"nodeType":"InheritanceSpecifier","src":"748:8:13"},{"baseName":{"id":1693,"name":"Ownable","nameLocations":["764:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"764:7:13"},"id":1694,"nodeType":"InheritanceSpecifier","src":"764:7:13"}],"canonicalName":"FlowFusionBridge","contractDependencies":[],"contractKind":"contract","documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"439:224:13","text":" @title FlowFusion Bridge\n @notice Multi-chain TWAP bridge for professional trading with MEV protection\n @dev Handles order creation, TWAP execution, and cross-chain coordination\n @author FlowFusion Team"},"fullyImplemented":true,"id":3286,"linearizedBaseContracts":[3286,147,1595,1487,1664,3502],"name":"FlowFusionBridge","nameLocation":"674:16:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1698,"libraryName":{"id":1695,"name":"SafeERC20","nameLocations":["787:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"787:9:13"},"nodeType":"UsingForDirective","src":"781:27:13","typeName":{"id":1697,"nodeType":"UserDefinedTypeName","pathNode":{"id":1696,"name":"IERC20","nameLocations":["801:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"801:6:13"},"referencedDeclaration":967,"src":"801:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}},{"global":false,"id":1701,"libraryName":{"id":1699,"name":"TWAPMath","nameLocations":["820:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":4222,"src":"820:8:13"},"nodeType":"UsingForDirective","src":"814:27:13","typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"e1f1c4a7","id":1704,"mutability":"constant","name":"BASIS_POINTS","nameLocation":"1062:12:13","nodeType":"VariableDeclaration","scope":3286,"src":"1038:44:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:5:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"f9759518","id":1707,"mutability":"constant","name":"MAX_SLIPPAGE","nameLocation":"1113:12:13","nodeType":"VariableDeclaration","scope":3286,"src":"1089:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1089:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1128:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"constant":true,"functionSelector":"e6a73b63","id":1710,"mutability":"constant","name":"MIN_WINDOW_MINUTES","nameLocation":"1170:18:13","nodeType":"VariableDeclaration","scope":3286,"src":"1146:46:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1146:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1191:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":true,"functionSelector":"1def6ffe","id":1713,"mutability":"constant","name":"MAX_WINDOW_MINUTES","nameLocation":"1223:18:13","nodeType":"VariableDeclaration","scope":3286,"src":"1199:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31343430","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1244:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1440_by_1","typeString":"int_const 1440"},"value":"1440"},"visibility":"public"},{"constant":true,"functionSelector":"d62e5d79","id":1716,"mutability":"constant","name":"MAX_EXECUTION_INTERVALS","nameLocation":"1291:23:13","nodeType":"VariableDeclaration","scope":3286,"src":"1267:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1317:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"fca98ac6","id":1719,"mutability":"constant","name":"MIN_EXECUTION_AMOUNT","nameLocation":"1350:20:13","nodeType":"VariableDeclaration","scope":3286,"src":"1326:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1373:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"constant":true,"functionSelector":"ffa1ad74","id":1722,"mutability":"constant","name":"VERSION","nameLocation":"1447:7:13","nodeType":"VariableDeclaration","scope":3286,"src":"1423:35:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1457:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"9c3f1e90","id":1727,"mutability":"mutable","name":"orders","nameLocation":"1690:6:13","nodeType":"VariableDeclaration","scope":3286,"src":"1653:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder)"},"typeName":{"id":1726,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1661:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1653:29:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1725,"nodeType":"UserDefinedTypeName","pathNode":{"id":1724,"name":"TWAPOrder","nameLocations":["1672:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3333,"src":"1672:9:13"},"referencedDeclaration":3333,"src":"1672:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"}}},"visibility":"public"},{"constant":false,"functionSelector":"856652e9","id":1732,"mutability":"mutable","name":"userOrders","nameLocation":"1740:10:13","nodeType":"VariableDeclaration","scope":3286,"src":"1703:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"typeName":{"id":1731,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1703:29:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1722:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1730,"nodeType":"ArrayTypeName","src":"1722:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"a6329c7f","id":1738,"mutability":"mutable","name":"executionHistory","nameLocation":"1802:16:13","nodeType":"VariableDeclaration","scope":3286,"src":"1757:61:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.ExecutionRecord[])"},"typeName":{"id":1737,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1765:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1757:37:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.ExecutionRecord[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1735,"nodeType":"UserDefinedTypeName","pathNode":{"id":1734,"name":"ExecutionRecord","nameLocations":["1776:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":3344,"src":"1776:15:13"},"referencedDeclaration":3344,"src":"1776:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExecutionRecord_$3344_storage_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord"}},"id":1736,"nodeType":"ArrayTypeName","src":"1776:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"6c30aaa2","id":1742,"mutability":"mutable","name":"supportedChains","nameLocation":"1856:15:13","nodeType":"VariableDeclaration","scope":3286,"src":"1825:46:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":1741,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"1833:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1825:23:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1740,"name":"bool","nodeType":"ElementaryTypeName","src":"1843:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"679d86a7","id":1746,"mutability":"mutable","name":"authorizedExecutors","nameLocation":"1910:19:13","nodeType":"VariableDeclaration","scope":3286,"src":"1878:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1745,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"1886:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1878:24:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1744,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"ec4eb4f9","id":1750,"mutability":"mutable","name":"userOrderCount","nameLocation":"1971:14:13","nodeType":"VariableDeclaration","scope":3286,"src":"1936:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1749,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"1944:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1936:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1955:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"16f8de89","id":1752,"mutability":"mutable","name":"orderNonce","nameLocation":"2040:10:13","nodeType":"VariableDeclaration","scope":3286,"src":"2025:25:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"2025:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1d834409","id":1754,"mutability":"mutable","name":"totalOrders","nameLocation":"2072:11:13","nodeType":"VariableDeclaration","scope":3286,"src":"2057:26:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"2057:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5f81a57c","id":1756,"mutability":"mutable","name":"totalVolume","nameLocation":"2105:11:13","nodeType":"VariableDeclaration","scope":3286,"src":"2090:26:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"2090:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c415b95c","id":1758,"mutability":"mutable","name":"feeCollector","nameLocation":"2138:12:13","nodeType":"VariableDeclaration","scope":3286,"src":"2123:27:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"58f85880","id":1760,"mutability":"mutable","name":"protocolFeeRate","nameLocation":"2172:15:13","nodeType":"VariableDeclaration","scope":3286,"src":"2157:30:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5d830dd1","id":1763,"mutability":"mutable","name":"maxOrdersPerUser","nameLocation":"2225:16:13","nodeType":"VariableDeclaration","scope":3286,"src":"2210:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2244:3:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"anonymous":false,"eventSelector":"e4096eaa9aa9b8f8e8ca77df4dff5052b5d6282c11b6653afbca6a5a7574c8da","id":1777,"name":"TWAPExecution","nameLocation":"2724:13:13","nodeType":"EventDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"2764:7:13","nodeType":"VariableDeclaration","scope":1777,"src":"2748:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2748:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1767,"indexed":false,"mutability":"mutable","name":"intervalNumber","nameLocation":"2790:14:13","nodeType":"VariableDeclaration","scope":1777,"src":"2782:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2782:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1769,"indexed":false,"mutability":"mutable","name":"executedAmount","nameLocation":"2823:14:13","nodeType":"VariableDeclaration","scope":1777,"src":"2815:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2815:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1771,"indexed":false,"mutability":"mutable","name":"averagePrice","nameLocation":"2856:12:13","nodeType":"VariableDeclaration","scope":1777,"src":"2848:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2848:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1773,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2887:9:13","nodeType":"VariableDeclaration","scope":1777,"src":"2879:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"2879:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1775,"indexed":false,"mutability":"mutable","name":"executor","nameLocation":"2915:8:13","nodeType":"VariableDeclaration","scope":1777,"src":"2907:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"2907:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2737:193:13"},"src":"2718:213:13"},{"anonymous":false,"eventSelector":"de99ce77ac3ae0048f3c53988bc6ee856041365b692310c98f709f2e2a6cfbea","id":1787,"name":"OrderCompleted","nameLocation":"2945:14:13","nodeType":"EventDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"2986:7:13","nodeType":"VariableDeclaration","scope":1787,"src":"2970:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2970:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1781,"indexed":false,"mutability":"mutable","name":"totalExecuted","nameLocation":"3012:13:13","nodeType":"VariableDeclaration","scope":1787,"src":"3004:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3004:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1783,"indexed":false,"mutability":"mutable","name":"averagePrice","nameLocation":"3044:12:13","nodeType":"VariableDeclaration","scope":1787,"src":"3036:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1785,"indexed":false,"mutability":"mutable","name":"completionTime","nameLocation":"3075:14:13","nodeType":"VariableDeclaration","scope":1787,"src":"3067:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"3067:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2959:137:13"},"src":"2939:158:13"},{"anonymous":false,"eventSelector":"e5511acce6fbdf775b76e2921d9f62d7f15be4fd9d14a6deb11cca46a5883f6e","id":1797,"name":"OrderCancelled","nameLocation":"3111:14:13","nodeType":"EventDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"3152:7:13","nodeType":"VariableDeclaration","scope":1797,"src":"3136:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1791,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3186:4:13","nodeType":"VariableDeclaration","scope":1797,"src":"3170:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"3170:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1793,"indexed":false,"mutability":"mutable","name":"refundAmount","nameLocation":"3209:12:13","nodeType":"VariableDeclaration","scope":1797,"src":"3201:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"3201:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1795,"indexed":false,"mutability":"mutable","name":"cancelledAt","nameLocation":"3240:11:13","nodeType":"VariableDeclaration","scope":1797,"src":"3232:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3125:133:13"},"src":"3105:154:13"},{"anonymous":false,"eventSelector":"600ffd9313a629c5acdcb599e269730b878ff6653f1fc57f573686e2df43fa13","id":1807,"name":"HTLCClaimed","nameLocation":"3438:11:13","nodeType":"EventDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"3476:7:13","nodeType":"VariableDeclaration","scope":1807,"src":"3460:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3460:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1801,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"3502:6:13","nodeType":"VariableDeclaration","scope":1807,"src":"3494:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3494:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1803,"indexed":false,"mutability":"mutable","name":"claimer","nameLocation":"3527:7:13","nodeType":"VariableDeclaration","scope":1807,"src":"3519:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"3519:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1805,"indexed":false,"mutability":"mutable","name":"claimedAt","nameLocation":"3553:9:13","nodeType":"VariableDeclaration","scope":1807,"src":"3545:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"3545:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3449:120:13"},"src":"3432:138:13"},{"anonymous":false,"eventSelector":"cfba6f0d638f02d61bca3cad4c8b0ee671b83be0d14085bda2d196be921be929","id":1815,"name":"ProtocolFeeCollected","nameLocation":"3584:20:13","nodeType":"EventDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"3631:7:13","nodeType":"VariableDeclaration","scope":1815,"src":"3615:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3615:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1811,"indexed":false,"mutability":"mutable","name":"feeAmount","nameLocation":"3657:9:13","nodeType":"VariableDeclaration","scope":1815,"src":"3649:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"3649:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1813,"indexed":false,"mutability":"mutable","name":"feeCollector","nameLocation":"3685:12:13","nodeType":"VariableDeclaration","scope":1815,"src":"3677:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"3677:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3604:100:13"},"src":"3578:127:13"},{"body":{"id":1826,"nodeType":"Block","src":"3935:110:13","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1818,"name":"authorizedExecutors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"3954:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1821,"indexExpression":{"expression":{"id":1819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3974:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3978:6:13","memberName":"sender","nodeType":"MemberAccess","src":"3974:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3954:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a204e6f7420617574686f72697a6564206578656375746f72","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3987:37:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_89b4848df650a7f8b70d3bf5e5bacba821cb89f895e83ac331d2550d10aef691","typeString":"literal_string \"FlowFusion: Not authorized executor\""},"value":"FlowFusion: Not authorized executor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_89b4848df650a7f8b70d3bf5e5bacba821cb89f895e83ac331d2550d10aef691","typeString":"literal_string \"FlowFusion: Not authorized executor\""}],"id":1817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3946:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3946:79:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1824,"nodeType":"ExpressionStatement","src":"3946:79:13"},{"id":1825,"nodeType":"PlaceholderStatement","src":"4036:1:13"}]},"id":1827,"name":"onlyAuthorizedExecutor","nameLocation":"3910:22:13","nodeType":"ModifierDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[],"src":"3932:2:13"},"src":"3901:144:13","virtual":false,"visibility":"internal"},{"body":{"id":1845,"nodeType":"Block","src":"4091:110:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1832,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"4110:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":1834,"indexExpression":{"id":1833,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"4117:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4110:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"id":1835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4126:4:13","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":3304,"src":"4110:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4142:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4134:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"4134:7:13","typeDescriptions":{}}},"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4134:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4110:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a204f7264657220646f6573206e6f74206578697374","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4146:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_96dee10f5c829733be37ffb6348ec9da7922f42f6677d538ad3c5a1b88c17dff","typeString":"literal_string \"FlowFusion: Order does not exist\""},"value":"FlowFusion: Order does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96dee10f5c829733be37ffb6348ec9da7922f42f6677d538ad3c5a1b88c17dff","typeString":"literal_string \"FlowFusion: Order does not exist\""}],"id":1831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4102:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4102:79:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1843,"nodeType":"ExpressionStatement","src":"4102:79:13"},{"id":1844,"nodeType":"PlaceholderStatement","src":"4192:1:13"}]},"id":1846,"name":"orderExists","nameLocation":"4062:11:13","nodeType":"ModifierDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"orderId","nameLocation":"4082:7:13","nodeType":"VariableDeclaration","scope":1846,"src":"4074:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4074:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4073:17:13"},"src":"4053:148:13","virtual":false,"visibility":"internal"},{"body":{"id":1862,"nodeType":"Block","src":"4247:119:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1851,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"4266:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":1853,"indexExpression":{"id":1852,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4273:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4266:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"id":1854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4282:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3330,"src":"4266:22:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1855,"name":"OrderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"4292:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderStatus_$3350_$","typeString":"type(enum IFlowFusionBridge.OrderStatus)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4304:9:13","memberName":"Executing","nodeType":"MemberAccess","referencedDeclaration":3345,"src":"4292:21:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"src":"4266:47:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a204f72646572206e6f7420616374697665","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4315:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_57c7c105d21087363de429aba7e56c638e9e7814059557f35cdf445761d15f23","typeString":"literal_string \"FlowFusion: Order not active\""},"value":"FlowFusion: Order not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_57c7c105d21087363de429aba7e56c638e9e7814059557f35cdf445761d15f23","typeString":"literal_string \"FlowFusion: Order not active\""}],"id":1850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4258:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4258:88:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"4258:88:13"},{"id":1861,"nodeType":"PlaceholderStatement","src":"4357:1:13"}]},"id":1863,"name":"orderActive","nameLocation":"4218:11:13","nodeType":"ModifierDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"orderId","nameLocation":"4238:7:13","nodeType":"VariableDeclaration","scope":1863,"src":"4230:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4230:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4229:17:13"},"src":"4209:157:13","virtual":false,"visibility":"internal"},{"body":{"id":1879,"nodeType":"Block","src":"4415:105:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1868,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"4434:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":1870,"indexExpression":{"id":1869,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4441:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4434:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"id":1871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4450:4:13","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":3304,"src":"4434:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4458:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4462:6:13","memberName":"sender","nodeType":"MemberAccess","src":"4458:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4434:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a204e6f74206f72646572206f776e6572","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4470:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_28049170c4205a1836688161d832170b7d6082c8c2c53d1a2963ca99c6ba5df5","typeString":"literal_string \"FlowFusion: Not order owner\""},"value":"FlowFusion: Not order owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_28049170c4205a1836688161d832170b7d6082c8c2c53d1a2963ca99c6ba5df5","typeString":"literal_string \"FlowFusion: Not order owner\""}],"id":1867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4426:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4426:74:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1877,"nodeType":"ExpressionStatement","src":"4426:74:13"},{"id":1878,"nodeType":"PlaceholderStatement","src":"4511:1:13"}]},"id":1880,"name":"onlyOrderOwner","nameLocation":"4383:14:13","nodeType":"ModifierDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"orderId","nameLocation":"4406:7:13","nodeType":"VariableDeclaration","scope":1880,"src":"4398:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4398:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4397:17:13"},"src":"4374:146:13","virtual":false,"visibility":"internal"},{"body":{"id":1958,"nodeType":"Block","src":"4823:632:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"_feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"4842:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4867:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4859:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"4859:7:13","typeDescriptions":{}}},"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4859:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4842:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c69642066656520636f6c6c6563746f72","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4871:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5403cd0503b7780f2d4a47d0be8a97686db096d95cafe2c7945a9e2a89c9307e","typeString":"literal_string \"FlowFusion: Invalid fee collector\""},"value":"FlowFusion: Invalid fee collector"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5403cd0503b7780f2d4a47d0be8a97686db096d95cafe2c7945a9e2a89c9307e","typeString":"literal_string \"FlowFusion: Invalid fee collector\""}],"id":1891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4834:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"ExpressionStatement","src":"4834:73:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1902,"name":"_protocolFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"4926:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4946:3:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4926:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20466565207261746520746f6f2068696768","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4951:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f176657fe7bd39fdf95f400daeaad37036ea0a914f4940decc54e41cd2c84707","typeString":"literal_string \"FlowFusion: Fee rate too high\""},"value":"FlowFusion: Fee rate too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f176657fe7bd39fdf95f400daeaad37036ea0a914f4940decc54e41cd2c84707","typeString":"literal_string \"FlowFusion: Fee rate too high\""}],"id":1901,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4918:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4918:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1907,"nodeType":"ExpressionStatement","src":"4918:65:13"},{"expression":{"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1908,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"5014:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1909,"name":"_feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"5029:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5014:28:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1911,"nodeType":"ExpressionStatement","src":"5014:28:13"},{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1912,"name":"protocolFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5053:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1913,"name":"_protocolFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"5071:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5053:34:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"5053:34:13"},{"expression":{"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1916,"name":"supportedChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5148:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":1918,"indexExpression":{"hexValue":"636f736d6f73","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5164:8:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd0caab714c7e13c9cdac9c7ba1a5de819d5977baf81b2494d77c12ce653cf95","typeString":"literal_string \"cosmos\""},"value":"cosmos"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5148:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5176:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5148:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1921,"nodeType":"ExpressionStatement","src":"5148:32:13"},{"expression":{"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1922,"name":"supportedChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5191:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":1924,"indexExpression":{"hexValue":"7374656c6c6172","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5207:9:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5998dae77df7daa2be0865a87c92772385ba981209e76c2c3fde17b96885485","typeString":"literal_string \"stellar\""},"value":"stellar"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5191:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5220:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5191:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1927,"nodeType":"ExpressionStatement","src":"5191:33:13"},{"expression":{"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1928,"name":"supportedChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5235:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":1930,"indexExpression":{"hexValue":"626974636f696e","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5251:9:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dee6e1aa550de37364ec77e03e62ea56bf42037b8297280de9d844d88444e4d","typeString":"literal_string \"bitcoin\""},"value":"bitcoin"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5235:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5264:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5235:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1933,"nodeType":"ExpressionStatement","src":"5235:33:13"},{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1934,"name":"supportedChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5279:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":1936,"indexExpression":{"hexValue":"657468657265756d","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5295:10:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_541111248b45b7a8dc3f5579f630e74cb01456ea6ac067d3f4d793245a255155","typeString":"literal_string \"ethereum\""},"value":"ethereum"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5279:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5309:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5279:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1939,"nodeType":"ExpressionStatement","src":"5279:34:13"},{"expression":{"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1940,"name":"supportedChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5324:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":1942,"indexExpression":{"hexValue":"706f6c79676f6e","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5340:9:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac63fa1fe369e75c38d62f0f4d465b48b3cd5159f0fb416332899402031d1408","typeString":"literal_string \"polygon\""},"value":"polygon"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5324:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5353:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5324:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1945,"nodeType":"ExpressionStatement","src":"5324:33:13"},{"expression":{"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1946,"name":"supportedChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5368:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":1948,"indexExpression":{"hexValue":"617262697472756d","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5384:10:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9186606d55c571b43a756333453d90ab5653c483deb4980cda697bfa36fba5de","typeString":"literal_string \"arbitrum\""},"value":"arbitrum"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5368:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5398:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5368:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1951,"nodeType":"ExpressionStatement","src":"5368:34:13"},{"expression":{"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1952,"name":"supportedChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5413:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":1954,"indexExpression":{"hexValue":"6f7074696d69736d","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5429:10:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_09d0f27659ee556a8134fa56941e42400e672aecc2d4cfc61cdb0fcea4590e05","typeString":"literal_string \"optimism\""},"value":"optimism"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5413:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5443:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5413:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1957,"nodeType":"ExpressionStatement","src":"5413:34:13"}]},"id":1959,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1887,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4811:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4815:6:13","memberName":"sender","nodeType":"MemberAccess","src":"4811:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1889,"kind":"baseConstructorSpecifier","modifierName":{"id":1886,"name":"Ownable","nameLocations":["4803:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"4803:7:13"},"nodeType":"ModifierInvocation","src":"4803:19:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"_feeCollector","nameLocation":"4747:13:13","nodeType":"VariableDeclaration","scope":1959,"src":"4739:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"4739:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"_protocolFeeRate","nameLocation":"4779:16:13","nodeType":"VariableDeclaration","scope":1959,"src":"4771:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"4771:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4728:74:13"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[],"src":"4823:0:13"},"scope":3286,"src":"4717:738:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3436],"body":{"id":2222,"nodeType":"Block","src":"6609:3187:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1987,"name":"sourceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"6656:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1988,"name":"MIN_EXECUTION_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"6672:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6656:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20416d6f756e7420746f6f20736d616c6c","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6694:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_71f785f64db198907a45c117fe4c682b95a2d461b250d5fe826e8b10adf35c2a","typeString":"literal_string \"FlowFusion: Amount too small\""},"value":"FlowFusion: Amount too small"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71f785f64db198907a45c117fe4c682b95a2d461b250d5fe826e8b10adf35c2a","typeString":"literal_string \"FlowFusion: Amount too small\""}],"id":1986,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6648:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6648:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1992,"nodeType":"ExpressionStatement","src":"6648:77:13"},{"expression":{"arguments":[{"baseExpression":{"id":1994,"name":"supportedChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"6744:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":1996,"indexExpression":{"id":1995,"name":"targetChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"6760:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6744:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20556e737570706f727465642074617267657420636861696e","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6774:38:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_224ec0b6ee2143059da0b60868f3b0c1c8a74941e655d1ced23dfdc209161373","typeString":"literal_string \"FlowFusion: Unsupported target chain\""},"value":"FlowFusion: Unsupported target chain"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_224ec0b6ee2143059da0b60868f3b0c1c8a74941e655d1ced23dfdc209161373","typeString":"literal_string \"FlowFusion: Unsupported target chain\""}],"id":1993,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6736:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1999,"nodeType":"ExpressionStatement","src":"6736:77:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2003,"name":"targetToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"6838:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6832:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2001,"name":"bytes","nodeType":"ElementaryTypeName","src":"6832:5:13","typeDescriptions":{}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6832:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6851:6:13","memberName":"length","nodeType":"MemberAccess","src":"6832:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6860:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6832:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c69642074617267657420746f6b656e","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6863:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_dec2e84b6a6049693e0fb8e304c611981d1066d58637ed4dc875a7d03dd3c76e","typeString":"literal_string \"FlowFusion: Invalid target token\""},"value":"FlowFusion: Invalid target token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dec2e84b6a6049693e0fb8e304c611981d1066d58637ed4dc875a7d03dd3c76e","typeString":"literal_string \"FlowFusion: Invalid target token\""}],"id":2000,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6824:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6824:74:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2010,"nodeType":"ExpressionStatement","src":"6824:74:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2014,"name":"targetRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"6923:15:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6917:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2012,"name":"bytes","nodeType":"ElementaryTypeName","src":"6917:5:13","typeDescriptions":{}}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6917:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6940:6:13","memberName":"length","nodeType":"MemberAccess","src":"6917:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6949:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6917:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c696420726563697069656e74","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6952:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a7b1f330bf666b97bec841a1d6a4173b920a637933f7d5a8f9dffd317b14b2","typeString":"literal_string \"FlowFusion: Invalid recipient\""},"value":"FlowFusion: Invalid recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a7b1f330bf666b97bec841a1d6a4173b920a637933f7d5a8f9dffd317b14b2","typeString":"literal_string \"FlowFusion: Invalid recipient\""}],"id":2011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6909:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6909:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2021,"nodeType":"ExpressionStatement","src":"6909:75:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2023,"name":"htlcHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"7003:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7023:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7015:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7015:7:13","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7003:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c69642048544c432068617368","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7027:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6deddce27e44bda975b65ef4a6bbf0ceeb35a1e7ff9e4b3be119e28c589f21f8","typeString":"literal_string \"FlowFusion: Invalid HTLC hash\""},"value":"FlowFusion: Invalid HTLC hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6deddce27e44bda975b65ef4a6bbf0ceeb35a1e7ff9e4b3be119e28c589f21f8","typeString":"literal_string \"FlowFusion: Invalid HTLC hash\""}],"id":2022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6995:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6995:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2031,"nodeType":"ExpressionStatement","src":"6995:64:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2033,"name":"timeoutHeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"7078:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2034,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7094:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7100:6:13","memberName":"number","nodeType":"MemberAccess","src":"7094:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313030","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7109:3:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7094:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7078:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a2054696d656f757420746f6f20736f6f6e","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7114:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_dde99fa7eeea98c31198405246e388138e835cf4ae9d5b1516858fc12da33756","typeString":"literal_string \"FlowFusion: Timeout too soon\""},"value":"FlowFusion: Timeout too soon"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dde99fa7eeea98c31198405246e388138e835cf4ae9d5b1516858fc12da33756","typeString":"literal_string \"FlowFusion: Timeout too soon\""}],"id":2032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7070:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7070:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2041,"nodeType":"ExpressionStatement","src":"7070:75:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2043,"name":"userOrderCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"7187:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2046,"indexExpression":{"expression":{"id":2044,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7202:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7206:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7202:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7187:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2047,"name":"maxOrdersPerUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"7216:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7187:45:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20546f6f206d616e79206f7264657273","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7234:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_626b5fd929c40b7272d4cba51602f726dc77fba4603f2037411b3bff37fec1ea","typeString":"literal_string \"FlowFusion: Too many orders\""},"value":"FlowFusion: Too many orders"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_626b5fd929c40b7272d4cba51602f726dc77fba4603f2037411b3bff37fec1ea","typeString":"literal_string \"FlowFusion: Too many orders\""}],"id":2042,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7179:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7179:85:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2051,"nodeType":"ExpressionStatement","src":"7179:85:13"},{"expression":{"arguments":[{"id":2053,"name":"twapConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"7345:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}],"id":2052,"name":"_validateTWAPConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"7325:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TWAPConfig_$3300_memory_ptr_$returns$__$","typeString":"function (struct IFlowFusionBridge.TWAPConfig memory) pure"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7325:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2055,"nodeType":"ExpressionStatement","src":"7325:31:13"},{"assignments":[2057],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"protocolFee","nameLocation":"7420:11:13","nodeType":"VariableDeclaration","scope":2222,"src":"7412:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"7412:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2064,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"sourceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"7435:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2059,"name":"protocolFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"7450:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7435:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7434:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2062,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"7469:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7434:47:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7412:69:13"},{"assignments":[2066],"declarations":[{"constant":false,"id":2066,"mutability":"mutable","name":"netAmount","nameLocation":"7500:9:13","nodeType":"VariableDeclaration","scope":2222,"src":"7492:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"7492:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2070,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"sourceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"7512:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2068,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"7527:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7512:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7492:46:13"},{"expression":{"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2071,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"7589:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":2075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7640:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7644:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7640:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2077,"name":"sourceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"7665:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2078,"name":"sourceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"7691:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2079,"name":"targetChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"7718:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2080,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7744:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7750:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"7744:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7774:12:13","subExpression":{"id":2082,"name":"orderNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"7774:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2073,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7609:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7613:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"7609:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7609:188:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2072,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7599:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7599:199:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7589:209:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2087,"nodeType":"ExpressionStatement","src":"7589:209:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2088,"name":"sourceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"7857:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7880:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7872:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2089,"name":"address","nodeType":"ElementaryTypeName","src":"7872:7:13","typeDescriptions":{}}},"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7872:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7857:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2154,"nodeType":"Block","src":"8230:364:13","statements":[{"expression":{"arguments":[{"expression":{"id":2126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8282:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8286:6:13","memberName":"sender","nodeType":"MemberAccess","src":"8282:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2130,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8302:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_FlowFusionBridge_$3286","typeString":"contract FlowFusionBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlowFusionBridge_$3286","typeString":"contract FlowFusionBridge"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8294:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"8294:7:13","typeDescriptions":{}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8294:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2132,"name":"sourceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"8309:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2123,"name":"sourceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"8252:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2122,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"8245:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8245:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8265:16:13","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"8245:36:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8245:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"8245:77:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2135,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"8392:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8406:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8392:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"IfStatement","src":"8388:195:13","trueBody":{"id":2152,"nodeType":"Block","src":"8409:174:13","statements":[{"expression":{"arguments":[{"id":2142,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"8461:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2143,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"8475:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2139,"name":"sourceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"8435:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2138,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"8428:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8448:12:13","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1038,"src":"8428:32:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2145,"nodeType":"ExpressionStatement","src":"8428:59:13"},{"eventCall":{"arguments":[{"id":2147,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8532:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2148,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"8541:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2149,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"8554:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2146,"name":"ProtocolFeeCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"8511:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,address)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8511:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"EmitStatement","src":"8506:61:13"}]}}]},"id":2155,"nodeType":"IfStatement","src":"7853:741:13","trueBody":{"id":2121,"nodeType":"Block","src":"7884:340:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2095,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7907:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7911:5:13","memberName":"value","nodeType":"MemberAccess","src":"7907:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2097,"name":"sourceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"7920:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7907:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a2045544820616d6f756e74206d69736d61746368","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7934:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_52c6911bbab08180e49bba0bb08e55bb039a290f9ea7c4a857e2d8b79a664695","typeString":"literal_string \"FlowFusion: ETH amount mismatch\""},"value":"FlowFusion: ETH amount mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52c6911bbab08180e49bba0bb08e55bb039a290f9ea7c4a857e2d8b79a664695","typeString":"literal_string \"FlowFusion: ETH amount mismatch\""}],"id":2094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7899:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7899:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2101,"nodeType":"ExpressionStatement","src":"7899:69:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"8038:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8052:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8038:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"IfStatement","src":"8034:179:13","trueBody":{"id":2119,"nodeType":"Block","src":"8055:158:13","statements":[{"expression":{"arguments":[{"id":2110,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"8105:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2107,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"8082:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8074:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2105,"name":"address","nodeType":"ElementaryTypeName","src":"8074:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8096:8:13","memberName":"transfer","nodeType":"MemberAccess","src":"8074:30:13","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2112,"nodeType":"ExpressionStatement","src":"8074:43:13"},{"eventCall":{"arguments":[{"id":2114,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8162:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2115,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"8171:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2116,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"8184:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2113,"name":"ProtocolFeeCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"8141:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,address)"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8141:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2118,"nodeType":"EmitStatement","src":"8136:61:13"}]}}]}},{"expression":{"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2156,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"8639:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":2158,"indexExpression":{"id":2157,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8646:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8639:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2160,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8686:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2161,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8714:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8718:6:13","memberName":"sender","nodeType":"MemberAccess","src":"8714:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2163,"name":"sourceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"8752:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2164,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"8792:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2165,"name":"targetChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"8859:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2166,"name":"targetToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"8898:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2167,"name":"targetRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"8941:15:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2168,"name":"twapConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"8983:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}},{"id":2169,"name":"htlcHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"9018:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2170,"name":"timeoutHeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"9056:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2171,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9095:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9101:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"9095:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9141:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9172:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":2175,"name":"OrderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"9196:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderStatus_$3350_$","typeString":"type(enum IFlowFusionBridge.OrderStatus)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9208:9:13","memberName":"Executing","nodeType":"MemberAccess","referencedDeclaration":3345,"src":"9196:21:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},{"hexValue":"30","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9246:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2159,"name":"TWAPOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8657:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TWAPOrder_$3333_storage_ptr_$","typeString":"type(struct IFlowFusionBridge.TWAPOrder storage pointer)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8682:2:13","8708:4:13","8739:11:13","8778:12:13","8846:11:13","8885:11:13","8924:15:13","8971:10:13","9008:8:13","9041:13:13","9084:9:13","9125:14:13","9157:13:13","9188:6:13","9232:12:13"],"names":["id","user","sourceToken","sourceAmount","targetChain","targetToken","targetRecipient","twapConfig","htlcHash","timeoutHeight","createdAt","executedAmount","lastExecution","status","averagePrice"],"nodeType":"FunctionCall","src":"8657:602:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder memory"}},"src":"8639:620:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"id":2180,"nodeType":"ExpressionStatement","src":"8639:620:13"},{"expression":{"arguments":[{"id":2186,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"9336:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":2181,"name":"userOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"9308:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":2184,"indexExpression":{"expression":{"id":2182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9319:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9323:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9319:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9308:22:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9331:4:13","memberName":"push","nodeType":"MemberAccess","src":"9308:27:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9308:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2188,"nodeType":"ExpressionStatement","src":"9308:36:13"},{"expression":{"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9355:28:13","subExpression":{"baseExpression":{"id":2189,"name":"userOrderCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"9355:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2192,"indexExpression":{"expression":{"id":2190,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9370:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9374:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9370:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9355:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2194,"nodeType":"ExpressionStatement","src":"9355:28:13"},{"expression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9394:13:13","subExpression":{"id":2195,"name":"totalOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"9394:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2197,"nodeType":"ExpressionStatement","src":"9394:13:13"},{"expression":{"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2198,"name":"totalVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"9418:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2199,"name":"sourceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"9433:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9418:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2201,"nodeType":"ExpressionStatement","src":"9418:27:13"},{"eventCall":{"arguments":[{"id":2203,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"9498:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2204,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9520:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9524:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9520:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2206,"name":"targetChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"9545:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2207,"name":"sourceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"9571:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2208,"name":"sourceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"9597:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2209,"name":"targetToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9624:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2210,"name":"twapConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"9650:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}],"id":2202,"name":"OrderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"9471:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_struct$_TWAPConfig_$3300_memory_ptr_$returns$__$","typeString":"function (bytes32,address,string memory,address,uint256,string memory,struct IFlowFusionBridge.TWAPConfig memory)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9471:200:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2212,"nodeType":"EmitStatement","src":"9466:205:13"},{"eventCall":{"arguments":[{"id":2214,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"9709:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2215,"name":"htlcHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"9718:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2216,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"9728:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2217,"name":"timeoutHeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"9739:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2213,"name":"HTLCCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"9697:11:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,bytes32,uint256,uint256)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2219,"nodeType":"EmitStatement","src":"9692:61:13"},{"expression":{"id":2220,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"9781:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1985,"id":2221,"nodeType":"Return","src":"9774:14:13"}]},"documentation":{"id":1960,"nodeType":"StructuredDocumentation","src":"5655:575:13","text":" @notice Create a new TWAP order for cross-chain execution\n @param sourceToken Address of source token (address(0) for ETH)\n @param sourceAmount Amount of source tokens\n @param targetChain Target blockchain identifier\n @param targetToken Target token identifier\n @param targetRecipient Recipient address on target chain\n @param twapConfig TWAP execution configuration\n @param htlcHash Hash for HTLC mechanism\n @param timeoutHeight Block height timeout\n @return orderId Unique order identifier"},"functionSelector":"518479b3","id":2223,"implemented":true,"kind":"function","modifiers":[{"id":1980,"kind":"modifierInvocation","modifierName":{"id":1979,"name":"nonReentrant","nameLocations":["6556:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1628,"src":"6556:12:13"},"nodeType":"ModifierInvocation","src":"6556:12:13"},{"id":1982,"kind":"modifierInvocation","modifierName":{"id":1981,"name":"whenNotPaused","nameLocations":["6569:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1520,"src":"6569:13:13"},"nodeType":"ModifierInvocation","src":"6569:13:13"}],"name":"createTWAPOrder","nameLocation":"6245:15:13","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"sourceToken","nameLocation":"6279:11:13","nodeType":"VariableDeclaration","scope":2223,"src":"6271:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"6271:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"sourceAmount","nameLocation":"6309:12:13","nodeType":"VariableDeclaration","scope":2223,"src":"6301:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"6301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1966,"mutability":"mutable","name":"targetChain","nameLocation":"6346:11:13","nodeType":"VariableDeclaration","scope":2223,"src":"6332:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1965,"name":"string","nodeType":"ElementaryTypeName","src":"6332:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"targetToken","nameLocation":"6382:11:13","nodeType":"VariableDeclaration","scope":2223,"src":"6368:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1967,"name":"string","nodeType":"ElementaryTypeName","src":"6368:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"targetRecipient","nameLocation":"6418:15:13","nodeType":"VariableDeclaration","scope":2223,"src":"6404:29:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1969,"name":"string","nodeType":"ElementaryTypeName","src":"6404:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"twapConfig","nameLocation":"6462:10:13","nodeType":"VariableDeclaration","scope":2223,"src":"6444:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"},"typeName":{"id":1972,"nodeType":"UserDefinedTypeName","pathNode":{"id":1971,"name":"TWAPConfig","nameLocations":["6444:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":3300,"src":"6444:10:13"},"referencedDeclaration":3300,"src":"6444:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"htlcHash","nameLocation":"6491:8:13","nodeType":"VariableDeclaration","scope":2223,"src":"6483:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6483:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"timeoutHeight","nameLocation":"6518:13:13","nodeType":"VariableDeclaration","scope":2223,"src":"6510:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"6510:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6260:278:13"},"returnParameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"orderId","nameLocation":"6600:7:13","nodeType":"VariableDeclaration","scope":2223,"src":"6592:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6592:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6591:17:13"},"scope":3286,"src":"6236:3560:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3448],"body":{"id":2455,"nodeType":"Block","src":"10362:2838:13","statements":[{"assignments":[2247],"declarations":[{"constant":false,"id":2247,"mutability":"mutable","name":"order","nameLocation":"10391:5:13","nodeType":"VariableDeclaration","scope":2455,"src":"10373:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"},"typeName":{"id":2246,"nodeType":"UserDefinedTypeName","pathNode":{"id":2245,"name":"TWAPOrder","nameLocations":["10373:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3333,"src":"10373:9:13"},"referencedDeclaration":3333,"src":"10373:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"}},"visibility":"internal"}],"id":2251,"initialValue":{"baseExpression":{"id":2248,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"10399:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":2250,"indexExpression":{"id":2249,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"10406:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10399:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10373:41:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"intervalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10481:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10498:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10481:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c696420696e74657276616c20616d6f756e74","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10501:37:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_64548df215cecbfdb2d71d1f31517174b2e2b8473d80389697658d8c2ee77d6d","typeString":"literal_string \"FlowFusion: Invalid interval amount\""},"value":"FlowFusion: Invalid interval amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64548df215cecbfdb2d71d1f31517174b2e2b8473d80389697658d8c2ee77d6d","typeString":"literal_string \"FlowFusion: Invalid interval amount\""}],"id":2252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10473:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2258,"nodeType":"ExpressionStatement","src":"10473:66:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"intervalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10558:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2261,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"10576:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10582:12:13","memberName":"sourceAmount","nodeType":"MemberAccess","referencedDeclaration":3308,"src":"10576:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2263,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"10597:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10603:14:13","memberName":"executedAmount","nodeType":"MemberAccess","referencedDeclaration":3325,"src":"10597:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10576:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10558:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20457863656564732072656d61696e696e67","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10619:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c893ceeb8459185c0ec4f86287ece07f5d488f304b91664cd1670035476f18df","typeString":"literal_string \"FlowFusion: Exceeds remaining\""},"value":"FlowFusion: Exceeds remaining"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c893ceeb8459185c0ec4f86287ece07f5d488f304b91664cd1670035476f18df","typeString":"literal_string \"FlowFusion: Exceeds remaining\""}],"id":2259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:101:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2269,"nodeType":"ExpressionStatement","src":"10550:101:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2271,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10670:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10676:6:13","memberName":"number","nodeType":"MemberAccess","src":"10670:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2273,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"10685:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10691:13:13","memberName":"timeoutHeight","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"10685:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10670:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a204f726465722065787069726564","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10706:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_835977443bf5bc1fe67406ae17490c8e8457d76830ed4608c858d64d858354b7","typeString":"literal_string \"FlowFusion: Order expired\""},"value":"FlowFusion: Order expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_835977443bf5bc1fe67406ae17490c8e8457d76830ed4608c858d64d858354b7","typeString":"literal_string \"FlowFusion: Order expired\""}],"id":2270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10662:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10662:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2278,"nodeType":"ExpressionStatement","src":"10662:72:13"},{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"intervalDuration","nameLocation":"10803:16:13","nodeType":"VariableDeclaration","scope":2455,"src":"10795:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"10795:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2285,"initialValue":{"arguments":[{"expression":{"id":2282,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"10843:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10849:10:13","memberName":"twapConfig","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"10843:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage","typeString":"struct IFlowFusionBridge.TWAPConfig storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage","typeString":"struct IFlowFusionBridge.TWAPConfig storage ref"}],"id":2281,"name":"_getIntervalDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10822:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TWAPConfig_$3300_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IFlowFusionBridge.TWAPConfig memory) pure returns (uint256)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10795:65:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2287,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"10893:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10899:13:13","memberName":"lastExecution","nodeType":"MemberAccess","referencedDeclaration":3327,"src":"10893:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10916:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10893:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2291,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10935:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10941:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"10935:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2293,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"10954:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10960:13:13","memberName":"lastExecution","nodeType":"MemberAccess","referencedDeclaration":3327,"src":"10954:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2295,"name":"intervalDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"10976:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10954:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10935:57:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10893:99:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20546f6f206561726c7920666f72206e65787420657865637574696f6e","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11007:42:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2c65e665fe2b6fbe99fe08da982c033a4c73b7edab8f4a0bcb62882af5c008","typeString":"literal_string \"FlowFusion: Too early for next execution\""},"value":"FlowFusion: Too early for next execution"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2c65e665fe2b6fbe99fe08da982c033a4c73b7edab8f4a0bcb62882af5c008","typeString":"literal_string \"FlowFusion: Too early for next execution\""}],"id":2286,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10871:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10871:189:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2301,"nodeType":"ExpressionStatement","src":"10871:189:13"},{"expression":{"arguments":[{"arguments":[{"id":2304,"name":"executionPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"11165:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2305,"name":"priceProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"11181:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2303,"name":"_verifyPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"11152:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (uint256,bytes calldata) pure returns (bool)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11152:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c6964207072696365","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11194:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d08f7a1681c7a78c233e2c1d404e10be769e43f19de3861ce0f68e5ebba9b16","typeString":"literal_string \"FlowFusion: Invalid price\""},"value":"FlowFusion: Invalid price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d08f7a1681c7a78c233e2c1d404e10be769e43f19de3861ce0f68e5ebba9b16","typeString":"literal_string \"FlowFusion: Invalid price\""}],"id":2302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11144:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11144:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2309,"nodeType":"ExpressionStatement","src":"11144:78:13"},{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"twapPrice","nameLocation":"11295:9:13","nodeType":"VariableDeclaration","scope":2455,"src":"11287:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"11287:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2315,"initialValue":{"arguments":[{"id":2313,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"11322:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2312,"name":"_calculateTWAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"11307:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) view returns (uint256)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11307:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11287:43:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2316,"name":"twapPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"11345:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11357:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11345:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2336,"nodeType":"IfStatement","src":"11341:207:13","trueBody":{"id":2335,"nodeType":"Block","src":"11360:188:13","statements":[{"assignments":[2320],"declarations":[{"constant":false,"id":2320,"mutability":"mutable","name":"slippage","nameLocation":"11383:8:13","nodeType":"VariableDeclaration","scope":2335,"src":"11375:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"11375:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2325,"initialValue":{"arguments":[{"id":2322,"name":"twapPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"11413:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2323,"name":"executionPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"11424:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2321,"name":"_calculateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"11394:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11394:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11375:64:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"11462:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"expression":{"id":2328,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"11474:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11480:10:13","memberName":"twapConfig","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"11474:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage","typeString":"struct IFlowFusionBridge.TWAPConfig storage ref"}},"id":2330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11491:11:13","memberName":"maxSlippage","nodeType":"MemberAccess","referencedDeclaration":3295,"src":"11474:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11462:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20536c69707061676520746f6f2068696768","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11504:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e93b9a611d70a4f711219c3533c0e532a3a261a28fd758fabeadec7678f9867a","typeString":"literal_string \"FlowFusion: Slippage too high\""},"value":"FlowFusion: Slippage too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e93b9a611d70a4f711219c3533c0e532a3a261a28fd758fabeadec7678f9867a","typeString":"literal_string \"FlowFusion: Slippage too high\""}],"id":2326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11454:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11454:82:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2334,"nodeType":"ExpressionStatement","src":"11454:82:13"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"intervalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"11629:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"expression":{"id":2339,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"11647:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11653:10:13","memberName":"twapConfig","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"11647:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage","typeString":"struct IFlowFusionBridge.TWAPConfig storage ref"}},"id":2341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11664:11:13","memberName":"minFillSize","nodeType":"MemberAccess","referencedDeclaration":3297,"src":"11647:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11629:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"intervalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"11693:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2344,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"11711:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11717:12:13","memberName":"sourceAmount","nodeType":"MemberAccess","referencedDeclaration":3308,"src":"11711:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2346,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"11732:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11738:14:13","memberName":"executedAmount","nodeType":"MemberAccess","referencedDeclaration":3325,"src":"11732:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11711:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11693:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11629:123:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a2042656c6f77206d696e696d756d2066696c6c2073697a65","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11795:37:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_485e75012f7ae6d585cec0ffb2f863aa38b7153096c7f06142e0a729082ffe42","typeString":"literal_string \"FlowFusion: Below minimum fill size\""},"value":"FlowFusion: Below minimum fill size"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_485e75012f7ae6d585cec0ffb2f863aa38b7153096c7f06142e0a729082ffe42","typeString":"literal_string \"FlowFusion: Below minimum fill size\""}],"id":2337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11607:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11607:236:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2353,"nodeType":"ExpressionStatement","src":"11607:236:13"},{"assignments":[2355],"declarations":[{"constant":false,"id":2355,"mutability":"mutable","name":"intervalNumber","nameLocation":"11901:14:13","nodeType":"VariableDeclaration","scope":2455,"src":"11893:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"11893:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2360,"initialValue":{"expression":{"baseExpression":{"id":2356,"name":"executionHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"11918:16:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.ExecutionRecord storage ref[] storage ref)"}},"id":2358,"indexExpression":{"id":2357,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"11935:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11918:25:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage","typeString":"struct IFlowFusionBridge.ExecutionRecord storage ref[] storage ref"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11944:6:13","memberName":"length","nodeType":"MemberAccess","src":"11918:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11893:57:13"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2366,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12073:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12079:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"12073:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2368,"name":"intervalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"12111:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2369,"name":"executionPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12147:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2370,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"12185:7:13","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"twapPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"12219:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12231:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12219:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12283:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12219:65:13","trueExpression":{"arguments":[{"id":2376,"name":"twapPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"12254:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2377,"name":"executionPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12265:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2375,"name":"_calculateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"12235:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2365,"name":"ExecutionRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"12031:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExecutionRecord_$3344_storage_ptr_$","typeString":"type(struct IFlowFusionBridge.ExecutionRecord storage pointer)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12062:9:13","12103:6:13","12140:5:13","12176:7:13","12209:8:13"],"names":["timestamp","amount","price","gasUsed","slippage"],"nodeType":"FunctionCall","src":"12031:265:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExecutionRecord_$3344_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExecutionRecord_$3344_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory"}],"expression":{"baseExpression":{"id":2361,"name":"executionHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"12000:16:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.ExecutionRecord storage ref[] storage ref)"}},"id":2363,"indexExpression":{"id":2362,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"12017:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12000:25:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage","typeString":"struct IFlowFusionBridge.ExecutionRecord storage ref[] storage ref"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12026:4:13","memberName":"push","nodeType":"MemberAccess","src":"12000:30:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_ptr_$_t_struct$_ExecutionRecord_$3344_storage_$returns$__$attached_to$_t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_ptr_$","typeString":"function (struct IFlowFusionBridge.ExecutionRecord storage ref[] storage pointer,struct IFlowFusionBridge.ExecutionRecord storage ref)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12000:297:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2383,"nodeType":"ExpressionStatement","src":"12000:297:13"},{"expression":{"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2384,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"12349:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12355:14:13","memberName":"executedAmount","nodeType":"MemberAccess","referencedDeclaration":3325,"src":"12349:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2387,"name":"intervalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"12373:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12349:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2389,"nodeType":"ExpressionStatement","src":"12349:38:13"},{"expression":{"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2390,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"12398:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12404:13:13","memberName":"lastExecution","nodeType":"MemberAccess","referencedDeclaration":3327,"src":"12398:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2393,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12420:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12426:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"12420:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12398:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2396,"nodeType":"ExpressionStatement","src":"12398:37:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2397,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"12493:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12499:12:13","memberName":"averagePrice","nodeType":"MemberAccess","referencedDeclaration":3332,"src":"12493:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12515:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12493:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2418,"nodeType":"Block","src":"12586:117:13","statements":[{"expression":{"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2408,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"12601:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12607:12:13","memberName":"averagePrice","nodeType":"MemberAccess","referencedDeclaration":3332,"src":"12601:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2412,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"12653:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},{"id":2413,"name":"executionPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12660:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2414,"name":"intervalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"12676:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2411,"name":"_calculateWeightedAveragePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"12622:30:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TWAPOrder_$3333_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct IFlowFusionBridge.TWAPOrder memory,uint256,uint256) pure returns (uint256)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12622:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12601:90:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2417,"nodeType":"ExpressionStatement","src":"12601:90:13"}]},"id":2419,"nodeType":"IfStatement","src":"12489:214:13","trueBody":{"id":2407,"nodeType":"Block","src":"12518:62:13","statements":[{"expression":{"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2401,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"12533:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12539:12:13","memberName":"averagePrice","nodeType":"MemberAccess","referencedDeclaration":3332,"src":"12533:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2404,"name":"executionPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12554:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12533:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2406,"nodeType":"ExpressionStatement","src":"12533:35:13"}]}},{"eventCall":{"arguments":[{"id":2421,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"12756:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2422,"name":"intervalNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"12779:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2423,"name":"intervalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"12809:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2424,"name":"executionPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12839:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2425,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12869:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12875:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"12869:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12899:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12903:6:13","memberName":"sender","nodeType":"MemberAccess","src":"12899:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2420,"name":"TWAPExecution","nodeType":"Identifier","overloadedDeclarations":[1777,3379],"referencedDeclaration":1777,"src":"12728:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256,uint256,address)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12728:192:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2430,"nodeType":"EmitStatement","src":"12723:197:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2431,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"12984:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12990:14:13","memberName":"executedAmount","nodeType":"MemberAccess","referencedDeclaration":3325,"src":"12984:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2433,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"13008:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13014:12:13","memberName":"sourceAmount","nodeType":"MemberAccess","referencedDeclaration":3308,"src":"13008:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12984:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2454,"nodeType":"IfStatement","src":"12980:213:13","trueBody":{"id":2453,"nodeType":"Block","src":"13028:165:13","statements":[{"expression":{"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2436,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"13043:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13049:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3330,"src":"13043:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2439,"name":"OrderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"13058:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderStatus_$3350_$","typeString":"type(enum IFlowFusionBridge.OrderStatus)"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13070:9:13","memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":3346,"src":"13058:21:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"src":"13043:36:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"id":2442,"nodeType":"ExpressionStatement","src":"13043:36:13"},{"eventCall":{"arguments":[{"id":2444,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"13114:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2445,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"13123:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13129:14:13","memberName":"executedAmount","nodeType":"MemberAccess","referencedDeclaration":3325,"src":"13123:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2447,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"13145:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13151:12:13","memberName":"averagePrice","nodeType":"MemberAccess","referencedDeclaration":3332,"src":"13145:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2449,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13165:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13171:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"13165:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2443,"name":"OrderCompleted","nodeType":"Identifier","overloadedDeclarations":[1787,3387],"referencedDeclaration":1787,"src":"13099:14:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13099:82:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2452,"nodeType":"EmitStatement","src":"13094:87:13"}]}}]},"documentation":{"id":2224,"nodeType":"StructuredDocumentation","src":"9804:301:13","text":" @notice Execute a TWAP interval for an order\n @param orderId Order to execute\n @param intervalAmount Amount to execute in this interval\n @param executionPrice Price for this execution\n @param priceProof Proof of price validity (for oracle verification)"},"functionSelector":"a3f1c420","id":2456,"implemented":true,"kind":"function","modifiers":[{"id":2235,"kind":"modifierInvocation","modifierName":{"id":2234,"name":"onlyAuthorizedExecutor","nameLocations":["10284:22:13"],"nodeType":"IdentifierPath","referencedDeclaration":1827,"src":"10284:22:13"},"nodeType":"ModifierInvocation","src":"10284:22:13"},{"arguments":[{"id":2237,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"10319:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2238,"kind":"modifierInvocation","modifierName":{"id":2236,"name":"orderExists","nameLocations":["10307:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"10307:11:13"},"nodeType":"ModifierInvocation","src":"10307:20:13"},{"arguments":[{"id":2240,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"10340:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2241,"kind":"modifierInvocation","modifierName":{"id":2239,"name":"orderActive","nameLocations":["10328:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1863,"src":"10328:11:13"},"nodeType":"ModifierInvocation","src":"10328:20:13"},{"id":2243,"kind":"modifierInvocation","modifierName":{"id":2242,"name":"nonReentrant","nameLocations":["10349:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1628,"src":"10349:12:13"},"nodeType":"ModifierInvocation","src":"10349:12:13"}],"name":"executeTWAPInterval","nameLocation":"10120:19:13","nodeType":"FunctionDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"orderId","nameLocation":"10158:7:13","nodeType":"VariableDeclaration","scope":2456,"src":"10150:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10150:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"intervalAmount","nameLocation":"10184:14:13","nodeType":"VariableDeclaration","scope":2456,"src":"10176:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"10176:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"executionPrice","nameLocation":"10217:14:13","nodeType":"VariableDeclaration","scope":2456,"src":"10209:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"10209:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"priceProof","nameLocation":"10257:10:13","nodeType":"VariableDeclaration","scope":2456,"src":"10242:25:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2231,"name":"bytes","nodeType":"ElementaryTypeName","src":"10242:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10139:135:13"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[],"src":"10362:0:13"},"scope":3286,"src":"10111:3089:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3454],"body":{"id":2550,"nodeType":"Block","src":"13475:820:13","statements":[{"assignments":[2472],"declarations":[{"constant":false,"id":2472,"mutability":"mutable","name":"order","nameLocation":"13504:5:13","nodeType":"VariableDeclaration","scope":2550,"src":"13486:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"},"typeName":{"id":2471,"nodeType":"UserDefinedTypeName","pathNode":{"id":2470,"name":"TWAPOrder","nameLocations":["13486:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3333,"src":"13486:9:13"},"referencedDeclaration":3333,"src":"13486:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"}},"visibility":"internal"}],"id":2476,"initialValue":{"baseExpression":{"id":2473,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"13512:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":2475,"indexExpression":{"id":2474,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"13519:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13512:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13486:41:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2478,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"13546:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13552:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3330,"src":"13546:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2480,"name":"OrderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"13562:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderStatus_$3350_$","typeString":"type(enum IFlowFusionBridge.OrderStatus)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13574:9:13","memberName":"Executing","nodeType":"MemberAccess","referencedDeclaration":3345,"src":"13562:21:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"src":"13546:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a204f72646572206e6f742063616e63656c6c61626c65","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13585:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f8776a091e17faeb46fcba0a2725402819579393ebd6e9a82fb92cae14d1e39","typeString":"literal_string \"FlowFusion: Order not cancellable\""},"value":"FlowFusion: Order not cancellable"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f8776a091e17faeb46fcba0a2725402819579393ebd6e9a82fb92cae14d1e39","typeString":"literal_string \"FlowFusion: Order not cancellable\""}],"id":2477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13538:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13538:83:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2485,"nodeType":"ExpressionStatement","src":"13538:83:13"},{"assignments":[2487],"declarations":[{"constant":false,"id":2487,"mutability":"mutable","name":"refundAmount","nameLocation":"13650:12:13","nodeType":"VariableDeclaration","scope":2550,"src":"13642:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"13642:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2493,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2488,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"13665:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13671:12:13","memberName":"sourceAmount","nodeType":"MemberAccess","referencedDeclaration":3308,"src":"13665:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2490,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"13686:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13692:14:13","memberName":"executedAmount","nodeType":"MemberAccess","referencedDeclaration":3325,"src":"13686:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13665:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13642:64:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"13731:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13746:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13731:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2549,"nodeType":"IfStatement","src":"13727:561:13","trueBody":{"id":2548,"nodeType":"Block","src":"13749:539:13","statements":[{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2497,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"13764:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13770:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3330,"src":"13764:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2500,"name":"OrderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"13779:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderStatus_$3350_$","typeString":"type(enum IFlowFusionBridge.OrderStatus)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13791:9:13","memberName":"Cancelled","nodeType":"MemberAccess","referencedDeclaration":3347,"src":"13779:21:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"src":"13764:36:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"id":2503,"nodeType":"ExpressionStatement","src":"13764:36:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2504,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"13863:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13869:11:13","memberName":"sourceToken","nodeType":"MemberAccess","referencedDeclaration":3306,"src":"13863:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13892:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13884:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"13884:7:13","typeDescriptions":{}}},"id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13884:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13863:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2531,"nodeType":"Block","src":"13979:99:13","statements":[{"expression":{"arguments":[{"expression":{"id":2526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14037:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14041:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14037:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2528,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"14049:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2522,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"14005:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14011:11:13","memberName":"sourceToken","nodeType":"MemberAccess","referencedDeclaration":3306,"src":"14005:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2521,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"13998:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13998:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14024:12:13","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1038,"src":"13998:38:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13998:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2530,"nodeType":"ExpressionStatement","src":"13998:64:13"}]},"id":2532,"nodeType":"IfStatement","src":"13859:219:13","trueBody":{"id":2520,"nodeType":"Block","src":"13896:77:13","statements":[{"expression":{"arguments":[{"id":2517,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"13944:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13923:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13927:6:13","memberName":"sender","nodeType":"MemberAccess","src":"13923:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13915:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"13915:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13915:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13935:8:13","memberName":"transfer","nodeType":"MemberAccess","src":"13915:28:13","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13915:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2519,"nodeType":"ExpressionStatement","src":"13915:42:13"}]}},{"expression":{"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"14148:28:13","subExpression":{"baseExpression":{"id":2533,"name":"userOrderCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"14148:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2536,"indexExpression":{"expression":{"id":2534,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14163:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14167:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14163:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14148:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2538,"nodeType":"ExpressionStatement","src":"14148:28:13"},{"eventCall":{"arguments":[{"id":2540,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"14225:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2541,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14234:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14238:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14234:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2543,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"14246:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2544,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14260:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14266:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"14260:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2539,"name":"OrderCancelled","nodeType":"Identifier","overloadedDeclarations":[1797,3395],"referencedDeclaration":1797,"src":"14210:14:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256)"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14210:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2547,"nodeType":"EmitStatement","src":"14205:71:13"}]}}]},"documentation":{"id":2457,"nodeType":"StructuredDocumentation","src":"13208:111:13","text":" @notice Cancel an order and refund remaining tokens\n @param orderId Order to cancel"},"functionSelector":"7489ec23","id":2551,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2462,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"13404:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2463,"kind":"modifierInvocation","modifierName":{"id":2461,"name":"orderExists","nameLocations":["13392:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"13392:11:13"},"nodeType":"ModifierInvocation","src":"13392:20:13"},{"arguments":[{"id":2465,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"13438:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2466,"kind":"modifierInvocation","modifierName":{"id":2464,"name":"onlyOrderOwner","nameLocations":["13423:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"13423:14:13"},"nodeType":"ModifierInvocation","src":"13423:23:13"},{"id":2468,"kind":"modifierInvocation","modifierName":{"id":2467,"name":"nonReentrant","nameLocations":["13456:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1628,"src":"13456:12:13"},"nodeType":"ModifierInvocation","src":"13456:12:13"}],"name":"cancelOrder","nameLocation":"13334:11:13","nodeType":"FunctionDefinition","parameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"orderId","nameLocation":"13354:7:13","nodeType":"VariableDeclaration","scope":2551,"src":"13346:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13346:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13345:17:13"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[],"src":"13475:0:13"},"scope":3286,"src":"13325:970:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3462],"body":{"id":2615,"nodeType":"Block","src":"14602:480:13","statements":[{"assignments":[2566],"declarations":[{"constant":false,"id":2566,"mutability":"mutable","name":"order","nameLocation":"14631:5:13","nodeType":"VariableDeclaration","scope":2615,"src":"14613:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"},"typeName":{"id":2565,"nodeType":"UserDefinedTypeName","pathNode":{"id":2564,"name":"TWAPOrder","nameLocations":["14613:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3333,"src":"14613:9:13"},"referencedDeclaration":3333,"src":"14613:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"}},"visibility":"internal"}],"id":2570,"initialValue":{"baseExpression":{"id":2567,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"14639:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":2569,"indexExpression":{"id":2568,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"14646:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14639:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14613:41:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2572,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"14673:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14679:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3330,"src":"14673:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2574,"name":"OrderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"14689:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderStatus_$3350_$","typeString":"type(enum IFlowFusionBridge.OrderStatus)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14701:9:13","memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":3346,"src":"14689:21:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"src":"14673:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a204f72646572206e6f7420636f6d706c65746564","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14712:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c4f76bc59faec6e0aa349e13a8d337dea16e87afb8453a4375a8a67b37cb93","typeString":"literal_string \"FlowFusion: Order not completed\""},"value":"FlowFusion: Order not completed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06c4f76bc59faec6e0aa349e13a8d337dea16e87afb8453a4375a8a67b37cb93","typeString":"literal_string \"FlowFusion: Order not completed\""}],"id":2571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14665:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14665:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2579,"nodeType":"ExpressionStatement","src":"14665:81:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2584,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"14792:6:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2582,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14775:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14779:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"14775:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14775:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2581,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14765:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14765:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2587,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"14804:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14810:8:13","memberName":"htlcHash","nodeType":"MemberAccess","referencedDeclaration":3319,"src":"14804:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14765:53:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c696420736563726574","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14820:28:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6c1aba816a906edd71d083f7a7be7a264be2b49afd52b6cf59c35a76917276d","typeString":"literal_string \"FlowFusion: Invalid secret\""},"value":"FlowFusion: Invalid secret"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6c1aba816a906edd71d083f7a7be7a264be2b49afd52b6cf59c35a76917276d","typeString":"literal_string \"FlowFusion: Invalid secret\""}],"id":2580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14757:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14757:92:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2592,"nodeType":"ExpressionStatement","src":"14757:92:13"},{"expression":{"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2593,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"14870:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14876:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3330,"src":"14870:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2596,"name":"OrderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"14885:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderStatus_$3350_$","typeString":"type(enum IFlowFusionBridge.OrderStatus)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14897:7:13","memberName":"Claimed","nodeType":"MemberAccess","referencedDeclaration":3349,"src":"14885:19:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"src":"14870:34:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"id":2599,"nodeType":"ExpressionStatement","src":"14870:34:13"},{"expression":{"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"14963:28:13","subExpression":{"baseExpression":{"id":2600,"name":"userOrderCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"14963:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2603,"indexExpression":{"expression":{"id":2601,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"14978:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder storage pointer"}},"id":2602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14984:4:13","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":3304,"src":"14978:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14963:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2605,"nodeType":"ExpressionStatement","src":"14963:28:13"},{"eventCall":{"arguments":[{"id":2607,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"15029:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2608,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"15038:6:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2609,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15046:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15050:6:13","memberName":"sender","nodeType":"MemberAccess","src":"15046:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2611,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15058:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15064:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"15058:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2606,"name":"HTLCClaimed","nodeType":"Identifier","overloadedDeclarations":[1807,3413],"referencedDeclaration":1807,"src":"15017:11:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,bytes32,address,uint256)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2614,"nodeType":"EmitStatement","src":"15012:62:13"}]},"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"14303:162:13","text":" @notice Claim HTLC with secret to complete cross-chain swap\n @param orderId Order to claim\n @param secret Secret to unlock HTLC"},"functionSelector":"9755dca0","id":2616,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2559,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"14564:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2560,"kind":"modifierInvocation","modifierName":{"id":2558,"name":"orderExists","nameLocations":["14552:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"14552:11:13"},"nodeType":"ModifierInvocation","src":"14552:20:13"},{"id":2562,"kind":"modifierInvocation","modifierName":{"id":2561,"name":"nonReentrant","nameLocations":["14583:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1628,"src":"14583:12:13"},"nodeType":"ModifierInvocation","src":"14583:12:13"}],"name":"claimHTLC","nameLocation":"14480:9:13","nodeType":"FunctionDefinition","parameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"orderId","nameLocation":"14498:7:13","nodeType":"VariableDeclaration","scope":2616,"src":"14490:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14490:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"secret","nameLocation":"14515:6:13","nodeType":"VariableDeclaration","scope":2616,"src":"14507:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14507:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14489:33:13"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[],"src":"14602:0:13"},"scope":3286,"src":"14471:611:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3470],"body":{"id":2628,"nodeType":"Block","src":"15356:41:13","statements":[{"expression":{"baseExpression":{"id":2624,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"15374:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":2626,"indexExpression":{"id":2625,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"15381:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15374:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"functionReturnParameters":2623,"id":2627,"nodeType":"Return","src":"15367:22:13"}]},"functionSelector":"5778472a","id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"getOrder","nameLocation":"15289:8:13","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"orderId","nameLocation":"15306:7:13","nodeType":"VariableDeclaration","scope":2629,"src":"15298:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15298:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15297:17:13"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"15338:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"},"typeName":{"id":2621,"nodeType":"UserDefinedTypeName","pathNode":{"id":2620,"name":"TWAPOrder","nameLocations":["15338:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3333,"src":"15338:9:13"},"referencedDeclaration":3333,"src":"15338:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"}},"visibility":"internal"}],"src":"15337:18:13"},"scope":3286,"src":"15280:117:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3478],"body":{"id":2641,"nodeType":"Block","src":"15487:42:13","statements":[{"expression":{"baseExpression":{"id":2637,"name":"userOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"15505:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":2639,"indexExpression":{"id":2638,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"15516:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15505:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2636,"id":2640,"nodeType":"Return","src":"15498:23:13"}]},"functionSelector":"63c69f08","id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"getUserOrders","nameLocation":"15418:13:13","nodeType":"FunctionDefinition","parameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"user","nameLocation":"15440:4:13","nodeType":"VariableDeclaration","scope":2642,"src":"15432:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"15432:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15431:14:13"},"returnParameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2642,"src":"15469:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15469:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2634,"nodeType":"ArrayTypeName","src":"15469:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"15468:18:13"},"scope":3286,"src":"15409:120:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3487],"body":{"id":2655,"nodeType":"Block","src":"15636:51:13","statements":[{"expression":{"baseExpression":{"id":2651,"name":"executionHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"15654:16:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.ExecutionRecord storage ref[] storage ref)"}},"id":2653,"indexExpression":{"id":2652,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"15671:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15654:25:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage","typeString":"struct IFlowFusionBridge.ExecutionRecord storage ref[] storage ref"}},"functionReturnParameters":2650,"id":2654,"nodeType":"Return","src":"15647:32:13"}]},"functionSelector":"1833f0cf","id":2656,"implemented":true,"kind":"function","modifiers":[],"name":"getExecutionHistory","nameLocation":"15550:19:13","nodeType":"FunctionDefinition","parameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"orderId","nameLocation":"15578:7:13","nodeType":"VariableDeclaration","scope":2656,"src":"15570:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15570:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15569:17:13"},"returnParameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2656,"src":"15610:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_memory_ptr_$dyn_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord[]"},"typeName":{"baseType":{"id":2647,"nodeType":"UserDefinedTypeName","pathNode":{"id":2646,"name":"ExecutionRecord","nameLocations":["15610:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":3344,"src":"15610:15:13"},"referencedDeclaration":3344,"src":"15610:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExecutionRecord_$3344_storage_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord"}},"id":2648,"nodeType":"ArrayTypeName","src":"15610:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord[]"}},"visibility":"internal"}],"src":"15609:26:13"},"scope":3286,"src":"15541:146:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3494],"body":{"id":2667,"nodeType":"Block","src":"15777:49:13","statements":[{"expression":{"arguments":[{"id":2664,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"15810:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2663,"name":"_calculateTWAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"15795:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) view returns (uint256)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15795:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2662,"id":2666,"nodeType":"Return","src":"15788:30:13"}]},"functionSelector":"a89a6f69","id":2668,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentTWAPPrice","nameLocation":"15708:19:13","nodeType":"FunctionDefinition","parameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"orderId","nameLocation":"15736:7:13","nodeType":"VariableDeclaration","scope":2668,"src":"15728:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15728:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15727:17:13"},"returnParameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2668,"src":"15768:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"15768:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15767:9:13"},"scope":3286,"src":"15699:127:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3501],"body":{"id":2698,"nodeType":"Block","src":"15917:200:13","statements":[{"assignments":[2677],"declarations":[{"constant":false,"id":2677,"mutability":"mutable","name":"order","nameLocation":"15945:5:13","nodeType":"VariableDeclaration","scope":2698,"src":"15928:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"},"typeName":{"id":2676,"nodeType":"UserDefinedTypeName","pathNode":{"id":2675,"name":"TWAPOrder","nameLocations":["15928:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3333,"src":"15928:9:13"},"referencedDeclaration":3333,"src":"15928:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"}},"visibility":"internal"}],"id":2681,"initialValue":{"baseExpression":{"id":2678,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"15953:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":2680,"indexExpression":{"id":2679,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"15960:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15953:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15928:40:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2682,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15983:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder memory"}},"id":2683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15989:13:13","memberName":"lastExecution","nodeType":"MemberAccess","referencedDeclaration":3327,"src":"15983:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16006:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15983:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2689,"nodeType":"IfStatement","src":"15979:52:13","trueBody":{"expression":{"expression":{"id":2686,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16016:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16022:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"16016:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2674,"id":2688,"nodeType":"Return","src":"16009:22:13"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2690,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"16049:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder memory"}},"id":2691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16055:13:13","memberName":"lastExecution","nodeType":"MemberAccess","referencedDeclaration":3327,"src":"16049:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"expression":{"id":2693,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"16092:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder memory"}},"id":2694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16098:10:13","memberName":"twapConfig","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"16092:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}],"id":2692,"name":"_getIntervalDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"16071:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TWAPConfig_$3300_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IFlowFusionBridge.TWAPConfig memory) pure returns (uint256)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16071:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16049:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2674,"id":2697,"nodeType":"Return","src":"16042:67:13"}]},"functionSelector":"dc33597d","id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"getNextExecutionTime","nameLocation":"15847:20:13","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"orderId","nameLocation":"15876:7:13","nodeType":"VariableDeclaration","scope":2699,"src":"15868:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15868:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15867:17:13"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"15908:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"15908:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15907:9:13"},"scope":3286,"src":"15838:279:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2804,"nodeType":"Block","src":"16213:734:13","statements":[{"assignments":[2712],"declarations":[{"constant":false,"id":2712,"mutability":"mutable","name":"result","nameLocation":"16241:6:13","nodeType":"VariableDeclaration","scope":2804,"src":"16224:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16224:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2711,"nodeType":"ArrayTypeName","src":"16224:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2718,"initialValue":{"arguments":[{"id":2716,"name":"totalOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"16264:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16250:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":2713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16254:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2714,"nodeType":"ArrayTypeName","src":"16254:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16250:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16224:52:13"},{"assignments":[2720],"declarations":[{"constant":false,"id":2720,"mutability":"mutable","name":"count","nameLocation":"16295:5:13","nodeType":"VariableDeclaration","scope":2804,"src":"16287:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"16287:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2722,"initialValue":{"hexValue":"30","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16303:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16287:17:13"},{"body":{"id":2769,"nodeType":"Block","src":"16468:249:13","statements":[{"assignments":[2734],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"orderId","nameLocation":"16491:7:13","nodeType":"VariableDeclaration","scope":2769,"src":"16483:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16483:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2741,"initialValue":{"arguments":[{"arguments":[{"id":2738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"16528:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2736,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16511:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16515:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"16511:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16511:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2735,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16501:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16501:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"16483:48:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2742,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"16550:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":2744,"indexExpression":{"id":2743,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16557:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16550:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"id":2745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16566:4:13","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":3304,"src":"16550:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16582:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16574:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2746,"name":"address","nodeType":"ElementaryTypeName","src":"16574:7:13","typeDescriptions":{}}},"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16574:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16550:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2751,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"16588:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":2753,"indexExpression":{"id":2752,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16595:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16588:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"id":2754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16604:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3330,"src":"16588:22:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2755,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"16614:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"src":"16588:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:70:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2768,"nodeType":"IfStatement","src":"16546:160:13","trueBody":{"id":2767,"nodeType":"Block","src":"16622:84:13","statements":[{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"16641:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2760,"indexExpression":{"id":2759,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"16648:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16641:13:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2761,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16657:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16641:23:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2763,"nodeType":"ExpressionStatement","src":"16641:23:13"},{"expression":{"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16683:7:13","subExpression":{"id":2764,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"16683:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2766,"nodeType":"ExpressionStatement","src":"16683:7:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2727,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"16447:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2728,"name":"orderNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"16451:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16447:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2770,"initializationExpression":{"assignments":[2724],"declarations":[{"constant":false,"id":2724,"mutability":"mutable","name":"i","nameLocation":"16440:1:13","nodeType":"VariableDeclaration","scope":2770,"src":"16432:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"16432:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2726,"initialValue":{"hexValue":"30","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16444:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16432:13:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16463:3:13","subExpression":{"id":2730,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"16463:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2732,"nodeType":"ExpressionStatement","src":"16463:3:13"},"nodeType":"ForStatement","src":"16427:290:13"},{"assignments":[2775],"declarations":[{"constant":false,"id":2775,"mutability":"mutable","name":"trimmed","nameLocation":"16779:7:13","nodeType":"VariableDeclaration","scope":2804,"src":"16762:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16762:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2774,"nodeType":"ArrayTypeName","src":"16762:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2781,"initialValue":{"arguments":[{"id":2779,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"16803:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16789:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":2776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16793:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2777,"nodeType":"ArrayTypeName","src":"16793:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16789:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16762:47:13"},{"body":{"id":2800,"nodeType":"Block","src":"16856:49:13","statements":[{"expression":{"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2792,"name":"trimmed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"16871:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2794,"indexExpression":{"id":2793,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"16879:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16871:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"16884:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2797,"indexExpression":{"id":2796,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"16891:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16884:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16871:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2799,"nodeType":"ExpressionStatement","src":"16871:22:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2786,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"16840:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2787,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"16844:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16840:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2801,"initializationExpression":{"assignments":[2783],"declarations":[{"constant":false,"id":2783,"mutability":"mutable","name":"i","nameLocation":"16833:1:13","nodeType":"VariableDeclaration","scope":2801,"src":"16825:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"16825:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2785,"initialValue":{"hexValue":"30","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16837:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16825:13:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16851:3:13","subExpression":{"id":2789,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"16851:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2791,"nodeType":"ExpressionStatement","src":"16851:3:13"},"nodeType":"ForStatement","src":"16820:85:13"},{"expression":{"id":2802,"name":"trimmed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"16932:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2707,"id":2803,"nodeType":"Return","src":"16925:14:13"}]},"functionSelector":"8ce2ec79","id":2805,"implemented":true,"kind":"function","modifiers":[],"name":"getOrdersByStatus","nameLocation":"16134:17:13","nodeType":"FunctionDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"status","nameLocation":"16164:6:13","nodeType":"VariableDeclaration","scope":2805,"src":"16152:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"},"typeName":{"id":2701,"nodeType":"UserDefinedTypeName","pathNode":{"id":2700,"name":"OrderStatus","nameLocations":["16152:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":3350,"src":"16152:11:13"},"referencedDeclaration":3350,"src":"16152:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"visibility":"internal"}],"src":"16151:20:13"},"returnParameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2805,"src":"16195:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16195:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2705,"nodeType":"ArrayTypeName","src":"16195:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16194:18:13"},"scope":3286,"src":"16125:822:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2859,"nodeType":"Block","src":"17217:556:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2812,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"17236:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}},"id":2813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17243:13:13","memberName":"windowMinutes","nodeType":"MemberAccess","referencedDeclaration":3291,"src":"17236:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2814,"name":"MIN_WINDOW_MINUTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"17260:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17236:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a2057696e646f7720746f6f20736d616c6c","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17280:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e4c1ac3a46ef9e16a5d25e01d97b26a954f8d1e5df104b15e6a0e9c70dae1b3","typeString":"literal_string \"FlowFusion: Window too small\""},"value":"FlowFusion: Window too small"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e4c1ac3a46ef9e16a5d25e01d97b26a954f8d1e5df104b15e6a0e9c70dae1b3","typeString":"literal_string \"FlowFusion: Window too small\""}],"id":2811,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17228:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17228:83:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2818,"nodeType":"ExpressionStatement","src":"17228:83:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2820,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"17330:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}},"id":2821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17337:13:13","memberName":"windowMinutes","nodeType":"MemberAccess","referencedDeclaration":3291,"src":"17330:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2822,"name":"MAX_WINDOW_MINUTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"17354:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17330:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a2057696e646f7720746f6f206c61726765","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17374:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8357ea734831c5a1ccdbb15bfb670c8840ac4cf3340ba7c877a364c236356750","typeString":"literal_string \"FlowFusion: Window too large\""},"value":"FlowFusion: Window too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8357ea734831c5a1ccdbb15bfb670c8840ac4cf3340ba7c877a364c236356750","typeString":"literal_string \"FlowFusion: Window too large\""}],"id":2819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17322:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17322:83:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2826,"nodeType":"ExpressionStatement","src":"17322:83:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2828,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"17424:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}},"id":2829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17431:18:13","memberName":"executionIntervals","nodeType":"MemberAccess","referencedDeclaration":3293,"src":"17424:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17452:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17424:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a204e656564206d756c7469706c6520696e74657276616c73","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17455:37:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b18ab064e1024c87c64d0f207a003cea470b76d22476cbfe49e72eb817fbc180","typeString":"literal_string \"FlowFusion: Need multiple intervals\""},"value":"FlowFusion: Need multiple intervals"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b18ab064e1024c87c64d0f207a003cea470b76d22476cbfe49e72eb817fbc180","typeString":"literal_string \"FlowFusion: Need multiple intervals\""}],"id":2827,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17416:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17416:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2834,"nodeType":"ExpressionStatement","src":"17416:77:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2836,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"17512:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}},"id":2837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17519:18:13","memberName":"executionIntervals","nodeType":"MemberAccess","referencedDeclaration":3293,"src":"17512:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2838,"name":"MAX_EXECUTION_INTERVALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"17541:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17512:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20546f6f206d616e7920696e74657276616c73","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17566:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_42bbae03c0799a528f9cb886e4d399ae7ddf235e5b3de5d3b288a024d5a0b16f","typeString":"literal_string \"FlowFusion: Too many intervals\""},"value":"FlowFusion: Too many intervals"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_42bbae03c0799a528f9cb886e4d399ae7ddf235e5b3de5d3b288a024d5a0b16f","typeString":"literal_string \"FlowFusion: Too many intervals\""}],"id":2835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17504:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17504:95:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2842,"nodeType":"ExpressionStatement","src":"17504:95:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2844,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"17618:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}},"id":2845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17625:11:13","memberName":"maxSlippage","nodeType":"MemberAccess","referencedDeclaration":3295,"src":"17618:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2846,"name":"MAX_SLIPPAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"17640:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17618:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20536c69707061676520746f6f2068696768","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17654:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e93b9a611d70a4f711219c3533c0e532a3a261a28fd758fabeadec7678f9867a","typeString":"literal_string \"FlowFusion: Slippage too high\""},"value":"FlowFusion: Slippage too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e93b9a611d70a4f711219c3533c0e532a3a261a28fd758fabeadec7678f9867a","typeString":"literal_string \"FlowFusion: Slippage too high\""}],"id":2843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17610:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17610:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2850,"nodeType":"ExpressionStatement","src":"17610:76:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2852,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"17705:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}},"id":2853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17712:11:13","memberName":"minFillSize","nodeType":"MemberAccess","referencedDeclaration":3297,"src":"17705:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17726:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17705:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c6964206d696e2066696c6c2073697a65","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17729:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0325522b6fe4a6c51158384c1c259f2992fc667e87422d6e1e324809ebeab906","typeString":"literal_string \"FlowFusion: Invalid min fill size\""},"value":"FlowFusion: Invalid min fill size"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0325522b6fe4a6c51158384c1c259f2992fc667e87422d6e1e324809ebeab906","typeString":"literal_string \"FlowFusion: Invalid min fill size\""}],"id":2851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17697:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17697:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2858,"nodeType":"ExpressionStatement","src":"17697:68:13"}]},"id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"_validateTWAPConfig","nameLocation":"17157:19:13","nodeType":"FunctionDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"config","nameLocation":"17195:6:13","nodeType":"VariableDeclaration","scope":2860,"src":"17177:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"},"typeName":{"id":2807,"nodeType":"UserDefinedTypeName","pathNode":{"id":2806,"name":"TWAPConfig","nameLocations":["17177:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":3300,"src":"17177:10:13"},"referencedDeclaration":3300,"src":"17177:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"}},"visibility":"internal"}],"src":"17176:26:13"},"returnParameters":{"id":2810,"nodeType":"ParameterList","parameters":[],"src":"17217:0:13"},"scope":3286,"src":"17148:625:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2877,"nodeType":"Block","src":"17873:81:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2868,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"17892:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}},"id":2869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17899:13:13","memberName":"windowMinutes","nodeType":"MemberAccess","referencedDeclaration":3291,"src":"17892:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17915:2:13","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"17892:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17891:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":2873,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"17921:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}},"id":2874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17928:18:13","memberName":"executionIntervals","nodeType":"MemberAccess","referencedDeclaration":3293,"src":"17921:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17891:55:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2867,"id":2876,"nodeType":"Return","src":"17884:62:13"}]},"id":2878,"implemented":true,"kind":"function","modifiers":[],"name":"_getIntervalDuration","nameLocation":"17794:20:13","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"config","nameLocation":"17833:6:13","nodeType":"VariableDeclaration","scope":2878,"src":"17815:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"},"typeName":{"id":2862,"nodeType":"UserDefinedTypeName","pathNode":{"id":2861,"name":"TWAPConfig","nameLocations":["17815:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":3300,"src":"17815:10:13"},"referencedDeclaration":3300,"src":"17815:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"}},"visibility":"internal"}],"src":"17814:26:13"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2878,"src":"17864:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"17864:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17863:9:13"},"scope":3286,"src":"17785:169:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2990,"nodeType":"Block","src":"18039:784:13","statements":[{"assignments":[2889],"declarations":[{"constant":false,"id":2889,"mutability":"mutable","name":"history","nameLocation":"18075:7:13","nodeType":"VariableDeclaration","scope":2990,"src":"18050:32:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_memory_ptr_$dyn_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord[]"},"typeName":{"baseType":{"id":2887,"nodeType":"UserDefinedTypeName","pathNode":{"id":2886,"name":"ExecutionRecord","nameLocations":["18050:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":3344,"src":"18050:15:13"},"referencedDeclaration":3344,"src":"18050:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExecutionRecord_$3344_storage_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord"}},"id":2888,"nodeType":"ArrayTypeName","src":"18050:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord[]"}},"visibility":"internal"}],"id":2893,"initialValue":{"baseExpression":{"id":2890,"name":"executionHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"18085:16:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.ExecutionRecord storage ref[] storage ref)"}},"id":2892,"indexExpression":{"id":2891,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"18102:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18085:25:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage","typeString":"struct IFlowFusionBridge.ExecutionRecord storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18050:60:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2894,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"18125:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_memory_ptr_$dyn_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory[] memory"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18133:6:13","memberName":"length","nodeType":"MemberAccess","src":"18125:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18143:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18125:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2900,"nodeType":"IfStatement","src":"18121:33:13","trueBody":{"expression":{"hexValue":"30","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18153:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2884,"id":2899,"nodeType":"Return","src":"18146:8:13"}},{"assignments":[2903],"declarations":[{"constant":false,"id":2903,"mutability":"mutable","name":"order","nameLocation":"18192:5:13","nodeType":"VariableDeclaration","scope":2990,"src":"18175:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"},"typeName":{"id":2902,"nodeType":"UserDefinedTypeName","pathNode":{"id":2901,"name":"TWAPOrder","nameLocations":["18175:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3333,"src":"18175:9:13"},"referencedDeclaration":3333,"src":"18175:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"}},"visibility":"internal"}],"id":2907,"initialValue":{"baseExpression":{"id":2904,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"18200:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TWAPOrder_$3333_storage_$","typeString":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder storage ref)"}},"id":2906,"indexExpression":{"id":2905,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"18207:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18200:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage","typeString":"struct IFlowFusionBridge.TWAPOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18175:40:13"},{"assignments":[2909],"declarations":[{"constant":false,"id":2909,"mutability":"mutable","name":"windowStart","nameLocation":"18234:11:13","nodeType":"VariableDeclaration","scope":2990,"src":"18226:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"18226:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2919,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2910,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18248:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18254:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"18248:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2912,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"18267:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder memory"}},"id":2913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18273:10:13","memberName":"twapConfig","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"18267:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig memory"}},"id":2914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18284:13:13","memberName":"windowMinutes","nodeType":"MemberAccess","referencedDeclaration":3291,"src":"18267:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18300:2:13","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"18267:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18266:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18248:55:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18226:77:13"},{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"totalValue","nameLocation":"18332:10:13","nodeType":"VariableDeclaration","scope":2990,"src":"18324:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"18324:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2923,"initialValue":{"hexValue":"30","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18345:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18324:22:13"},{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"totalWeight","nameLocation":"18365:11:13","nodeType":"VariableDeclaration","scope":2990,"src":"18357:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"18357:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2927,"initialValue":{"hexValue":"30","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18379:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18357:23:13"},{"body":{"id":2979,"nodeType":"Block","src":"18446:296:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2939,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"18465:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_memory_ptr_$dyn_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory[] memory"}},"id":2941,"indexExpression":{"id":2940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18473:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18465:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExecutionRecord_$3344_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory"}},"id":2942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18476:9:13","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3335,"src":"18465:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2943,"name":"windowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"18489:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18465:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2978,"nodeType":"IfStatement","src":"18461:270:13","trueBody":{"id":2977,"nodeType":"Block","src":"18502:229:13","statements":[{"assignments":[2946],"declarations":[{"constant":false,"id":2946,"mutability":"mutable","name":"weight","nameLocation":"18529:6:13","nodeType":"VariableDeclaration","scope":2977,"src":"18521:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"18521:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2963,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18538:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18542:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18538:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18616:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"18538:79:13","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2950,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"18568:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_memory_ptr_$dyn_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory[] memory"}},"id":2952,"indexExpression":{"id":2951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18576:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18568:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExecutionRecord_$3344_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory"}},"id":2953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18579:9:13","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3335,"src":"18568:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":2954,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"18591:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_memory_ptr_$dyn_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory[] memory"}},"id":2958,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18599:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18601:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18599:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18591:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExecutionRecord_$3344_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory"}},"id":2959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18604:9:13","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3335,"src":"18591:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18568:45:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18521:96:13"},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2964,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"18636:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2965,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"18650:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_memory_ptr_$dyn_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory[] memory"}},"id":2967,"indexExpression":{"id":2966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18658:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18650:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExecutionRecord_$3344_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory"}},"id":2968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18661:5:13","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3339,"src":"18650:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2969,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"18669:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18650:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18636:39:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"18636:39:13"},{"expression":{"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2973,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"18694:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2974,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"18709:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18694:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2976,"nodeType":"ExpressionStatement","src":"18694:21:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18421:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2933,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"18425:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_memory_ptr_$dyn_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord memory[] memory"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18433:6:13","memberName":"length","nodeType":"MemberAccess","src":"18425:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18421:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2980,"initializationExpression":{"assignments":[2929],"declarations":[{"constant":false,"id":2929,"mutability":"mutable","name":"i","nameLocation":"18414:1:13","nodeType":"VariableDeclaration","scope":2980,"src":"18406:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"18406:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2931,"initialValue":{"hexValue":"30","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18418:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18406:13:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18441:3:13","subExpression":{"id":2936,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18441:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2938,"nodeType":"ExpressionStatement","src":"18441:3:13"},"nodeType":"ForStatement","src":"18401:341:13"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"18769:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18783:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18769:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18814:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"18769:46:13","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2984,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"18787:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2985,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"18800:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18787:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2884,"id":2989,"nodeType":"Return","src":"18762:53:13"}]},"id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTWAP","nameLocation":"17975:14:13","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"orderId","nameLocation":"17998:7:13","nodeType":"VariableDeclaration","scope":2991,"src":"17990:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17990:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17989:17:13"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"18030:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"18030:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18029:9:13"},"scope":3286,"src":"17966:857:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3026,"nodeType":"Block","src":"18975:233:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3000,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"18990:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19007:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18990:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3005,"nodeType":"IfStatement","src":"18986:32:13","trueBody":{"expression":{"hexValue":"30","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19017:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2999,"id":3004,"nodeType":"Return","src":"19010:8:13"}},{"assignments":[3007],"declarations":[{"constant":false,"id":3007,"mutability":"mutable","name":"diff","nameLocation":"19037:4:13","nodeType":"VariableDeclaration","scope":3026,"src":"19029:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"19029:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3018,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3008,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"19044:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3009,"name":"actualPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"19060:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19044:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3014,"name":"actualPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"19118:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3015,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"19132:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19118:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19044:101:13","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"19088:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3012,"name":"actualPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"19104:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19088:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19029:116:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"19164:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3020,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"19171:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19164:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19163:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3023,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"19187:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19163:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2999,"id":3025,"nodeType":"Return","src":"19156:44:13"}]},"id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateSlippage","nameLocation":"18844:18:13","nodeType":"FunctionDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"expectedPrice","nameLocation":"18871:13:13","nodeType":"VariableDeclaration","scope":3027,"src":"18863:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"18863:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"actualPrice","nameLocation":"18894:11:13","nodeType":"VariableDeclaration","scope":3027,"src":"18886:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"18886:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18862:44:13"},"returnParameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3027,"src":"18960:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"18960:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18959:9:13"},"scope":3286,"src":"18835:373:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3064,"nodeType":"Block","src":"19387:215:13","statements":[{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"totalValue","nameLocation":"19406:10:13","nodeType":"VariableDeclaration","scope":3064,"src":"19398:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"19398:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3052,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3041,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"19420:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder memory"}},"id":3042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19426:12:13","memberName":"averagePrice","nodeType":"MemberAccess","referencedDeclaration":3332,"src":"19420:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3043,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"19441:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder memory"}},"id":3044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19447:14:13","memberName":"executedAmount","nodeType":"MemberAccess","referencedDeclaration":3325,"src":"19441:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19420:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19419:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"19466:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3048,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"19477:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19466:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19465:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19419:68:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19398:89:13"},{"assignments":[3054],"declarations":[{"constant":false,"id":3054,"mutability":"mutable","name":"totalAmount","nameLocation":"19506:11:13","nodeType":"VariableDeclaration","scope":3064,"src":"19498:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"19498:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3059,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3055,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"19520:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder memory"}},"id":3056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19526:14:13","memberName":"executedAmount","nodeType":"MemberAccess","referencedDeclaration":3325,"src":"19520:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3057,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"19543:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19520:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19498:54:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19570:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3061,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"19583:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19570:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3038,"id":3063,"nodeType":"Return","src":"19563:31:13"}]},"id":3065,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateWeightedAveragePrice","nameLocation":"19229:30:13","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"order","nameLocation":"19287:5:13","nodeType":"VariableDeclaration","scope":3065,"src":"19270:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"},"typeName":{"id":3029,"nodeType":"UserDefinedTypeName","pathNode":{"id":3028,"name":"TWAPOrder","nameLocations":["19270:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3333,"src":"19270:9:13"},"referencedDeclaration":3333,"src":"19270:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"newPrice","nameLocation":"19311:8:13","nodeType":"VariableDeclaration","scope":3065,"src":"19303:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"19303:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"newAmount","nameLocation":"19338:9:13","nodeType":"VariableDeclaration","scope":3065,"src":"19330:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"19330:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19259:95:13"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3065,"src":"19378:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"19378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19377:9:13"},"scope":3286,"src":"19220:382:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3083,"nodeType":"Block","src":"19702:265:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"19930:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19938:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19930:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3077,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"19943:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19949:6:13","memberName":"length","nodeType":"MemberAccess","src":"19943:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19958:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19943:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19930:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3073,"id":3082,"nodeType":"Return","src":"19923:36:13"}]},"id":3084,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyPrice","nameLocation":"19623:12:13","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"price","nameLocation":"19644:5:13","nodeType":"VariableDeclaration","scope":3084,"src":"19636:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3066,"name":"uint256","nodeType":"ElementaryTypeName","src":"19636:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3069,"mutability":"mutable","name":"proof","nameLocation":"19666:5:13","nodeType":"VariableDeclaration","scope":3084,"src":"19651:20:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3068,"name":"bytes","nodeType":"ElementaryTypeName","src":"19651:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19635:37:13"},"returnParameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3084,"src":"19696:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3071,"name":"bool","nodeType":"ElementaryTypeName","src":"19696:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19695:6:13"},"scope":3286,"src":"19614:353:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3097,"nodeType":"Block","src":"20235:50:13","statements":[{"expression":{"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3091,"name":"supportedChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"20246:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":3093,"indexExpression":{"id":3092,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"20262:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20246:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20273:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"20246:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3096,"nodeType":"ExpressionStatement","src":"20246:31:13"}]},"functionSelector":"e5eb8a89","id":3098,"implemented":true,"kind":"function","modifiers":[{"id":3089,"kind":"modifierInvocation","modifierName":{"id":3088,"name":"onlyOwner","nameLocations":["20225:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"20225:9:13"},"nodeType":"ModifierInvocation","src":"20225:9:13"}],"name":"addSupportedChain","nameLocation":"20175:17:13","nodeType":"FunctionDefinition","parameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"chainId","nameLocation":"20207:7:13","nodeType":"VariableDeclaration","scope":3098,"src":"20193:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3085,"name":"string","nodeType":"ElementaryTypeName","src":"20193:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20192:23:13"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[],"src":"20235:0:13"},"scope":3286,"src":"20166:119:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3111,"nodeType":"Block","src":"20369:51:13","statements":[{"expression":{"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3105,"name":"supportedChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"20380:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":3107,"indexExpression":{"id":3106,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"20396:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20380:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20407:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"20380:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3110,"nodeType":"ExpressionStatement","src":"20380:32:13"}]},"functionSelector":"46560023","id":3112,"implemented":true,"kind":"function","modifiers":[{"id":3103,"kind":"modifierInvocation","modifierName":{"id":3102,"name":"onlyOwner","nameLocations":["20359:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"20359:9:13"},"nodeType":"ModifierInvocation","src":"20359:9:13"}],"name":"removeSupportedChain","nameLocation":"20306:20:13","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"chainId","nameLocation":"20341:7:13","nodeType":"VariableDeclaration","scope":3112,"src":"20327:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3099,"name":"string","nodeType":"ElementaryTypeName","src":"20327:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20326:23:13"},"returnParameters":{"id":3104,"nodeType":"ParameterList","parameters":[],"src":"20369:0:13"},"scope":3286,"src":"20297:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3135,"nodeType":"Block","src":"20500:129:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3120,"name":"executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"20519:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20539:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20531:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3121,"name":"address","nodeType":"ElementaryTypeName","src":"20531:7:13","typeDescriptions":{}}},"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20531:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20519:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c6964206578656375746f72","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20543:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b4b3e6ffc3edb5f407c978e4a67ccae5a942f0b00c83f4136f9ffe7ff125a21","typeString":"literal_string \"FlowFusion: Invalid executor\""},"value":"FlowFusion: Invalid executor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b4b3e6ffc3edb5f407c978e4a67ccae5a942f0b00c83f4136f9ffe7ff125a21","typeString":"literal_string \"FlowFusion: Invalid executor\""}],"id":3119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20511:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20511:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3128,"nodeType":"ExpressionStatement","src":"20511:63:13"},{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3129,"name":"authorizedExecutors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"20585:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3131,"indexExpression":{"id":3130,"name":"executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"20605:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20585:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20617:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"20585:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3134,"nodeType":"ExpressionStatement","src":"20585:36:13"}]},"functionSelector":"b2a7f494","id":3136,"implemented":true,"kind":"function","modifiers":[{"id":3117,"kind":"modifierInvocation","modifierName":{"id":3116,"name":"onlyOwner","nameLocations":["20490:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"20490:9:13"},"nodeType":"ModifierInvocation","src":"20490:9:13"}],"name":"addAuthorizedExecutor","nameLocation":"20441:21:13","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"executor","nameLocation":"20471:8:13","nodeType":"VariableDeclaration","scope":3136,"src":"20463:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3113,"name":"address","nodeType":"ElementaryTypeName","src":"20463:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20462:18:13"},"returnParameters":{"id":3118,"nodeType":"ParameterList","parameters":[],"src":"20500:0:13"},"scope":3286,"src":"20432:197:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3149,"nodeType":"Block","src":"20712:56:13","statements":[{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3143,"name":"authorizedExecutors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"20723:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3145,"indexExpression":{"id":3144,"name":"executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"20743:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20723:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20755:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"20723:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3148,"nodeType":"ExpressionStatement","src":"20723:37:13"}]},"functionSelector":"60c7bae2","id":3150,"implemented":true,"kind":"function","modifiers":[{"id":3141,"kind":"modifierInvocation","modifierName":{"id":3140,"name":"onlyOwner","nameLocations":["20702:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"20702:9:13"},"nodeType":"ModifierInvocation","src":"20702:9:13"}],"name":"removeAuthorizedExecutor","nameLocation":"20650:24:13","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"executor","nameLocation":"20683:8:13","nodeType":"VariableDeclaration","scope":3150,"src":"20675:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3137,"name":"address","nodeType":"ElementaryTypeName","src":"20675:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20674:18:13"},"returnParameters":{"id":3142,"nodeType":"ParameterList","parameters":[],"src":"20712:0:13"},"scope":3286,"src":"20641:127:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3171,"nodeType":"Block","src":"20852:135:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"newFeeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"20871:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20898:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20890:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"20890:7:13","typeDescriptions":{}}},"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20890:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20871:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c69642066656520636f6c6c6563746f72","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20902:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5403cd0503b7780f2d4a47d0be8a97686db096d95cafe2c7945a9e2a89c9307e","typeString":"literal_string \"FlowFusion: Invalid fee collector\""},"value":"FlowFusion: Invalid fee collector"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5403cd0503b7780f2d4a47d0be8a97686db096d95cafe2c7945a9e2a89c9307e","typeString":"literal_string \"FlowFusion: Invalid fee collector\""}],"id":3157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20863:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20863:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3166,"nodeType":"ExpressionStatement","src":"20863:75:13"},{"expression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3167,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"20949:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3168,"name":"newFeeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"20964:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20949:30:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3170,"nodeType":"ExpressionStatement","src":"20949:30:13"}]},"functionSelector":"d2c35ce8","id":3172,"implemented":true,"kind":"function","modifiers":[{"id":3155,"kind":"modifierInvocation","modifierName":{"id":3154,"name":"onlyOwner","nameLocations":["20842:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"20842:9:13"},"nodeType":"ModifierInvocation","src":"20842:9:13"}],"name":"updateFeeCollector","nameLocation":"20789:18:13","nodeType":"FunctionDefinition","parameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"newFeeCollector","nameLocation":"20816:15:13","nodeType":"VariableDeclaration","scope":3172,"src":"20808:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3151,"name":"address","nodeType":"ElementaryTypeName","src":"20808:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20807:25:13"},"returnParameters":{"id":3156,"nodeType":"ParameterList","parameters":[],"src":"20852:0:13"},"scope":3286,"src":"20780:207:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3190,"nodeType":"Block","src":"21069:117:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3180,"name":"newFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"21088:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21102:3:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"21088:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20466565207261746520746f6f2068696768","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21107:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f176657fe7bd39fdf95f400daeaad37036ea0a914f4940decc54e41cd2c84707","typeString":"literal_string \"FlowFusion: Fee rate too high\""},"value":"FlowFusion: Fee rate too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f176657fe7bd39fdf95f400daeaad37036ea0a914f4940decc54e41cd2c84707","typeString":"literal_string \"FlowFusion: Fee rate too high\""}],"id":3179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21080:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21080:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3185,"nodeType":"ExpressionStatement","src":"21080:59:13"},{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3186,"name":"protocolFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"21150:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3187,"name":"newFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"21168:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21150:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3189,"nodeType":"ExpressionStatement","src":"21150:28:13"}]},"functionSelector":"6340d55c","id":3191,"implemented":true,"kind":"function","modifiers":[{"id":3177,"kind":"modifierInvocation","modifierName":{"id":3176,"name":"onlyOwner","nameLocations":["21059:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"21059:9:13"},"nodeType":"ModifierInvocation","src":"21059:9:13"}],"name":"updateProtocolFeeRate","nameLocation":"21008:21:13","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"newFeeRate","nameLocation":"21038:10:13","nodeType":"VariableDeclaration","scope":3191,"src":"21030:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"21030:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21029:20:13"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[],"src":"21069:0:13"},"scope":3286,"src":"20999:187:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3209,"nodeType":"Block","src":"21267:120:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3199,"name":"newMaxOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"21286:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21301:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21286:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a20496e76616c6964206d6178206f7264657273","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21304:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f62f7227bd25b9d05c4987bf90baf6aaa05095c56266385760256fb317221452","typeString":"literal_string \"FlowFusion: Invalid max orders\""},"value":"FlowFusion: Invalid max orders"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f62f7227bd25b9d05c4987bf90baf6aaa05095c56266385760256fb317221452","typeString":"literal_string \"FlowFusion: Invalid max orders\""}],"id":3198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21278:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21278:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3204,"nodeType":"ExpressionStatement","src":"21278:59:13"},{"expression":{"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3205,"name":"maxOrdersPerUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"21348:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3206,"name":"newMaxOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"21367:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21348:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3208,"nodeType":"ExpressionStatement","src":"21348:31:13"}]},"functionSelector":"9cac0fb2","id":3210,"implemented":true,"kind":"function","modifiers":[{"id":3196,"kind":"modifierInvocation","modifierName":{"id":3195,"name":"onlyOwner","nameLocations":["21257:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"21257:9:13"},"nodeType":"ModifierInvocation","src":"21257:9:13"}],"name":"updateMaxOrdersPerUser","nameLocation":"21203:22:13","nodeType":"FunctionDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"newMaxOrders","nameLocation":"21234:12:13","nodeType":"VariableDeclaration","scope":3210,"src":"21226:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"21226:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21225:22:13"},"returnParameters":{"id":3197,"nodeType":"ParameterList","parameters":[],"src":"21267:0:13"},"scope":3286,"src":"21194:193:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3218,"nodeType":"Block","src":"21435:27:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3215,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"21446:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21446:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3217,"nodeType":"ExpressionStatement","src":"21446:8:13"}]},"functionSelector":"8456cb59","id":3219,"implemented":true,"kind":"function","modifiers":[{"id":3213,"kind":"modifierInvocation","modifierName":{"id":3212,"name":"onlyOwner","nameLocations":["21425:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"21425:9:13"},"nodeType":"ModifierInvocation","src":"21425:9:13"}],"name":"pause","nameLocation":"21408:5:13","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[],"src":"21413:2:13"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[],"src":"21435:0:13"},"scope":3286,"src":"21399:63:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3227,"nodeType":"Block","src":"21512:29:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3224,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"21523:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21523:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3226,"nodeType":"ExpressionStatement","src":"21523:10:13"}]},"functionSelector":"3f4ba83a","id":3228,"implemented":true,"kind":"function","modifiers":[{"id":3222,"kind":"modifierInvocation","modifierName":{"id":3221,"name":"onlyOwner","nameLocations":["21502:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"21502:9:13"},"nodeType":"ModifierInvocation","src":"21502:9:13"}],"name":"unpause","nameLocation":"21483:7:13","nodeType":"FunctionDefinition","parameters":{"id":3220,"nodeType":"ParameterList","parameters":[],"src":"21490:2:13"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[],"src":"21512:0:13"},"scope":3286,"src":"21474:67:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3264,"nodeType":"Block","src":"21630:179:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"21645:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21662:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21654:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3238,"name":"address","nodeType":"ElementaryTypeName","src":"21654:7:13","typeDescriptions":{}}},"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21654:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21645:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3262,"nodeType":"Block","src":"21732:70:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3257,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"21774:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21774:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3259,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"21783:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3254,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"21754:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3253,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"21747:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21747:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21761:12:13","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1038,"src":"21747:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21747:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3261,"nodeType":"ExpressionStatement","src":"21747:43:13"}]},"id":3263,"nodeType":"IfStatement","src":"21641:161:13","trueBody":{"id":3252,"nodeType":"Block","src":"21666:60:13","statements":[{"expression":{"arguments":[{"id":3249,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"21707:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3245,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"21689:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21689:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21681:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"21681:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21681:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21698:8:13","memberName":"transfer","nodeType":"MemberAccess","src":"21681:25:13","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21681:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3251,"nodeType":"ExpressionStatement","src":"21681:33:13"}]}}]},"functionSelector":"95ccea67","id":3265,"implemented":true,"kind":"function","modifiers":[{"id":3235,"kind":"modifierInvocation","modifierName":{"id":3234,"name":"onlyOwner","nameLocations":["21620:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"21620:9:13"},"nodeType":"ModifierInvocation","src":"21620:9:13"}],"name":"emergencyWithdraw","nameLocation":"21562:17:13","nodeType":"FunctionDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"token","nameLocation":"21588:5:13","nodeType":"VariableDeclaration","scope":3265,"src":"21580:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3229,"name":"address","nodeType":"ElementaryTypeName","src":"21580:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"amount","nameLocation":"21603:6:13","nodeType":"VariableDeclaration","scope":3265,"src":"21595:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"21595:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21579:31:13"},"returnParameters":{"id":3236,"nodeType":"ParameterList","parameters":[],"src":"21630:0:13"},"scope":3286,"src":"21553:256:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3276,"nodeType":"Block","src":"22034:110:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22095:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22099:5:13","memberName":"value","nodeType":"MemberAccess","src":"22095:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22107:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22095:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c6f77467573696f6e3a204e6f204554482073656e74","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22110:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c29bdada3e30a568193032f7cc1776e51f644335c891806921375ec80108a316","typeString":"literal_string \"FlowFusion: No ETH sent\""},"value":"FlowFusion: No ETH sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c29bdada3e30a568193032f7cc1776e51f644335c891806921375ec80108a316","typeString":"literal_string \"FlowFusion: No ETH sent\""}],"id":3268,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22087:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22087:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3275,"nodeType":"ExpressionStatement","src":"22087:49:13"}]},"id":3277,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[],"src":"22014:2:13"},"returnParameters":{"id":3267,"nodeType":"ParameterList","parameters":[],"src":"22034:0:13"},"scope":3286,"src":"22007:137:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3284,"nodeType":"Block","src":"22184:59:13","statements":[{"expression":{"arguments":[{"hexValue":"466c6f77467573696f6e3a2046756e6374696f6e206e6f7420666f756e64","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22202:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8758c3c9f5fdc6dbc745f9531f2c3313121f692dfb1225ef81470d7ec77e63dd","typeString":"literal_string \"FlowFusion: Function not found\""},"value":"FlowFusion: Function not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8758c3c9f5fdc6dbc745f9531f2c3313121f692dfb1225ef81470d7ec77e63dd","typeString":"literal_string \"FlowFusion: Function not found\""}],"id":3280,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"22195:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22195:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3283,"nodeType":"ExpressionStatement","src":"22195:40:13"}]},"id":3285,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3278,"nodeType":"ParameterList","parameters":[],"src":"22164:2:13"},"returnParameters":{"id":3279,"nodeType":"ParameterList","parameters":[],"src":"22184:0:13"},"scope":3286,"src":"22156:87:13","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3287,"src":"665:21581:13","usedErrors":[13,18,1005,1509,1512,1609],"usedEvents":[24,1501,1506,1777,1787,1797,1807,1815,3367,3379,3387,3395,3405,3413]}],"src":"33:22213:13"},"id":13},"contracts/interfaces/IFlowFusionBridge.sol":{"ast":{"absolutePath":"contracts/interfaces/IFlowFusionBridge.sol","exportedSymbols":{"IFlowFusionBridge":[3502]},"id":3503,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3288,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IFlowFusionBridge","contractDependencies":[],"contractKind":"interface","documentation":{"id":3289,"nodeType":"StructuredDocumentation","src":"61:98:14","text":" @title IFlowFusionBridge\n @notice Interface for FlowFusion Multi-Chain TWAP Bridge"},"fullyImplemented":false,"id":3502,"linearizedBaseContracts":[3502],"name":"IFlowFusionBridge","nameLocation":"171:17:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IFlowFusionBridge.TWAPConfig","id":3300,"members":[{"constant":false,"id":3291,"mutability":"mutable","name":"windowMinutes","nameLocation":"426:13:14","nodeType":"VariableDeclaration","scope":3300,"src":"418:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"418:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"executionIntervals","nameLocation":"507:18:14","nodeType":"VariableDeclaration","scope":3300,"src":"499:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"499:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"maxSlippage","nameLocation":"584:11:14","nodeType":"VariableDeclaration","scope":3300,"src":"576:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"576:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"minFillSize","nameLocation":"666:11:14","nodeType":"VariableDeclaration","scope":3300,"src":"658:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"enableMEVProtection","nameLocation":"734:19:14","nodeType":"VariableDeclaration","scope":3300,"src":"729:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3298,"name":"bool","nodeType":"ElementaryTypeName","src":"729:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"TWAPConfig","nameLocation":"396:10:14","nodeType":"StructDefinition","scope":3502,"src":"389:399:14","visibility":"public"},{"canonicalName":"IFlowFusionBridge.TWAPOrder","id":3333,"members":[{"constant":false,"id":3302,"mutability":"mutable","name":"id","nameLocation":"836:2:14","nodeType":"VariableDeclaration","scope":3333,"src":"828:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"828:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3304,"mutability":"mutable","name":"user","nameLocation":"900:4:14","nodeType":"VariableDeclaration","scope":3333,"src":"892:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3303,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"sourceToken","nameLocation":"954:11:14","nodeType":"VariableDeclaration","scope":3333,"src":"946:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3305,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"sourceAmount","nameLocation":"1036:12:14","nodeType":"VariableDeclaration","scope":3333,"src":"1028:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"targetChain","nameLocation":"1095:11:14","nodeType":"VariableDeclaration","scope":3333,"src":"1088:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3309,"name":"string","nodeType":"ElementaryTypeName","src":"1088:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3312,"mutability":"mutable","name":"targetToken","nameLocation":"1164:11:14","nodeType":"VariableDeclaration","scope":3333,"src":"1157:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3311,"name":"string","nodeType":"ElementaryTypeName","src":"1157:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"targetRecipient","nameLocation":"1228:15:14","nodeType":"VariableDeclaration","scope":3333,"src":"1221:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3313,"name":"string","nodeType":"ElementaryTypeName","src":"1221:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"twapConfig","nameLocation":"1306:10:14","nodeType":"VariableDeclaration","scope":3333,"src":"1295:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"},"typeName":{"id":3316,"nodeType":"UserDefinedTypeName","pathNode":{"id":3315,"name":"TWAPConfig","nameLocations":["1295:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3300,"src":"1295:10:14"},"referencedDeclaration":3300,"src":"1295:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"htlcHash","nameLocation":"1372:8:14","nodeType":"VariableDeclaration","scope":3333,"src":"1364:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1364:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3321,"mutability":"mutable","name":"timeoutHeight","nameLocation":"1435:13:14","nodeType":"VariableDeclaration","scope":3333,"src":"1427:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3323,"mutability":"mutable","name":"createdAt","nameLocation":"1496:9:14","nodeType":"VariableDeclaration","scope":3333,"src":"1488:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1488:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3325,"mutability":"mutable","name":"executedAmount","nameLocation":"1555:14:14","nodeType":"VariableDeclaration","scope":3333,"src":"1547:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"lastExecution","nameLocation":"1619:13:14","nodeType":"VariableDeclaration","scope":3333,"src":"1611:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1611:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3330,"mutability":"mutable","name":"status","nameLocation":"1688:6:14","nodeType":"VariableDeclaration","scope":3333,"src":"1676:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"},"typeName":{"id":3329,"nodeType":"UserDefinedTypeName","pathNode":{"id":3328,"name":"OrderStatus","nameLocations":["1676:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":3350,"src":"1676:11:14"},"referencedDeclaration":3350,"src":"1676:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$3350","typeString":"enum IFlowFusionBridge.OrderStatus"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"averagePrice","nameLocation":"1745:12:14","nodeType":"VariableDeclaration","scope":3333,"src":"1737:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TWAPOrder","nameLocation":"807:9:14","nodeType":"StructDefinition","scope":3502,"src":"800:1007:14","visibility":"public"},{"canonicalName":"IFlowFusionBridge.ExecutionRecord","id":3344,"members":[{"constant":false,"id":3335,"mutability":"mutable","name":"timestamp","nameLocation":"1861:9:14","nodeType":"VariableDeclaration","scope":3344,"src":"1853:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"1853:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3337,"mutability":"mutable","name":"amount","nameLocation":"1921:6:14","nodeType":"VariableDeclaration","scope":3344,"src":"1913:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"1913:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3339,"mutability":"mutable","name":"price","nameLocation":"1976:5:14","nodeType":"VariableDeclaration","scope":3344,"src":"1968:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1968:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3341,"mutability":"mutable","name":"gasUsed","nameLocation":"2031:7:14","nodeType":"VariableDeclaration","scope":3344,"src":"2023:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"2023:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3343,"mutability":"mutable","name":"slippage","nameLocation":"2093:8:14","nodeType":"VariableDeclaration","scope":3344,"src":"2085:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExecutionRecord","nameLocation":"1826:15:14","nodeType":"StructDefinition","scope":3502,"src":"1819:327:14","visibility":"public"},{"canonicalName":"IFlowFusionBridge.OrderStatus","id":3350,"members":[{"id":3345,"name":"Executing","nameLocation":"2186:9:14","nodeType":"EnumValue","src":"2186:9:14"},{"id":3346,"name":"Completed","nameLocation":"2238:9:14","nodeType":"EnumValue","src":"2238:9:14"},{"id":3347,"name":"Cancelled","nameLocation":"2289:9:14","nodeType":"EnumValue","src":"2289:9:14"},{"id":3348,"name":"Expired","nameLocation":"2341:7:14","nodeType":"EnumValue","src":"2341:7:14"},{"id":3349,"name":"Claimed","nameLocation":"2401:7:14","nodeType":"EnumValue","src":"2401:7:14"}],"name":"OrderStatus","nameLocation":"2163:11:14","nodeType":"EnumDefinition","src":"2158:305:14"},{"anonymous":false,"eventSelector":"df9b2ee7e19a4bed367d9c7cbae54540a83b4e8a242569d2bab04741cbb0f442","id":3367,"name":"OrderCreated","nameLocation":"2663:12:14","nodeType":"EventDefinition","parameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"2702:7:14","nodeType":"VariableDeclaration","scope":3367,"src":"2686:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2686:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3354,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2736:4:14","nodeType":"VariableDeclaration","scope":3367,"src":"2720:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3353,"name":"address","nodeType":"ElementaryTypeName","src":"2720:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3356,"indexed":false,"mutability":"mutable","name":"targetChain","nameLocation":"2758:11:14","nodeType":"VariableDeclaration","scope":3367,"src":"2751:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3355,"name":"string","nodeType":"ElementaryTypeName","src":"2751:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3358,"indexed":false,"mutability":"mutable","name":"sourceToken","nameLocation":"2788:11:14","nodeType":"VariableDeclaration","scope":3367,"src":"2780:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3357,"name":"address","nodeType":"ElementaryTypeName","src":"2780:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3360,"indexed":false,"mutability":"mutable","name":"sourceAmount","nameLocation":"2818:12:14","nodeType":"VariableDeclaration","scope":3367,"src":"2810:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"2810:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3362,"indexed":false,"mutability":"mutable","name":"targetToken","nameLocation":"2848:11:14","nodeType":"VariableDeclaration","scope":3367,"src":"2841:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3361,"name":"string","nodeType":"ElementaryTypeName","src":"2841:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3365,"indexed":false,"mutability":"mutable","name":"twapConfig","nameLocation":"2881:10:14","nodeType":"VariableDeclaration","scope":3367,"src":"2870:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"},"typeName":{"id":3364,"nodeType":"UserDefinedTypeName","pathNode":{"id":3363,"name":"TWAPConfig","nameLocations":["2870:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3300,"src":"2870:10:14"},"referencedDeclaration":3300,"src":"2870:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"}},"visibility":"internal"}],"src":"2675:223:14"},"src":"2657:242:14"},{"anonymous":false,"eventSelector":"a0400cd5f65cfefe748ab2bcc1454f5528f2fa3868973f587eab169b9ee75307","id":3379,"name":"TWAPExecution","nameLocation":"2913:13:14","nodeType":"EventDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"2953:7:14","nodeType":"VariableDeclaration","scope":3379,"src":"2937:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2937:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3371,"indexed":false,"mutability":"mutable","name":"intervalNumber","nameLocation":"2979:14:14","nodeType":"VariableDeclaration","scope":3379,"src":"2971:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2971:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3373,"indexed":false,"mutability":"mutable","name":"executedAmount","nameLocation":"3012:14:14","nodeType":"VariableDeclaration","scope":3379,"src":"3004:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"3004:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3375,"indexed":false,"mutability":"mutable","name":"averagePrice","nameLocation":"3045:12:14","nodeType":"VariableDeclaration","scope":3379,"src":"3037:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"3037:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3377,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3076:9:14","nodeType":"VariableDeclaration","scope":3379,"src":"3068:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"3068:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2926:166:14"},"src":"2907:186:14"},{"anonymous":false,"eventSelector":"6bccce57e82d545df0b6cb743129e904bd0701161105d8aff2b3468494c04626","id":3387,"name":"OrderCompleted","nameLocation":"3107:14:14","nodeType":"EventDefinition","parameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"3148:7:14","nodeType":"VariableDeclaration","scope":3387,"src":"3132:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3132:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3383,"indexed":false,"mutability":"mutable","name":"totalExecuted","nameLocation":"3174:13:14","nodeType":"VariableDeclaration","scope":3387,"src":"3166:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"3166:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3385,"indexed":false,"mutability":"mutable","name":"averagePrice","nameLocation":"3206:12:14","nodeType":"VariableDeclaration","scope":3387,"src":"3198:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"3198:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3121:104:14"},"src":"3101:125:14"},{"anonymous":false,"eventSelector":"b2705df32ac67fc3101f496cd7036bf59074a603544d97d73650b6f09744986a","id":3395,"name":"OrderCancelled","nameLocation":"3240:14:14","nodeType":"EventDefinition","parameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"3281:7:14","nodeType":"VariableDeclaration","scope":3395,"src":"3265:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3265:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3391,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3315:4:14","nodeType":"VariableDeclaration","scope":3395,"src":"3299:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"3299:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3393,"indexed":false,"mutability":"mutable","name":"refundAmount","nameLocation":"3338:12:14","nodeType":"VariableDeclaration","scope":3395,"src":"3330:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3330:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3254:103:14"},"src":"3234:124:14"},{"anonymous":false,"eventSelector":"1ba3fbe5fd9d0a7139d0258bb7b035b16adb3a67cd7b5db6bb0b545c71483146","id":3405,"name":"HTLCCreated","nameLocation":"3372:11:14","nodeType":"EventDefinition","parameters":{"id":3404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"3410:7:14","nodeType":"VariableDeclaration","scope":3405,"src":"3394:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3394:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3399,"indexed":true,"mutability":"mutable","name":"htlcHash","nameLocation":"3444:8:14","nodeType":"VariableDeclaration","scope":3405,"src":"3428:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3401,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3471:6:14","nodeType":"VariableDeclaration","scope":3405,"src":"3463:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3463:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3403,"indexed":false,"mutability":"mutable","name":"timeoutHeight","nameLocation":"3496:13:14","nodeType":"VariableDeclaration","scope":3405,"src":"3488:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3488:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:133:14"},"src":"3366:151:14"},{"anonymous":false,"eventSelector":"aa340c6591878fd01e1e4e4ab4fadb5d4df602a67b16ac311a26969ee8c7bc2a","id":3413,"name":"HTLCClaimed","nameLocation":"3531:11:14","nodeType":"EventDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"3569:7:14","nodeType":"VariableDeclaration","scope":3413,"src":"3553:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3553:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3409,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"3595:6:14","nodeType":"VariableDeclaration","scope":3413,"src":"3587:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3587:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3411,"indexed":false,"mutability":"mutable","name":"claimer","nameLocation":"3620:7:14","nodeType":"VariableDeclaration","scope":3413,"src":"3612:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3410,"name":"address","nodeType":"ElementaryTypeName","src":"3612:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3542:92:14"},"src":"3525:110:14"},{"documentation":{"id":3414,"nodeType":"StructuredDocumentation","src":"3833:78:14","text":" @notice Create a new TWAP order for cross-chain execution"},"functionSelector":"518479b3","id":3436,"implemented":false,"kind":"function","modifiers":[],"name":"createTWAPOrder","nameLocation":"3926:15:14","nodeType":"FunctionDefinition","parameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3416,"mutability":"mutable","name":"sourceToken","nameLocation":"3960:11:14","nodeType":"VariableDeclaration","scope":3436,"src":"3952:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3415,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3418,"mutability":"mutable","name":"sourceAmount","nameLocation":"3990:12:14","nodeType":"VariableDeclaration","scope":3436,"src":"3982:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3982:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3420,"mutability":"mutable","name":"targetChain","nameLocation":"4027:11:14","nodeType":"VariableDeclaration","scope":3436,"src":"4013:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3419,"name":"string","nodeType":"ElementaryTypeName","src":"4013:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"targetToken","nameLocation":"4063:11:14","nodeType":"VariableDeclaration","scope":3436,"src":"4049:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3421,"name":"string","nodeType":"ElementaryTypeName","src":"4049:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"targetRecipient","nameLocation":"4099:15:14","nodeType":"VariableDeclaration","scope":3436,"src":"4085:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3423,"name":"string","nodeType":"ElementaryTypeName","src":"4085:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"twapConfig","nameLocation":"4143:10:14","nodeType":"VariableDeclaration","scope":3436,"src":"4125:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"},"typeName":{"id":3426,"nodeType":"UserDefinedTypeName","pathNode":{"id":3425,"name":"TWAPConfig","nameLocations":["4125:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3300,"src":"4125:10:14"},"referencedDeclaration":3300,"src":"4125:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPConfig_$3300_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPConfig"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"htlcHash","nameLocation":"4172:8:14","nodeType":"VariableDeclaration","scope":3436,"src":"4164:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4164:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"timeoutHeight","nameLocation":"4199:13:14","nodeType":"VariableDeclaration","scope":3436,"src":"4191:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3941:278:14"},"returnParameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"orderId","nameLocation":"4254:7:14","nodeType":"VariableDeclaration","scope":3436,"src":"4246:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4245:17:14"},"scope":3502,"src":"3917:346:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3437,"nodeType":"StructuredDocumentation","src":"4271:65:14","text":" @notice Execute a TWAP interval for an order"},"functionSelector":"a3f1c420","id":3448,"implemented":false,"kind":"function","modifiers":[],"name":"executeTWAPInterval","nameLocation":"4351:19:14","nodeType":"FunctionDefinition","parameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"orderId","nameLocation":"4389:7:14","nodeType":"VariableDeclaration","scope":3448,"src":"4381:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4381:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"intervalAmount","nameLocation":"4415:14:14","nodeType":"VariableDeclaration","scope":3448,"src":"4407:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"4407:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3443,"mutability":"mutable","name":"executionPrice","nameLocation":"4448:14:14","nodeType":"VariableDeclaration","scope":3448,"src":"4440:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3445,"mutability":"mutable","name":"priceProof","nameLocation":"4488:10:14","nodeType":"VariableDeclaration","scope":3448,"src":"4473:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3444,"name":"bytes","nodeType":"ElementaryTypeName","src":"4473:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4370:135:14"},"returnParameters":{"id":3447,"nodeType":"ParameterList","parameters":[],"src":"4514:0:14"},"scope":3502,"src":"4342:173:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3449,"nodeType":"StructuredDocumentation","src":"4523:72:14","text":" @notice Cancel an order and refund remaining tokens"},"functionSelector":"7489ec23","id":3454,"implemented":false,"kind":"function","modifiers":[],"name":"cancelOrder","nameLocation":"4610:11:14","nodeType":"FunctionDefinition","parameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"orderId","nameLocation":"4630:7:14","nodeType":"VariableDeclaration","scope":3454,"src":"4622:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4622:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4621:17:14"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[],"src":"4647:0:14"},"scope":3502,"src":"4601:47:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3455,"nodeType":"StructuredDocumentation","src":"4656:80:14","text":" @notice Claim HTLC with secret to complete cross-chain swap"},"functionSelector":"9755dca0","id":3462,"implemented":false,"kind":"function","modifiers":[],"name":"claimHTLC","nameLocation":"4751:9:14","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"orderId","nameLocation":"4769:7:14","nodeType":"VariableDeclaration","scope":3462,"src":"4761:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4761:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3459,"mutability":"mutable","name":"secret","nameLocation":"4786:6:14","nodeType":"VariableDeclaration","scope":3462,"src":"4778:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4778:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4760:33:14"},"returnParameters":{"id":3461,"nodeType":"ParameterList","parameters":[],"src":"4802:0:14"},"scope":3502,"src":"4742:61:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5778472a","id":3470,"implemented":false,"kind":"function","modifiers":[],"name":"getOrder","nameLocation":"5010:8:14","nodeType":"FunctionDefinition","parameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"orderId","nameLocation":"5027:7:14","nodeType":"VariableDeclaration","scope":3470,"src":"5019:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5019:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5018:17:14"},"returnParameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3470,"src":"5059:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_memory_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"},"typeName":{"id":3467,"nodeType":"UserDefinedTypeName","pathNode":{"id":3466,"name":"TWAPOrder","nameLocations":["5059:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":3333,"src":"5059:9:14"},"referencedDeclaration":3333,"src":"5059:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_TWAPOrder_$3333_storage_ptr","typeString":"struct IFlowFusionBridge.TWAPOrder"}},"visibility":"internal"}],"src":"5058:18:14"},"scope":3502,"src":"5001:76:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"63c69f08","id":3478,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOrders","nameLocation":"5092:13:14","nodeType":"FunctionDefinition","parameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"user","nameLocation":"5114:4:14","nodeType":"VariableDeclaration","scope":3478,"src":"5106:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3471,"name":"address","nodeType":"ElementaryTypeName","src":"5106:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5105:14:14"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3478,"src":"5143:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5143:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3475,"nodeType":"ArrayTypeName","src":"5143:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5142:18:14"},"scope":3502,"src":"5083:78:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1833f0cf","id":3487,"implemented":false,"kind":"function","modifiers":[],"name":"getExecutionHistory","nameLocation":"5176:19:14","nodeType":"FunctionDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"orderId","nameLocation":"5204:7:14","nodeType":"VariableDeclaration","scope":3487,"src":"5196:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5196:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5195:17:14"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"5236:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_memory_ptr_$dyn_memory_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord[]"},"typeName":{"baseType":{"id":3483,"nodeType":"UserDefinedTypeName","pathNode":{"id":3482,"name":"ExecutionRecord","nameLocations":["5236:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":3344,"src":"5236:15:14"},"referencedDeclaration":3344,"src":"5236:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExecutionRecord_$3344_storage_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord"}},"id":3484,"nodeType":"ArrayTypeName","src":"5236:17:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ExecutionRecord_$3344_storage_$dyn_storage_ptr","typeString":"struct IFlowFusionBridge.ExecutionRecord[]"}},"visibility":"internal"}],"src":"5235:26:14"},"scope":3502,"src":"5167:95:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a89a6f69","id":3494,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentTWAPPrice","nameLocation":"5277:19:14","nodeType":"FunctionDefinition","parameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"orderId","nameLocation":"5305:7:14","nodeType":"VariableDeclaration","scope":3494,"src":"5297:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5297:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5296:17:14"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3494,"src":"5337:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"5337:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5336:9:14"},"scope":3502,"src":"5268:78:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dc33597d","id":3501,"implemented":false,"kind":"function","modifiers":[],"name":"getNextExecutionTime","nameLocation":"5361:20:14","nodeType":"FunctionDefinition","parameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"orderId","nameLocation":"5390:7:14","nodeType":"VariableDeclaration","scope":3501,"src":"5382:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5382:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5381:17:14"},"returnParameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3501,"src":"5422:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3498,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5421:9:14"},"scope":3502,"src":"5352:79:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3503,"src":"161:5273:14","usedErrors":[],"usedEvents":[3367,3379,3387,3395,3405,3413]}],"src":"33:5401:14"},"id":14},"contracts/libraries/TWAPMath.sol":{"ast":{"absolutePath":"contracts/libraries/TWAPMath.sol","exportedSymbols":{"TWAPMath":[4222]},"id":4223,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3504,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"TWAPMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3505,"nodeType":"StructuredDocumentation","src":"61:178:15","text":" @title TWAPMath\n @notice Library for Time-Weighted Average Price calculations and related math\n @dev Used by FlowFusion Bridge for sophisticated TWAP execution"},"fullyImplemented":true,"id":4222,"linearizedBaseContracts":[4222],"name":"TWAPMath","nameLocation":"249:8:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3508,"mutability":"constant","name":"BASIS_POINTS","nameLocation":"477:12:15","nodeType":"VariableDeclaration","scope":4222,"src":"460:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"460:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"492:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"internal"},{"constant":true,"id":3511,"mutability":"constant","name":"PRECISION","nameLocation":"521:9:15","nodeType":"VariableDeclaration","scope":4222,"src":"504:33:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"533:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"canonicalName":"TWAPMath.PricePoint","id":3518,"members":[{"constant":false,"id":3513,"mutability":"mutable","name":"timestamp","nameLocation":"774:9:15","nodeType":"VariableDeclaration","scope":3518,"src":"766:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"price","nameLocation":"802:5:15","nodeType":"VariableDeclaration","scope":3518,"src":"794:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"794:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3517,"mutability":"mutable","name":"volume","nameLocation":"826:6:15","nodeType":"VariableDeclaration","scope":3518,"src":"818:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PricePoint","nameLocation":"744:10:15","nodeType":"StructDefinition","scope":4222,"src":"737:103:15","visibility":"public"},{"canonicalName":"TWAPMath.TWAPData","id":3527,"members":[{"constant":false,"id":3520,"mutability":"mutable","name":"cumulativePrice","nameLocation":"887:15:15","nodeType":"VariableDeclaration","scope":3527,"src":"879:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"cumulativeVolume","nameLocation":"921:16:15","nodeType":"VariableDeclaration","scope":3527,"src":"913:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"913:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"lastUpdateTime","nameLocation":"956:14:15","nodeType":"VariableDeclaration","scope":3527,"src":"948:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"948:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"windowStart","nameLocation":"989:11:15","nodeType":"VariableDeclaration","scope":3527,"src":"981:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TWAPData","nameLocation":"859:8:15","nodeType":"StructDefinition","scope":4222,"src":"852:156:15","visibility":"public"},{"body":{"id":3646,"nodeType":"Block","src":"1697:918:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3542,"name":"windowEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"1716:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3543,"name":"windowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"1728:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1716:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077696e646f77","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1741:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2f2d38fac74ec1644b7e8e745a95f6a90a3df55c76b9ac70569cffd9e094123","typeString":"literal_string \"Invalid window\""},"value":"Invalid window"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d2f2d38fac74ec1644b7e8e745a95f6a90a3df55c76b9ac70569cffd9e094123","typeString":"literal_string \"Invalid window\""}],"id":3541,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1708:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1708:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3547,"nodeType":"ExpressionStatement","src":"1708:50:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3548,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"1783:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1795:6:15","memberName":"length","nodeType":"MemberAccess","src":"1783:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1805:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1783:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3554,"nodeType":"IfStatement","src":"1779:37:15","trueBody":{"expression":{"hexValue":"30","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1815:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3540,"id":3553,"nodeType":"Return","src":"1808:8:15"}},{"assignments":[3556],"declarations":[{"constant":false,"id":3556,"mutability":"mutable","name":"totalValue","nameLocation":"1845:10:15","nodeType":"VariableDeclaration","scope":3646,"src":"1837:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3558,"initialValue":{"hexValue":"30","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1858:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1837:22:15"},{"assignments":[3560],"declarations":[{"constant":false,"id":3560,"mutability":"mutable","name":"totalTime","nameLocation":"1878:9:15","nodeType":"VariableDeclaration","scope":3646,"src":"1870:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3562,"initialValue":{"hexValue":"30","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1890:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1870:21:15"},{"body":{"id":3635,"nodeType":"Block","src":"1961:577:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3574,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"1980:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3576,"indexExpression":{"id":3575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"1992:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1980:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1995:9:15","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"1980:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3578,"name":"windowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"2008:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1980:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3580,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2023:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3582,"indexExpression":{"id":3581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"2035:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2023:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2038:9:15","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"2023:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3584,"name":"windowEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"2051:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2023:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1980:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3634,"nodeType":"IfStatement","src":"1976:551:15","trueBody":{"id":3633,"nodeType":"Block","src":"2062:465:15","statements":[{"assignments":[3588],"declarations":[{"constant":false,"id":3588,"mutability":"mutable","name":"timeWeight","nameLocation":"2089:10:15","nodeType":"VariableDeclaration","scope":3633,"src":"2081:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2081:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3607,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"2102:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2106:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2102:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3603,"name":"windowEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"2210:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3604,"name":"windowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"2222:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2210:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2102:131:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3592,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2132:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3594,"indexExpression":{"id":3593,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"2144:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2132:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2147:9:15","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"2132:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":3596,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2159:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3600,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"2171:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2171:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2159:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2176:9:15","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"2159:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2132:53:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2081:152:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"timeWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"2332:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2345:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2332:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3611,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2350:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3613,"indexExpression":{"id":3612,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"2362:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2350:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2365:5:15","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3515,"src":"2350:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2373:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2350:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2332:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3632,"nodeType":"IfStatement","src":"2328:184:15","trueBody":{"id":3631,"nodeType":"Block","src":"2376:136:15","statements":[{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3618,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"2399:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3619,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2413:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3621,"indexExpression":{"id":3620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"2425:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2413:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2428:5:15","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3515,"src":"2413:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3623,"name":"timeWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"2436:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2413:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2399:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3626,"nodeType":"ExpressionStatement","src":"2399:47:15"},{"expression":{"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3627,"name":"totalTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"2469:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3628,"name":"timeWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"2482:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2469:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3630,"nodeType":"ExpressionStatement","src":"2469:23:15"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"1932:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3568,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"1936:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1948:6:15","memberName":"length","nodeType":"MemberAccess","src":"1936:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1932:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3636,"initializationExpression":{"assignments":[3564],"declarations":[{"constant":false,"id":3564,"mutability":"mutable","name":"i","nameLocation":"1925:1:15","nodeType":"VariableDeclaration","scope":3636,"src":"1917:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1917:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3566,"initialValue":{"hexValue":"30","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1929:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1917:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1956:3:15","subExpression":{"id":3571,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"1956:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3573,"nodeType":"ExpressionStatement","src":"1956:3:15"},"nodeType":"ForStatement","src":"1912:626:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"totalTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"2565:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2577:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2565:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2606:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2565:42:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"2581:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3641,"name":"totalTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"2594:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2581:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3540,"id":3645,"nodeType":"Return","src":"2558:49:15"}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"1209:310:15","text":" @notice Calculate Time-Weighted Average Price from price points\n @param pricePoints Array of price data points\n @param windowStart Start of the TWAP window (timestamp)\n @param windowEnd End of the TWAP window (timestamp)\n @return twapPrice Calculated TWAP price"},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"calculateTWAP","nameLocation":"1534:13:15","nodeType":"FunctionDefinition","parameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"pricePoints","nameLocation":"1578:11:15","nodeType":"VariableDeclaration","scope":3647,"src":"1558:31:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint[]"},"typeName":{"baseType":{"id":3530,"nodeType":"UserDefinedTypeName","pathNode":{"id":3529,"name":"PricePoint","nameLocations":["1558:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3518,"src":"1558:10:15"},"referencedDeclaration":3518,"src":"1558:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_storage_ptr","typeString":"struct TWAPMath.PricePoint"}},"id":3531,"nodeType":"ArrayTypeName","src":"1558:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_storage_$dyn_storage_ptr","typeString":"struct TWAPMath.PricePoint[]"}},"visibility":"internal"},{"constant":false,"id":3534,"mutability":"mutable","name":"windowStart","nameLocation":"1608:11:15","nodeType":"VariableDeclaration","scope":3647,"src":"1600:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"1600:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"windowEnd","nameLocation":"1638:9:15","nodeType":"VariableDeclaration","scope":3647,"src":"1630:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:107:15"},"returnParameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"twapPrice","nameLocation":"1686:9:15","nodeType":"VariableDeclaration","scope":3647,"src":"1678:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1677:19:15"},"scope":4222,"src":"1525:1090:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3746,"nodeType":"Block","src":"3087:689:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"windowEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"3106:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3663,"name":"windowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"3118:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3106:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077696e646f77","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3131:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2f2d38fac74ec1644b7e8e745a95f6a90a3df55c76b9ac70569cffd9e094123","typeString":"literal_string \"Invalid window\""},"value":"Invalid window"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d2f2d38fac74ec1644b7e8e745a95f6a90a3df55c76b9ac70569cffd9e094123","typeString":"literal_string \"Invalid window\""}],"id":3661,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3098:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3098:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3667,"nodeType":"ExpressionStatement","src":"3098:50:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3668,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3173:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:6:15","memberName":"length","nodeType":"MemberAccess","src":"3173:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3195:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3173:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3674,"nodeType":"IfStatement","src":"3169:37:15","trueBody":{"expression":{"hexValue":"30","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3205:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3660,"id":3673,"nodeType":"Return","src":"3198:8:15"}},{"assignments":[3676],"declarations":[{"constant":false,"id":3676,"mutability":"mutable","name":"totalValue","nameLocation":"3235:10:15","nodeType":"VariableDeclaration","scope":3746,"src":"3227:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"3227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3678,"initialValue":{"hexValue":"30","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3248:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3227:22:15"},{"assignments":[3680],"declarations":[{"constant":false,"id":3680,"mutability":"mutable","name":"totalVolume","nameLocation":"3268:11:15","nodeType":"VariableDeclaration","scope":3746,"src":"3260:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3682,"initialValue":{"hexValue":"30","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3282:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3260:23:15"},{"body":{"id":3735,"nodeType":"Block","src":"3353:342:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3694,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3372:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3696,"indexExpression":{"id":3695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3384:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3372:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3387:9:15","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"3372:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3698,"name":"windowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"3400:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3372:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3700,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3433:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3702,"indexExpression":{"id":3701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3445:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3433:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3448:9:15","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"3433:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3704,"name":"windowEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"3461:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3433:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3372:98:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3707,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3491:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3709,"indexExpression":{"id":3708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3503:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3491:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3506:6:15","memberName":"volume","nodeType":"MemberAccess","referencedDeclaration":3517,"src":"3491:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3515:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3491:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3372:144:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3734,"nodeType":"IfStatement","src":"3368:316:15","trueBody":{"id":3733,"nodeType":"Block","src":"3518:166:15","statements":[{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3714,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"3555:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3715,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3569:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3717,"indexExpression":{"id":3716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3581:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3569:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3584:5:15","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3515,"src":"3569:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"baseExpression":{"id":3719,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3592:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3721,"indexExpression":{"id":3720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3604:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3592:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3607:6:15","memberName":"volume","nodeType":"MemberAccess","referencedDeclaration":3517,"src":"3592:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3569:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3555:58:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ExpressionStatement","src":"3555:58:15"},{"expression":{"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"totalVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3632:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":3727,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3647:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3729,"indexExpression":{"id":3728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3659:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3647:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_memory_ptr","typeString":"struct TWAPMath.PricePoint memory"}},"id":3730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3662:6:15","memberName":"volume","nodeType":"MemberAccess","referencedDeclaration":3517,"src":"3647:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3632:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3732,"nodeType":"ExpressionStatement","src":"3632:36:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3324:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3688,"name":"pricePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3328:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint memory[] memory"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3340:6:15","memberName":"length","nodeType":"MemberAccess","src":"3328:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3324:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3736,"initializationExpression":{"assignments":[3684],"declarations":[{"constant":false,"id":3684,"mutability":"mutable","name":"i","nameLocation":"3317:1:15","nodeType":"VariableDeclaration","scope":3736,"src":"3309:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"3309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3686,"initialValue":{"hexValue":"30","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3321:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3309:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3348:3:15","subExpression":{"id":3691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3348:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3693,"nodeType":"ExpressionStatement","src":"3348:3:15"},"nodeType":"ForStatement","src":"3304:391:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3737,"name":"totalVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3722:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3736:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3722:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3767:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3722:46:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"3740:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3741,"name":"totalVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3753:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3740:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3660,"id":3745,"nodeType":"Return","src":"3715:53:15"}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"2627:282:15","text":" @notice Calculate Volume-Weighted Average Price\n @param pricePoints Array of price data points with volume\n @param windowStart Start of the VWAP window\n @param windowEnd End of the VWAP window\n @return vwapPrice Calculated VWAP price"},"id":3747,"implemented":true,"kind":"function","modifiers":[],"name":"calculateVWAP","nameLocation":"2924:13:15","nodeType":"FunctionDefinition","parameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"pricePoints","nameLocation":"2968:11:15","nodeType":"VariableDeclaration","scope":3747,"src":"2948:31:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_memory_ptr_$dyn_memory_ptr","typeString":"struct TWAPMath.PricePoint[]"},"typeName":{"baseType":{"id":3650,"nodeType":"UserDefinedTypeName","pathNode":{"id":3649,"name":"PricePoint","nameLocations":["2948:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3518,"src":"2948:10:15"},"referencedDeclaration":3518,"src":"2948:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_PricePoint_$3518_storage_ptr","typeString":"struct TWAPMath.PricePoint"}},"id":3651,"nodeType":"ArrayTypeName","src":"2948:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PricePoint_$3518_storage_$dyn_storage_ptr","typeString":"struct TWAPMath.PricePoint[]"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"windowStart","nameLocation":"2998:11:15","nodeType":"VariableDeclaration","scope":3747,"src":"2990:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"2990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3656,"mutability":"mutable","name":"windowEnd","nameLocation":"3028:9:15","nodeType":"VariableDeclaration","scope":3747,"src":"3020:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2937:107:15"},"returnParameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"vwapPrice","nameLocation":"3076:9:15","nodeType":"VariableDeclaration","scope":3747,"src":"3068:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"3068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3067:19:15"},"scope":4222,"src":"2915:861:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3783,"nodeType":"Block","src":"4346:279:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3757,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4361:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4378:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4361:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3762,"nodeType":"IfStatement","src":"4357:32:15","trueBody":{"expression":{"hexValue":"30","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4388:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3756,"id":3761,"nodeType":"Return","src":"4381:8:15"}},{"assignments":[3764],"declarations":[{"constant":false,"id":3764,"mutability":"mutable","name":"difference","nameLocation":"4418:10:15","nodeType":"VariableDeclaration","scope":3783,"src":"4410:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"4410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3775,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3765,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4431:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3766,"name":"actualPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"4447:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4431:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"actualPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"4519:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3772,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4533:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4519:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4431:115:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3768,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4475:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3769,"name":"actualPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"4491:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4475:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4410:136:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3776,"name":"difference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4575:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3777,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"4588:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4575:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4574:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3780,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4604:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4574:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3756,"id":3782,"nodeType":"Return","src":"4567:50:15"}]},"documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"3978:225:15","text":" @notice Calculate slippage between expected and actual price\n @param expectedPrice Expected price\n @param actualPrice Actual execution price\n @return slippage Slippage in basis points"},"id":3784,"implemented":true,"kind":"function","modifiers":[],"name":"calculateSlippage","nameLocation":"4218:17:15","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"expectedPrice","nameLocation":"4254:13:15","nodeType":"VariableDeclaration","scope":3784,"src":"4246:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"4246:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"actualPrice","nameLocation":"4286:11:15","nodeType":"VariableDeclaration","scope":3784,"src":"4278:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"4278:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4235:69:15"},"returnParameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"slippage","nameLocation":"4336:8:15","nodeType":"VariableDeclaration","scope":3784,"src":"4328:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"4328:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4327:18:15"},"scope":4222,"src":"4209:416:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3807,"nodeType":"Block","src":"5088:124:15","statements":[{"assignments":[3797],"declarations":[{"constant":false,"id":3797,"mutability":"mutable","name":"slippage","nameLocation":"5107:8:15","nodeType":"VariableDeclaration","scope":3807,"src":"5099:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"5099:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3802,"initialValue":{"arguments":[{"id":3799,"name":"expectedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"5136:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3800,"name":"actualPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"5151:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3798,"name":"calculateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"5118:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5099:64:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"5181:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3804,"name":"maxSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"5193:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5181:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3795,"id":3806,"nodeType":"Return","src":"5174:30:15"}]},"documentation":{"id":3785,"nodeType":"StructuredDocumentation","src":"4637:279:15","text":" @notice Check if slippage is within tolerance\n @param expectedPrice Expected price\n @param actualPrice Actual price\n @param maxSlippage Maximum allowed slippage in basis points\n @return isValid True if slippage is within tolerance"},"id":3808,"implemented":true,"kind":"function","modifiers":[],"name":"isSlippageAcceptable","nameLocation":"4931:20:15","nodeType":"FunctionDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"expectedPrice","nameLocation":"4970:13:15","nodeType":"VariableDeclaration","scope":3808,"src":"4962:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"4962:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"actualPrice","nameLocation":"5002:11:15","nodeType":"VariableDeclaration","scope":3808,"src":"4994:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4994:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"maxSlippage","nameLocation":"5032:11:15","nodeType":"VariableDeclaration","scope":3808,"src":"5024:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"5024:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4951:99:15"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"isValid","nameLocation":"5079:7:15","nodeType":"VariableDeclaration","scope":3808,"src":"5074:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3793,"name":"bool","nodeType":"ElementaryTypeName","src":"5074:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5073:14:15"},"scope":4222,"src":"4922:290:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3846,"nodeType":"Block","src":"5859:372:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3820,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"5874:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5887:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"5892:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5908:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5892:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5874:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3829,"nodeType":"IfStatement","src":"5870:60:15","trueBody":{"expression":{"id":3827,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"5918:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3819,"id":3828,"nodeType":"Return","src":"5911:19:15"}},{"assignments":[3831],"declarations":[{"constant":false,"id":3831,"mutability":"mutable","name":"impactRatio","nameLocation":"6057:11:15","nodeType":"VariableDeclaration","scope":3846,"src":"6049:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3838,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"tradeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"6072:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3833,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"6084:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6072:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6071:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3836,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"6100:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6071:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6049:60:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3839,"name":"impactRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"6168:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3840,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"6182:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6168:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3843,"name":"impactRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"6212:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6168:55:15","trueExpression":{"id":3842,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"6197:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3819,"id":3845,"nodeType":"Return","src":"6161:62:15"}]},"documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"5417:268:15","text":" @notice Calculate price impact for a given trade size\n @param currentPrice Current market price\n @param tradeSize Size of the trade\n @param liquidity Available liquidity\n @return priceImpact Price impact in basis points"},"id":3847,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePriceImpact","nameLocation":"5700:20:15","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"currentPrice","nameLocation":"5739:12:15","nodeType":"VariableDeclaration","scope":3847,"src":"5731:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"5731:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"tradeSize","nameLocation":"5770:9:15","nodeType":"VariableDeclaration","scope":3847,"src":"5762:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"5762:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"liquidity","nameLocation":"5798:9:15","nodeType":"VariableDeclaration","scope":3847,"src":"5790:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5720:94:15"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"priceImpact","nameLocation":"5846:11:15","nodeType":"VariableDeclaration","scope":3847,"src":"5838:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"5838:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5837:21:15"},"scope":4222,"src":"5691:540:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3879,"nodeType":"Block","src":"6924:206:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"numberOfIntervals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"6943:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6963:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6943:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e74657276616c73","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6966:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a341bd201ea32b3e0db5d0369e742c531f7305dd76ec65f322870f09ca244bd3","typeString":"literal_string \"Invalid intervals\""},"value":"Invalid intervals"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a341bd201ea32b3e0db5d0369e742c531f7305dd76ec65f322870f09ca244bd3","typeString":"literal_string \"Invalid intervals\""}],"id":3859,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6935:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3865,"nodeType":"ExpressionStatement","src":"6935:51:15"},{"assignments":[3867],"declarations":[{"constant":false,"id":3867,"mutability":"mutable","name":"baseSize","nameLocation":"7015:8:15","nodeType":"VariableDeclaration","scope":3879,"src":"7007:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"7007:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3871,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3868,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"7026:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3869,"name":"numberOfIntervals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"7040:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7026:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7007:50:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3872,"name":"baseSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"7075:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3873,"name":"minFillSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"7086:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7075:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3876,"name":"baseSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"7114:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7075:47:15","trueExpression":{"id":3875,"name":"minFillSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"7100:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3858,"id":3878,"nodeType":"Return","src":"7068:54:15"}]},"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"6433:306:15","text":" @notice Calculate optimal interval size for TWAP execution\n @param totalAmount Total amount to execute\n @param numberOfIntervals Number of execution intervals\n @param minFillSize Minimum fill size per interval\n @return intervalSize Optimal size per interval"},"id":3880,"implemented":true,"kind":"function","modifiers":[],"name":"calculateIntervalSize","nameLocation":"6754:21:15","nodeType":"FunctionDefinition","parameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"totalAmount","nameLocation":"6794:11:15","nodeType":"VariableDeclaration","scope":3880,"src":"6786:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"6786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"numberOfIntervals","nameLocation":"6824:17:15","nodeType":"VariableDeclaration","scope":3880,"src":"6816:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"6816:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3854,"mutability":"mutable","name":"minFillSize","nameLocation":"6860:11:15","nodeType":"VariableDeclaration","scope":3880,"src":"6852:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"6852:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6775:103:15"},"returnParameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"intervalSize","nameLocation":"6910:12:15","nodeType":"VariableDeclaration","scope":3880,"src":"6902:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"6902:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6901:22:15"},"scope":4222,"src":"6745:385:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3904,"nodeType":"Block","src":"7565:128:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3891,"name":"numberOfIntervals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"7584:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7604:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7584:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e74657276616c73","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7607:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a341bd201ea32b3e0db5d0369e742c531f7305dd76ec65f322870f09ca244bd3","typeString":"literal_string \"Invalid intervals\""},"value":"Invalid intervals"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a341bd201ea32b3e0db5d0369e742c531f7305dd76ec65f322870f09ca244bd3","typeString":"literal_string \"Invalid intervals\""}],"id":3890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7576:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7576:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3896,"nodeType":"ExpressionStatement","src":"7576:51:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"windowMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"7646:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7662:2:15","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"7646:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7645:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3901,"name":"numberOfIntervals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"7668:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7645:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3889,"id":3903,"nodeType":"Return","src":"7638:47:15"}]},"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"7142:258:15","text":" @notice Calculate time between intervals\n @param windowMinutes Total execution window in minutes\n @param numberOfIntervals Number of execution intervals\n @return intervalDuration Duration between intervals in seconds"},"id":3905,"implemented":true,"kind":"function","modifiers":[],"name":"calculateIntervalDuration","nameLocation":"7415:25:15","nodeType":"FunctionDefinition","parameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"windowMinutes","nameLocation":"7459:13:15","nodeType":"VariableDeclaration","scope":3905,"src":"7451:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"7451:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"numberOfIntervals","nameLocation":"7491:17:15","nodeType":"VariableDeclaration","scope":3905,"src":"7483:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"7483:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7440:75:15"},"returnParameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"intervalDuration","nameLocation":"7547:16:15","nodeType":"VariableDeclaration","scope":3905,"src":"7539:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"7539:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7538:26:15"},"scope":4222,"src":"7406:287:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3979,"nodeType":"Block","src":"8278:455:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3918,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"8297:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8304:6:15","memberName":"length","nodeType":"MemberAccess","src":"8297:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3920,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"8314:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8322:6:15","memberName":"length","nodeType":"MemberAccess","src":"8314:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8297:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172726179206c656e677468206d69736d61746368","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8330:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea","typeString":"literal_string \"Array length mismatch\""},"value":"Array length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea","typeString":"literal_string \"Array length mismatch\""}],"id":3917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8289:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8289:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3925,"nodeType":"ExpressionStatement","src":"8289:65:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3926,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"8379:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8386:6:15","memberName":"length","nodeType":"MemberAccess","src":"8379:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8396:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8379:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3932,"nodeType":"IfStatement","src":"8375:32:15","trueBody":{"expression":{"hexValue":"30","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8406:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3916,"id":3931,"nodeType":"Return","src":"8399:8:15"}},{"assignments":[3934],"declarations":[{"constant":false,"id":3934,"mutability":"mutable","name":"totalValue","nameLocation":"8436:10:15","nodeType":"VariableDeclaration","scope":3979,"src":"8428:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"8428:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3936,"initialValue":{"hexValue":"30","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8449:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8428:22:15"},{"assignments":[3938],"declarations":[{"constant":false,"id":3938,"mutability":"mutable","name":"totalWeight","nameLocation":"8469:11:15","nodeType":"VariableDeclaration","scope":3979,"src":"8461:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"8461:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3940,"initialValue":{"hexValue":"30","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8483:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8461:23:15"},{"body":{"id":3968,"nodeType":"Block","src":"8549:103:15","statements":[{"expression":{"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3952,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"8564:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3953,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"8578:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3955,"indexExpression":{"id":3954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"8585:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8578:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"id":3956,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"8590:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3958,"indexExpression":{"id":3957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"8598:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8590:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8578:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8564:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3961,"nodeType":"ExpressionStatement","src":"8564:36:15"},{"expression":{"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3962,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"8615:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3963,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"8630:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3965,"indexExpression":{"id":3964,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"8638:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8630:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8615:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3967,"nodeType":"ExpressionStatement","src":"8615:25:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"8525:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3946,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"8529:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8536:6:15","memberName":"length","nodeType":"MemberAccess","src":"8529:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3969,"initializationExpression":{"assignments":[3942],"declarations":[{"constant":false,"id":3942,"mutability":"mutable","name":"i","nameLocation":"8518:1:15","nodeType":"VariableDeclaration","scope":3969,"src":"8510:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"8510:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3944,"initialValue":{"hexValue":"30","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8522:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8510:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8544:3:15","subExpression":{"id":3949,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"8544:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3951,"nodeType":"ExpressionStatement","src":"8544:3:15"},"nodeType":"ForStatement","src":"8505:147:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"8679:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8693:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8679:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8724:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8679:46:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"8697:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3974,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"8710:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8697:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3916,"id":3978,"nodeType":"Return","src":"8672:53:15"}]},"documentation":{"id":3906,"nodeType":"StructuredDocumentation","src":"7891:223:15","text":" @notice Calculate weighted average price\n @param prices Array of prices\n @param weights Array of weights (same length as prices)\n @return weightedAverage Calculated weighted average"},"id":3980,"implemented":true,"kind":"function","modifiers":[],"name":"calculateWeightedAverage","nameLocation":"8129:24:15","nodeType":"FunctionDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"prices","nameLocation":"8181:6:15","nodeType":"VariableDeclaration","scope":3980,"src":"8164:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"8164:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3908,"nodeType":"ArrayTypeName","src":"8164:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"weights","nameLocation":"8215:7:15","nodeType":"VariableDeclaration","scope":3980,"src":"8198:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"8198:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3911,"nodeType":"ArrayTypeName","src":"8198:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8153:76:15"},"returnParameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"weightedAverage","nameLocation":"8261:15:15","nodeType":"VariableDeclaration","scope":3980,"src":"8253:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8252:25:15"},"scope":4222,"src":"8120:613:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4033,"nodeType":"Block","src":"9359:352:15","statements":[{"expression":{"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3996,"name":"newTotalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"9370:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3997,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"9387:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3998,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"9403:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9387:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9370:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4001,"nodeType":"ExpressionStatement","src":"9370:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4002,"name":"newTotalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"9437:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9437:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4010,"nodeType":"IfStatement","src":"9433:65:15","trueBody":{"id":4009,"nodeType":"Block","src":"9458:40:15","statements":[{"expression":{"components":[{"hexValue":"30","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9481:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9480:6:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(int_const 0,int_const 0)"}},"functionReturnParameters":3995,"id":4008,"nodeType":"Return","src":"9473:13:15"}]}},{"assignments":[4012],"declarations":[{"constant":false,"id":4012,"mutability":"mutable","name":"totalValue","nameLocation":"9526:10:15","nodeType":"VariableDeclaration","scope":4033,"src":"9518:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"9518:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4022,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"currentAverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"9540:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4014,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"9557:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9540:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9539:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"9575:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4018,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"9586:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9575:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9574:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9539:57:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9518:78:15"},{"expression":{"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4023,"name":"newAverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"9607:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4024,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"9620:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4025,"name":"newTotalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"9633:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9620:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9607:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"nodeType":"ExpressionStatement","src":"9607:40:15"},{"expression":{"components":[{"id":4029,"name":"newAverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"9676:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4030,"name":"newTotalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"9688:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9675:28:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3995,"id":4032,"nodeType":"Return","src":"9668:35:15"}]},"documentation":{"id":3981,"nodeType":"StructuredDocumentation","src":"8745:383:15","text":" @notice Update running weighted average with new data point\n @param currentAverage Current weighted average\n @param currentWeight Current total weight\n @param newPrice New price to incorporate\n @param newWeight Weight of new price\n @return newAverage Updated weighted average\n @return newTotalWeight Updated total weight"},"id":4034,"implemented":true,"kind":"function","modifiers":[],"name":"updateWeightedAverage","nameLocation":"9143:21:15","nodeType":"FunctionDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"currentAverage","nameLocation":"9183:14:15","nodeType":"VariableDeclaration","scope":4034,"src":"9175:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"9175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"currentWeight","nameLocation":"9216:13:15","nodeType":"VariableDeclaration","scope":4034,"src":"9208:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3987,"mutability":"mutable","name":"newPrice","nameLocation":"9248:8:15","nodeType":"VariableDeclaration","scope":4034,"src":"9240:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"9240:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"newWeight","nameLocation":"9275:9:15","nodeType":"VariableDeclaration","scope":4034,"src":"9267:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"9267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9164:127:15"},"returnParameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"newAverage","nameLocation":"9323:10:15","nodeType":"VariableDeclaration","scope":4034,"src":"9315:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3991,"name":"uint256","nodeType":"ElementaryTypeName","src":"9315:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3994,"mutability":"mutable","name":"newTotalWeight","nameLocation":"9343:14:15","nodeType":"VariableDeclaration","scope":4034,"src":"9335:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"9335:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9314:44:15"},"scope":4222,"src":"9134:577:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4067,"nodeType":"Block","src":"10060:143:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"10075:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10080:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10075:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4049,"nodeType":"IfStatement","src":"10071:20:15","trueBody":{"expression":{"hexValue":"30","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10090:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4043,"id":4048,"nodeType":"Return","src":"10083:8:15"}},{"assignments":[4051],"declarations":[{"constant":false,"id":4051,"mutability":"mutable","name":"c","nameLocation":"10110:1:15","nodeType":"VariableDeclaration","scope":4067,"src":"10102:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"10102:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4055,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"10114:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"10118:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10114:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10102:17:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"10138:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4058,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"10142:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10138:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4060,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"10147:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10138:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d756c7469706c69636174696f6e206f766572666c6f77","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10150:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_dfe0f0a3ecafd4d6519512e2e4972a72010da152fae0ced1df44c5b22b64194f","typeString":"literal_string \"Multiplication overflow\""},"value":"Multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dfe0f0a3ecafd4d6519512e2e4972a72010da152fae0ced1df44c5b22b64194f","typeString":"literal_string \"Multiplication overflow\""}],"id":4056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10130:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10130:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4064,"nodeType":"ExpressionStatement","src":"10130:46:15"},{"expression":{"id":4065,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"10194:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4043,"id":4066,"nodeType":"Return","src":"10187:8:15"}]},"documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"9910:73:15","text":" @notice Safe multiplication with overflow protection"},"id":4068,"implemented":true,"kind":"function","modifiers":[],"name":"safeMul","nameLocation":"9998:7:15","nodeType":"FunctionDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"a","nameLocation":"10014:1:15","nodeType":"VariableDeclaration","scope":4068,"src":"10006:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"10006:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4039,"mutability":"mutable","name":"b","nameLocation":"10025:1:15","nodeType":"VariableDeclaration","scope":4068,"src":"10017:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4038,"name":"uint256","nodeType":"ElementaryTypeName","src":"10017:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10005:22:15"},"returnParameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4068,"src":"10051:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"10051:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10050:9:15"},"scope":4222,"src":"9989:214:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4089,"nodeType":"Block","src":"10355:76:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4079,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"10374:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10378:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10374:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4469766973696f6e206279207a65726f","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10381:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_968e8a9596f7536bebaa1dc35ec1b8ce462e72aa79d0d2852a644435cad20b58","typeString":"literal_string \"Division by zero\""},"value":"Division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_968e8a9596f7536bebaa1dc35ec1b8ce462e72aa79d0d2852a644435cad20b58","typeString":"literal_string \"Division by zero\""}],"id":4078,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10366:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10366:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4084,"nodeType":"ExpressionStatement","src":"10366:34:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10418:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4086,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"10422:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10418:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4077,"id":4088,"nodeType":"Return","src":"10411:12:15"}]},"documentation":{"id":4069,"nodeType":"StructuredDocumentation","src":"10215:63:15","text":" @notice Safe division with zero protection"},"id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"safeDiv","nameLocation":"10293:7:15","nodeType":"FunctionDefinition","parameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4071,"mutability":"mutable","name":"a","nameLocation":"10309:1:15","nodeType":"VariableDeclaration","scope":4090,"src":"10301:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4073,"mutability":"mutable","name":"b","nameLocation":"10320:1:15","nodeType":"VariableDeclaration","scope":4090,"src":"10312:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4072,"name":"uint256","nodeType":"ElementaryTypeName","src":"10312:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:22:15"},"returnParameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4090,"src":"10346:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"10346:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10345:9:15"},"scope":4222,"src":"10284:147:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4107,"nodeType":"Block","src":"10726:61:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"10745:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4101,"name":"percentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"10753:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10745:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10744:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4104,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"10767:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10744:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4099,"id":4106,"nodeType":"Return","src":"10737:42:15"}]},"documentation":{"id":4091,"nodeType":"StructuredDocumentation","src":"10443:190:15","text":" @notice Calculate percentage of a value\n @param value Base value\n @param percentage Percentage in basis points\n @return result Calculated percentage"},"id":4108,"implemented":true,"kind":"function","modifiers":[],"name":"percentage","nameLocation":"10648:10:15","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"value","nameLocation":"10667:5:15","nodeType":"VariableDeclaration","scope":4108,"src":"10659:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"10659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"percentage","nameLocation":"10682:10:15","nodeType":"VariableDeclaration","scope":4108,"src":"10674:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"10674:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10658:35:15"},"returnParameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4108,"src":"10717:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"10717:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10716:9:15"},"scope":4222,"src":"10639:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4175,"nodeType":"Block","src":"11197:442:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"progress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"11216:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4122,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"11228:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11216:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6772657373206f7574206f662072616e6765","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11239:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cccfb913140106af928629a00d742b064ba5dda548ae9d1b7f4a37c70771f7db","typeString":"literal_string \"Progress out of range\""},"value":"Progress out of range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cccfb913140106af928629a00d742b064ba5dda548ae9d1b7f4a37c70771f7db","typeString":"literal_string \"Progress out of range\""}],"id":4120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11208:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11208:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4126,"nodeType":"ExpressionStatement","src":"11208:55:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4127,"name":"progress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"11288:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11300:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11288:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4132,"nodeType":"IfStatement","src":"11284:31:15","trueBody":{"expression":{"id":4130,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"11310:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4119,"id":4131,"nodeType":"Return","src":"11303:12:15"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4133,"name":"progress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"11330:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4134,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"11342:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11330:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4138,"nodeType":"IfStatement","src":"11326:37:15","trueBody":{"expression":{"id":4136,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11360:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4119,"id":4137,"nodeType":"Return","src":"11353:10:15"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4139,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11388:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4140,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"11395:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11388:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4173,"nodeType":"Block","src":"11520:112:15","statements":[{"assignments":[4159],"declarations":[{"constant":false,"id":4159,"mutability":"mutable","name":"diff","nameLocation":"11543:4:15","nodeType":"VariableDeclaration","scope":4173,"src":"11535:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4163,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"11550:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4161,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11558:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11550:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11535:26:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4164,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"11583:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4165,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"11592:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4166,"name":"progress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"11599:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11592:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11591:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4169,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"11611:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11591:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11583:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4119,"id":4172,"nodeType":"Return","src":"11576:44:15"}]},"id":4174,"nodeType":"IfStatement","src":"11384:248:15","trueBody":{"id":4157,"nodeType":"Block","src":"11402:112:15","statements":[{"assignments":[4143],"declarations":[{"constant":false,"id":4143,"mutability":"mutable","name":"diff","nameLocation":"11425:4:15","nodeType":"VariableDeclaration","scope":4157,"src":"11417:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"11417:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4147,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11432:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4145,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"11438:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11417:26:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4148,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"11465:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4149,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"11474:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4150,"name":"progress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"11481:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11474:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11473:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4153,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"11493:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11473:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11465:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4119,"id":4156,"nodeType":"Return","src":"11458:44:15"}]}}]},"documentation":{"id":4109,"nodeType":"StructuredDocumentation","src":"10799:238:15","text":" @notice Linear interpolation between two values\n @param start Start value\n @param end End value\n @param progress Progress from 0 to PRECISION (1e18)\n @return interpolated Interpolated value"},"id":4176,"implemented":true,"kind":"function","modifiers":[],"name":"linearInterpolation","nameLocation":"11052:19:15","nodeType":"FunctionDefinition","parameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"start","nameLocation":"11090:5:15","nodeType":"VariableDeclaration","scope":4176,"src":"11082:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"11082:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4113,"mutability":"mutable","name":"end","nameLocation":"11114:3:15","nodeType":"VariableDeclaration","scope":4176,"src":"11106:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"11106:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4115,"mutability":"mutable","name":"progress","nameLocation":"11136:8:15","nodeType":"VariableDeclaration","scope":4176,"src":"11128:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4114,"name":"uint256","nodeType":"ElementaryTypeName","src":"11128:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11071:80:15"},"returnParameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"interpolated","nameLocation":"11183:12:15","nodeType":"VariableDeclaration","scope":4176,"src":"11175:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"11175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11174:22:15"},"scope":4222,"src":"11043:596:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4220,"nodeType":"Block","src":"12071:339:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4189,"name":"alpha","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"12090:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4190,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"12099:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12090:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c706861206f7574206f662072616e6765","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12110:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c464dac1b168f8215a5cbc2aec6d683e29fb35ca41b8a73b32aa0c9fe0fd76c0","typeString":"literal_string \"Alpha out of range\""},"value":"Alpha out of range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c464dac1b168f8215a5cbc2aec6d683e29fb35ca41b8a73b32aa0c9fe0fd76c0","typeString":"literal_string \"Alpha out of range\""}],"id":4188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12082:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4194,"nodeType":"ExpressionStatement","src":"12082:49:15"},{"assignments":[4196],"declarations":[{"constant":false,"id":4196,"mutability":"mutable","name":"newComponent","nameLocation":"12222:12:15","nodeType":"VariableDeclaration","scope":4220,"src":"12214:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"12214:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4203,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"alpha","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"12238:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4198,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"12246:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12238:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12237:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4201,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"12258:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12237:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12214:53:15"},{"assignments":[4205],"declarations":[{"constant":false,"id":4205,"mutability":"mutable","name":"oldComponent","nameLocation":"12286:12:15","nodeType":"VariableDeclaration","scope":4220,"src":"12278:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"12278:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4215,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"12303:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4207,"name":"alpha","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"12315:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12303:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12302:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4210,"name":"currentEMA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"12324:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12302:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12301:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4213,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"12338:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12301:46:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12278:69:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4216,"name":"newComponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"12375:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4217,"name":"oldComponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"12390:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12375:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4187,"id":4219,"nodeType":"Return","src":"12368:34:15"}]},"documentation":{"id":4177,"nodeType":"StructuredDocumentation","src":"11651:254:15","text":" @notice Calculate exponential moving average\n @param currentEMA Current EMA value\n @param newValue New value to incorporate\n @param alpha Smoothing factor (0 to PRECISION)\n @return newEMA Updated EMA value"},"id":4221,"implemented":true,"kind":"function","modifiers":[],"name":"exponentialMovingAverage","nameLocation":"11920:24:15","nodeType":"FunctionDefinition","parameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"currentEMA","nameLocation":"11963:10:15","nodeType":"VariableDeclaration","scope":4221,"src":"11955:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"11955:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4181,"mutability":"mutable","name":"newValue","nameLocation":"11992:8:15","nodeType":"VariableDeclaration","scope":4221,"src":"11984:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4180,"name":"uint256","nodeType":"ElementaryTypeName","src":"11984:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4183,"mutability":"mutable","name":"alpha","nameLocation":"12019:5:15","nodeType":"VariableDeclaration","scope":4221,"src":"12011:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4182,"name":"uint256","nodeType":"ElementaryTypeName","src":"12011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11944:87:15"},"returnParameters":{"id":4187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"newEMA","nameLocation":"12063:6:15","nodeType":"VariableDeclaration","scope":4221,"src":"12055:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"12055:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12054:16:15"},"scope":4222,"src":"11911:499:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4223,"src":"241:12172:15","usedErrors":[],"usedEvents":[]}],"src":"33:12380:15"},"id":15},"contracts/test/TestERC20.sol":{"ast":{"absolutePath":"contracts/test/TestERC20.sol","exportedSymbols":{"Context":[1487],"ERC20":[889],"IERC20":[967],"IERC20Errors":[279],"IERC20Metadata":[993],"TestERC20":[4276]},"id":4277,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4224,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4277,"sourceUnit":890,"src":"61:55:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4227,"name":"ERC20","nameLocations":["234:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"234:5:16"},"id":4228,"nodeType":"InheritanceSpecifier","src":"234:5:16"}],"canonicalName":"TestERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":4226,"nodeType":"StructuredDocumentation","src":"120:90:16","text":" @title TestERC20\n @notice Simple ERC20 token for testing FlowFusion Bridge"},"fullyImplemented":true,"id":4276,"linearizedBaseContracts":[4276,889,279,993,967,1487],"name":"TestERC20","nameLocation":"221:9:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":4247,"nodeType":"Block","src":"378:51:16","statements":[{"expression":{"arguments":[{"expression":{"id":4242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"395:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"399:6:16","memberName":"sender","nodeType":"MemberAccess","src":"395:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4244,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"407:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4241,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"389:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"389:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4246,"nodeType":"ExpressionStatement","src":"389:32:16"}]},"id":4248,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4237,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"364:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4238,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"370:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4239,"kind":"baseConstructorSpecifier","modifierName":{"id":4236,"name":"ERC20","nameLocations":["358:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"358:5:16"},"nodeType":"ModifierInvocation","src":"358:19:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"name","nameLocation":"283:4:16","nodeType":"VariableDeclaration","scope":4248,"src":"269:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4229,"name":"string","nodeType":"ElementaryTypeName","src":"269:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"symbol","nameLocation":"312:6:16","nodeType":"VariableDeclaration","scope":4248,"src":"298:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4231,"name":"string","nodeType":"ElementaryTypeName","src":"298:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"initialSupply","nameLocation":"337:13:16","nodeType":"VariableDeclaration","scope":4248,"src":"329:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"258:99:16"},"returnParameters":{"id":4240,"nodeType":"ParameterList","parameters":[],"src":"378:0:16"},"scope":4276,"src":"247:182:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4261,"nodeType":"Block","src":"546:36:16","statements":[{"expression":{"arguments":[{"id":4257,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"563:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4258,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"567:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4256,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"557:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"557:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4260,"nodeType":"ExpressionStatement","src":"557:17:16"}]},"documentation":{"id":4249,"nodeType":"StructuredDocumentation","src":"437:52:16","text":" @notice Mint tokens for testing"},"functionSelector":"40c10f19","id":4262,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"504:4:16","nodeType":"FunctionDefinition","parameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"to","nameLocation":"517:2:16","nodeType":"VariableDeclaration","scope":4262,"src":"509:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4250,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"amount","nameLocation":"529:6:16","nodeType":"VariableDeclaration","scope":4262,"src":"521:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"521:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"508:28:16"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[],"src":"546:0:16"},"scope":4276,"src":"495:87:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4274,"nodeType":"Block","src":"687:44:16","statements":[{"expression":{"arguments":[{"expression":{"id":4269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"704:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"708:6:16","memberName":"sender","nodeType":"MemberAccess","src":"704:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4271,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"716:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4268,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"698:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"698:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4273,"nodeType":"ExpressionStatement","src":"698:25:16"}]},"documentation":{"id":4263,"nodeType":"StructuredDocumentation","src":"590:52:16","text":" @notice Burn tokens for testing"},"functionSelector":"42966c68","id":4275,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"657:4:16","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4265,"mutability":"mutable","name":"amount","nameLocation":"670:6:16","nodeType":"VariableDeclaration","scope":4275,"src":"662:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"661:16:16"},"returnParameters":{"id":4267,"nodeType":"ParameterList","parameters":[],"src":"687:0:16"},"scope":4276,"src":"648:83:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4277,"src":"212:522:16","usedErrors":[249,254,259,268,273,278],"usedEvents":[901,910]}],"src":"33:701:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"approveAndCall(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"approveAndCall(address,uint256,bytes)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"data":"Additional data with no specified format, sent in call to `spender`.","spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferAndCall(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferAndCall(address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFromAndCall(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFromAndCall(address,address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}}},"title":"IERC1363","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"constructor":{"details":"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":397,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":403,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":405,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":407,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":409,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC-20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"devdoc":{"details":"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","errors":{"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)":[{"details":"Indicates a failed `decreaseAllowance` request."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC-20 token failed."}]},"kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f03f534fe3cba82f72533f40077ea92db4340c41838e1628bd05cb9c88df644c64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE EXTCODEHASH MSTORE8 0x4F 0xE3 0xCB 0xA8 0x2F PUSH19 0x533F40077EA92DB4340C41838E1628BD05CB9C DUP9 0xDF PUSH5 0x4C64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"698:9376:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f03f534fe3cba82f72533f40077ea92db4340c41838e1628bd05cb9c88df644c64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE EXTCODEHASH MSTORE8 0x4F 0xE3 0xCB 0xA8 0x2F PUSH19 0x533F40077EA92DB4340C41838E1628BD05CB9C DUP9 0xDF PUSH5 0x4C64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"698:9376:8:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite","transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)":"infinite","trySafeTransfer(contract IERC20,address,uint256)":"infinite","trySafeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","errors":{"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}]},"events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1496,"contract":"@openzeppelin/contracts/utils/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1606,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/FlowFusionBridge.sol":{"FlowFusionBridge":{"abi":[{"inputs":[{"internalType":"address","name":"_feeCollector","type":"address"},{"internalType":"uint256","name":"_protocolFeeRate","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"},{"indexed":false,"internalType":"address","name":"claimer","type":"address"},{"indexed":false,"internalType":"uint256","name":"claimedAt","type":"uint256"}],"name":"HTLCClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"},{"indexed":false,"internalType":"address","name":"claimer","type":"address"}],"name":"HTLCClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"htlcHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timeoutHeight","type":"uint256"}],"name":"HTLCCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"refundAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"cancelledAt","type":"uint256"}],"name":"OrderCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"refundAmount","type":"uint256"}],"name":"OrderCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"totalExecuted","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"averagePrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"completionTime","type":"uint256"}],"name":"OrderCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"totalExecuted","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"averagePrice","type":"uint256"}],"name":"OrderCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"targetChain","type":"string"},{"indexed":false,"internalType":"address","name":"sourceToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"sourceAmount","type":"uint256"},{"indexed":false,"internalType":"string","name":"targetToken","type":"string"},{"components":[{"internalType":"uint256","name":"windowMinutes","type":"uint256"},{"internalType":"uint256","name":"executionIntervals","type":"uint256"},{"internalType":"uint256","name":"maxSlippage","type":"uint256"},{"internalType":"uint256","name":"minFillSize","type":"uint256"},{"internalType":"bool","name":"enableMEVProtection","type":"bool"}],"indexed":false,"internalType":"struct IFlowFusionBridge.TWAPConfig","name":"twapConfig","type":"tuple"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"feeCollector","type":"address"}],"name":"ProtocolFeeCollected","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"intervalNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"executedAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"averagePrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"address","name":"executor","type":"address"}],"name":"TWAPExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"intervalNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"executedAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"averagePrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TWAPExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"BASIS_POINTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_EXECUTION_INTERVALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SLIPPAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_WINDOW_MINUTES","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_EXECUTION_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_WINDOW_MINUTES","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"executor","type":"address"}],"name":"addAuthorizedExecutor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"chainId","type":"string"}],"name":"addSupportedChain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedExecutors","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"claimHTLC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sourceToken","type":"address"},{"internalType":"uint256","name":"sourceAmount","type":"uint256"},{"internalType":"string","name":"targetChain","type":"string"},{"internalType":"string","name":"targetToken","type":"string"},{"internalType":"string","name":"targetRecipient","type":"string"},{"components":[{"internalType":"uint256","name":"windowMinutes","type":"uint256"},{"internalType":"uint256","name":"executionIntervals","type":"uint256"},{"internalType":"uint256","name":"maxSlippage","type":"uint256"},{"internalType":"uint256","name":"minFillSize","type":"uint256"},{"internalType":"bool","name":"enableMEVProtection","type":"bool"}],"internalType":"struct IFlowFusionBridge.TWAPConfig","name":"twapConfig","type":"tuple"},{"internalType":"bytes32","name":"htlcHash","type":"bytes32"},{"internalType":"uint256","name":"timeoutHeight","type":"uint256"}],"name":"createTWAPOrder","outputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"uint256","name":"intervalAmount","type":"uint256"},{"internalType":"uint256","name":"executionPrice","type":"uint256"},{"internalType":"bytes","name":"priceProof","type":"bytes"}],"name":"executeTWAPInterval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"executionHistory","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"gasUsed","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeCollector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getCurrentTWAPPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getExecutionHistory","outputs":[{"components":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"gasUsed","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"internalType":"struct IFlowFusionBridge.ExecutionRecord[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getNextExecutionTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getOrder","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"sourceToken","type":"address"},{"internalType":"uint256","name":"sourceAmount","type":"uint256"},{"internalType":"string","name":"targetChain","type":"string"},{"internalType":"string","name":"targetToken","type":"string"},{"internalType":"string","name":"targetRecipient","type":"string"},{"components":[{"internalType":"uint256","name":"windowMinutes","type":"uint256"},{"internalType":"uint256","name":"executionIntervals","type":"uint256"},{"internalType":"uint256","name":"maxSlippage","type":"uint256"},{"internalType":"uint256","name":"minFillSize","type":"uint256"},{"internalType":"bool","name":"enableMEVProtection","type":"bool"}],"internalType":"struct IFlowFusionBridge.TWAPConfig","name":"twapConfig","type":"tuple"},{"internalType":"bytes32","name":"htlcHash","type":"bytes32"},{"internalType":"uint256","name":"timeoutHeight","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"executedAmount","type":"uint256"},{"internalType":"uint256","name":"lastExecution","type":"uint256"},{"internalType":"enum IFlowFusionBridge.OrderStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"averagePrice","type":"uint256"}],"internalType":"struct IFlowFusionBridge.TWAPOrder","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IFlowFusionBridge.OrderStatus","name":"status","type":"uint8"}],"name":"getOrdersByStatus","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserOrders","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxOrdersPerUser","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"orderNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"orders","outputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"sourceToken","type":"address"},{"internalType":"uint256","name":"sourceAmount","type":"uint256"},{"internalType":"string","name":"targetChain","type":"string"},{"internalType":"string","name":"targetToken","type":"string"},{"internalType":"string","name":"targetRecipient","type":"string"},{"components":[{"internalType":"uint256","name":"windowMinutes","type":"uint256"},{"internalType":"uint256","name":"executionIntervals","type":"uint256"},{"internalType":"uint256","name":"maxSlippage","type":"uint256"},{"internalType":"uint256","name":"minFillSize","type":"uint256"},{"internalType":"bool","name":"enableMEVProtection","type":"bool"}],"internalType":"struct IFlowFusionBridge.TWAPConfig","name":"twapConfig","type":"tuple"},{"internalType":"bytes32","name":"htlcHash","type":"bytes32"},{"internalType":"uint256","name":"timeoutHeight","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"executedAmount","type":"uint256"},{"internalType":"uint256","name":"lastExecution","type":"uint256"},{"internalType":"enum IFlowFusionBridge.OrderStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"averagePrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFeeRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"executor","type":"address"}],"name":"removeAuthorizedExecutor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"chainId","type":"string"}],"name":"removeSupportedChain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"supportedChains","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalOrders","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalVolume","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newFeeCollector","type":"address"}],"name":"updateFeeCollector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMaxOrders","type":"uint256"}],"name":"updateMaxOrdersPerUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFeeRate","type":"uint256"}],"name":"updateProtocolFeeRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userOrderCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userOrders","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"author":"FlowFusion Team","details":"Handles order creation, TWAP execution, and cross-chain coordination","errors":{"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC-20 token failed."}]},"events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"cancelOrder(bytes32)":{"params":{"orderId":"Order to cancel"}},"claimHTLC(bytes32,bytes32)":{"params":{"orderId":"Order to claim","secret":"Secret to unlock HTLC"}},"createTWAPOrder(address,uint256,string,string,string,(uint256,uint256,uint256,uint256,bool),bytes32,uint256)":{"params":{"htlcHash":"Hash for HTLC mechanism","sourceAmount":"Amount of source tokens","sourceToken":"Address of source token (address(0) for ETH)","targetChain":"Target blockchain identifier","targetRecipient":"Recipient address on target chain","targetToken":"Target token identifier","timeoutHeight":"Block height timeout","twapConfig":"TWAP execution configuration"},"returns":{"orderId":"Unique order identifier"}},"executeTWAPInterval(bytes32,uint256,uint256,bytes)":{"params":{"executionPrice":"Price for this execution","intervalAmount":"Amount to execute in this interval","orderId":"Order to execute","priceProof":"Proof of price validity (for oracle verification)"}},"owner()":{"details":"Returns the address of the current owner."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"FlowFusion Bridge","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346200028757620033c090601f38839003908101601f19168201906001600160401b038211838310176200028c5780839160409586948552833981010312620002875780516001600160a01b039182821691829003620002875760200151906001928360005533156200026f578354610100600160a81b0319811633600881811b610100600160a81b0316929092178755875193909290911c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36064600d55811562000223575060648211620001df5760018060a01b0319600b541617600b55600c5581519065636f736d6f7360d01b825260286026600593846006820152209260ff19938385825416179055602785516639ba32b63630b960c91b815282600782015220838582541617905560278551663134ba31b7b4b760c91b815282600782015220838582541617905581855167657468657265756d60c01b815282600882015220838582541617905560278551663837b63cb3b7b760c91b815282600782015220838582541617905581855167617262697472756d60c01b8152826008820152208385825416179055845190676f7074696d69736d60c01b8252600882015220918254161790555161311d9081620002a38239f35b835162461bcd60e51b815260206004820152601d60248201527f466c6f77467573696f6e3a20466565207261746520746f6f20686967680000006044820152606490fd5b62461bcd60e51b815260206004820152602160248201527f466c6f77467573696f6e3a20496e76616c69642066656520636f6c6c6563746f6044820152603960f91b6064820152608490fd5b8451631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60808060405260043610156100a8575b50361561005b5760405162461bcd60e51b815260206004820152601e60248201527f466c6f77467573696f6e3a2046756e6374696f6e206e6f7420666f756e6400006044820152606490fd5b341561006357005b60405162461bcd60e51b815260206004820152601760248201527f466c6f77467573696f6e3a204e6f204554482073656e740000000000000000006044820152606490fd5b60003560e01c90816316f8de8914612808575080631833f0cf146127065780631d834409146126e85780631def6ffe146126cb5780633f4ba83a146126615780634656002314612616578063518479b31461187a5780635778472a1461169f57806358f85880146116815780635c975abb1461165e5780635d830dd1146116405780635f81a57c1461162257806360c7bae2146115e05780636340d55c1461157257806363c69f08146114eb578063679d86a7146114ac5780636c30aaa21461145e578063715018a6146113fd5780637489ec231461121e5780638456cb59146111c5578063856652e91461116c5780638ce2ec791461105a5780638da5cb5b1461102d57806395ccea6714610fb05780639755dca014610e195780639c3f1e9014610cbb5780639cac0fb214610c4f578063a3f1c42014610648578063a6329c7f146105d9578063a89a6f69146105bb578063b2a7f4941461052b578063c415b95c14610502578063d2c35ce81461046b578063d62e5d791461044f578063dc33597d14610429578063e1f1c4a71461040c578063e5eb8a89146103a3578063e6a73b6314610387578063ec4eb4f91461034d578063f2fde38b146102b4578063f9759518146102af578063fca98ac6146102af5763ffa1ad741461028e573861000f565b346102aa5760003660031901126102aa57602060405160018152f35b600080fd5b612afd565b346102aa5760203660031901126102aa576102cd6128ec565b6102d5612d8f565b6001600160a01b038181169182156103345760018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346102aa5760203660031901126102aa576001600160a01b0361036e6128ec565b1660005260076020526020604060002054604051908152f35b346102aa5760003660031901126102aa57602060405160058152f35b346102aa5760203660031901126102aa576004356001600160401b0381116102aa5760206103d86103f3923690600401612896565b6103e0612d8f565b8160405193828580945193849201612902565b600590820190815203019020805460ff19166001179055005b346102aa5760003660031901126102aa5760206040516127108152f35b346102aa5760203660031901126102aa576020610447600435612d55565b604051908152f35b346102aa5760003660031901126102aa57602060405160148152f35b346102aa5760203660031901126102aa576104846128ec565b61048c612d8f565b6001600160a01b031680156104b3576001600160601b0360a01b600b541617600b55600080f35b60405162461bcd60e51b815260206004820152602160248201527f466c6f77467573696f6e3a20496e76616c69642066656520636f6c6c6563746f6044820152603960f91b6064820152608490fd5b346102aa5760003660031901126102aa57600b546040516001600160a01b039091168152602090f35b346102aa5760203660031901126102aa576105446128ec565b61054c612d8f565b6001600160a01b03168015610576576000908152600660205260409020805460ff19166001179055005b60405162461bcd60e51b815260206004820152601c60248201527f466c6f77467573696f6e3a20496e76616c6964206578656375746f72000000006044820152606490fd5b346102aa5760203660031901126102aa576020610447600435612e71565b346102aa5760403660031901126102aa576024356004356000526004602052604060002080548210156102aa5760a09161061291612ae1565b50805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b346102aa5760803660031901126102aa576001600160401b0360246064604481358481116102aa57366023820112156102aa5780600401359485116102aa57838536920101116102aa5733600052600660205260ff6040600020541615610c01576004356000908152600260205260409020600101546106d2906001600160a01b03161515612c6b565b600435600052600260205260ff601160406000200154166005811015610bec57610bab576106fe612dbe565b6004356000526002602052604060002093833515610b5d57600385015492600f8601549161072c8386612b71565b863511610b1c57600d870154431015610adb5761075361074e60078901612aa0565b612e4e565b6010880154908115918215610ac7575b505015610a7457833515159081610a6a575b5015610a2a57610786600435612e71565b938415159283610a0b575b600a880154873510918215926109f7575b5050156109a95750600435600052600460205260406000208054935a92156109a1576107d09084359061303c565b604051926107dd84612823565b428452863560208501528435604085015260608401526080830152600160401b84101561098c578361081491600182018155612ae1565b9190916109775760808160049251845560208101516001850155604081015160028501556060810151600385015501519101556108568335600f860154612b31565b600f850155426010850155601284019283541560001461092557813584555b6040519283523560208301523560408201524260608201523360808201527fe4096eaa9aa9b8f8e8ca77df4dff5052b5d6282c11b6653afbca6a5a7574c8da60a060043592a2600f8201549160038101548310156108d5575b6001600055005b601101600160ff198254161790555460405191825260208201524260408201527fde99ce77ac3ae0048f3c53988bc6ee856041365b692310c98f709f2e2a6cfbea606060043592a28080806108ce565b61097061093186612b8d565b61096a61096061094e6101606101c0850151940193845190612b3e565b61095a86358835612b3e565b90612b31565b9184359051612b31565b90612b51565b8455610875565b84634e487b7160e01b60005260006004526000fd5b84634e487b7160e01b60005260416004526000fd5b5060006107d0565b8462697a6560e81b6084927f466c6f77467573696f6e3a2042656c6f77206d696e696d756d2066696c6c20738660236040519562461bcd60e51b875260206004880152860152840152820152fd5b610a019250612b71565b85351487806107a2565b610a25610a1986358861303c565b60098a01541015612d09565b610791565b60405162461bcd60e51b8152602060048201526019818701527f466c6f77467573696f6e3a20496e76616c69642070726963650000000000000081850152fd5b9050151587610775565b60405162461bcd60e51b8152602060048201526028818801527f466c6f77467573696f6e3a20546f6f206561726c7920666f72206e657874206581860152673c32b1baba34b7b760c11b81840152608490fd5b610ad19250612b31565b4210158880610763565b5060405162461bcd60e51b8152602060048201526019818701527f466c6f77467573696f6e3a204f7264657220657870697265640000000000000081850152fd5b5060405162461bcd60e51b815260206004820152601d818701527f466c6f77467573696f6e3a20457863656564732072656d61696e696e6700000081850152fd5b60405162461bcd60e51b8152602060048201526023818601527f466c6f77467573696f6e3a20496e76616c696420696e74657276616c20616d6f81840152621d5b9d60ea1b81850152608490fd5b7f466c6f77467573696f6e3a204f72646572206e6f7420616374697665000000008391601c6040519362461bcd60e51b855260206004860152840152820152fd5b83634e487b7160e01b60005260216004526000fd5b608492917f466c6f77467573696f6e3a204e6f7420617574686f72697a6564206578656375623a37b960e91b9260236040519562461bcd60e51b875260206004880152860152840152820152fd5b346102aa5760203660031901126102aa57600435610c6b612d8f565b8015610c7657600d55005b60405162461bcd60e51b815260206004820152601e60248201527f466c6f77467573696f6e3a20496e76616c6964206d6178206f726465727300006044820152606490fd5b346102aa5760203660031901126102aa5760043560005260026020526040600020805490600160a01b6001900380600183015416906002830154169260038301549260048101610d0a906129fb565b92610d17600583016129fb565b93610d24600684016129fb565b94610d3160078501612aa0565b95600c850154600d86015491600e87015493600f8801549560108901549760118a015460ff1699601201549a6040519e8f9e8f916102609485948452602084015260408301526060820152608001528c01610d8b91612925565b8b810360a08d0152610d9c91612925565b8a810360c08c0152610dad91612925565b885160e08b015260208901516101008b015260408901516101208b015260608901516101408b015260809098015115156101608a01526101808901526101a08801526101c08701526101e08601526102008501526102208401610e0f9161294a565b6102408301520390f35b346102aa5760403660031901126102aa576004356024358160005260206002815260018060a01b03610e5681600160406000200154161515612c6b565b610e5e612dbe565b8360005260028252604060002060118101805460ff81166005811015610f9a57600103610f555760405185810190878252868152610e9b8161285a565b519020600c84015403610f1057606094927f600ffd9313a629c5acdcb599e269730b878ff6653f1fc57f573686e2df43fa13969492600460019360ff1916179055015416600052600781526040600020610ef58154612cb6565b90556040519182523390820152426040820152a26001600055005b60405162461bcd60e51b815260048101869052601a60248201527f466c6f77467573696f6e3a20496e76616c6964207365637265740000000000006044820152606490fd5b60405162461bcd60e51b815260048101869052601f60248201527f466c6f77467573696f6e3a204f72646572206e6f7420636f6d706c65746564006044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b346102aa5760403660031901126102aa57610fc96128ec565b60243590610fd5612d8f565b6001600160a01b039081168061101957506000808093819360015460081c16828215611010575bf11561100457005b6040513d6000823e3d90fd5b506108fc610ffc565b61102b929160015460081c1690612dff565b005b346102aa5760003660031901126102aa5760015460405160089190911c6001600160a01b03168152602090f35b346102aa576020806003193601126102aa5760056004358181101590816102aa57611086600954612cc3565b93600093600092600854935b8481106110e05787876110a481612cc3565b9160005b8281106110c157604051806110bd8682612957565b0390f35b806110ce60019284612cf5565b516110d98287612cf5565b52016110a8565b604051848101908282528581526110f68161285a565b5190206000818152600286526040902060018101546001600160a01b031615159088908261114e575b505061112f575b50600101611092565b87611147916111416001949a8c612cf5565b52612b7e565b9690611126565b6011015460ff169150610f9a5784811015610f9a578314878b61111f565b346102aa5760403660031901126102aa576111856128ec565b6001600160a01b03166000908152600360205260409020805460243591908210156102aa576020916111b691612993565b90549060031b1c604051908152f35b346102aa5760003660031901126102aa576111de612d8f565b6111e6612de1565b600160ff19815416176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346102aa576020806003193601126102aa5760043560008181526002835260409020600101546001600160a01b03929061125b9084161515612c6b565b8160005260028152826001604060002001541633036113b95761127c612dbe565b81600052600281526040600020601181019081549460ff86166005811015610f9a5761136a576112b56003830154600f84015490612b71565b9586159283156112c6576001600055005b87946002809360ff19161790550154168015600014611358575060009061134f575b600080809381933390f115611004575b3360005260078152604060002061130f8154612cb6565b905560405192835242908301527fe5511acce6fbdf775b76e2921d9f62d7f15be4fd9d14a6deb11cca46a5883f6e60403393a380808080808080806108ce565b506108fc6112e8565b6113659291503390612dff565b6112f8565b60405162461bcd60e51b815260048101859052602160248201527f466c6f77467573696f6e3a204f72646572206e6f742063616e63656c6c61626c6044820152606560f81b6064820152608490fd5b6064906040519062461bcd60e51b82526004820152601b60248201527f466c6f77467573696f6e3a204e6f74206f72646572206f776e657200000000006044820152fd5b346102aa5760003660031901126102aa57611416612d8f565b60018054610100600160a81b0319811690915560009060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102aa5760203660031901126102aa576004356001600160401b0381116102aa5760ff61149660206103e081943690600401612896565b8101600581520301902054166040519015158152f35b346102aa5760203660031901126102aa576001600160a01b036114cd6128ec565b166000526006602052602060ff604060002054166040519015158152f35b346102aa576020806003193601126102aa576001600160a01b0361150d6128ec565b1660005260036020526040600020906040519081602084549182815201936000526020600020916000905b82821061155b576110bd8561154f81890382612875565b60405191829182612957565b835486529485019460019384019390910190611538565b346102aa5760203660031901126102aa5760043561158e612d8f565b6064811161159b57600c55005b60405162461bcd60e51b815260206004820152601d60248201527f466c6f77467573696f6e3a20466565207261746520746f6f20686967680000006044820152606490fd5b346102aa5760203660031901126102aa576115f96128ec565b611601612d8f565b6001600160a01b03166000908152600660205260409020805460ff19169055005b346102aa5760003660031901126102aa576020600a54604051908152f35b346102aa5760003660031901126102aa576020600d54604051908152f35b346102aa5760003660031901126102aa57602060ff600154166040519015158152f35b346102aa5760003660031901126102aa576020600c54604051908152f35b346102aa576020806003193601126102aa57604051906116be8261283e565b60008252600081830152600060408301526060916000838201528260808201528260a08201528260c08201526040516116f681612823565b60008152600083820152600060408201526000848201526000608082015260e082015261010090600082820152610120906000828201526101406000818301526118706101606000818501526101806000818601526101a09160008387015260006101c080970152600435600052600289526117756040600020612b8d565b946040519a8a8c9b8c528751818d015287015160018060a01b0380911660408d0152604088015116818c015286015160808b01526080860151976117fc8b6117e66117ce6102609c8d60a0850152610280840190612925565b60a08b0151601f199360c08582850301910152612925565b908d60e060c08c01519282850301910152612925565b996118398c8260e08b0151910190608080918051845260208101516020850152604081015160408501526060810151606085015201511515910152565b870151858c0152860151878b01528501516101e08a015284015161020089015283015161022088015282015161024087019061294a565b0151908301520390f35b6101803660031901126102aa5761188f6128ec565b6044356001600160401b0381116102aa576118ae903690600401612896565b906064356001600160401b0381116102aa576118ce903690600401612896565b906084356001600160401b0381116102aa576118ee903690600401612896565b9060a03660a31901126102aa576040519061190882612823565b60a435825260c435602083015260e43560408301526101043560608301526101243580151581036102aa576080830152611940612dbe565b611948612de1565b6103e8602435106125d15760ff604051602081885161196a8183858d01612902565b810160058152030190205416156125805783511561253c578251156124f75761014435156124b25760644301431161249c576064430161016435111561245757336000526007602052604060002054600d5411156124125760058251106123cd576105a0825111612388576001602083015111156123375760146020830151116122f257611a006103e860408401511115612d09565b6060820151156122a357612710611a1b600c54602435612b3e565b0493611a2985602435612b71565b93600854611a3681612b7e565b600855611a9860a860405180933360601b60208301526001600160601b03198860601b16603483015260243560488301528b611a7c815180926020606887019101612902565b8201904260688301526088820152036088810184520182612875565b805160209091012095866001600160a01b0385166121f0575060243534036121ab578061213d575b505b60405190611acf8261283e565b86825233602083015260018060a01b03841660408301528560608301528760808301528260a083015260c08201528360e08201526101443561010082015261016435610120820152426101408201526000610160820152600061018082015260006101a082015260006101c0820152856000526002602052604060002090805182556001820160018060a01b03602083015116906001600160601b0360a01b9182825416179055600283019060018060a01b03604084015116908254161790556060810151600383015560808101518051906001600160401b038211611eb7578190611bbe60048601546129c1565b601f81116120ea575b50602090601f83116001146120785760009261206d575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b038211611eb7578190611c1b60058601546129c1565b601f811161201a575b50602090601f8311600114611fa857600092611f9d575b50508160011b916000199060031b1c19161760058301555b60c08101518051906001600160401b038211611eb7578190611c7860068601546129c1565b601f8111611f4a575b50602090601f8311600114611ed857600092611ecd575b50508160011b916000199060031b1c19161760068301555b60e08101518051600784015560208101516008840155604081015160098401556060810151600a8401556080600b8401910151151560ff80198354169116179055610100810151600c830155610120810151600d830155610140810151600e830155610160810151600f83015561018081015160108301556101a08101516005811015610f9a576012916101c09160ff801960118701541691161760118501550151910155336000526003602052604060002095865496600160401b881015611eb757611e3787947fdf9b2ee7e19a4bed367d9c7cbae54540a83b4e8a242569d2bab04741cbb0f44294611daf8b611e6c95600160209e018155612993565b81549060031b9089821b91600019901b19161790553360005260078b526040600020611ddb8154612b7e565b9055611de8600954612b7e565b600955611df9602435600a54612b31565b600a55611e13604051956101208752610120870190612925565b6001600160a01b03909216858c015260243560408601528482036060860152612925565b946080830190608080918051845260208101516020850152604081015160408501526060810151606085015201511515910152565b8033940390a36040519081526101643583820152817f1ba3fbe5fd9d0a7139d0258bb7b035b16adb3a67cd7b5db6bb0b545c7148314660406101443593a36001600055604051908152f35b634e487b7160e01b600052604160045260246000fd5b015190508a80611c98565b9250600685016000526020600020906000935b601f1984168510611f2f576001945083601f19811610611f16575b505050811b016006830155611cb0565b015160001960f88460031b161c191690558a8080611f06565b81810151835560209485019460019093019290910190611eeb565b909150600685016000526020600020601f840160051c810160208510611f96575b90849392915b601f830160051c82018110611f87575050611c81565b60008155859450600101611f71565b5080611f6b565b015190508a80611c3b565b9250600585016000526020600020906000935b601f1984168510611fff576001945083601f19811610611fe6575b505050811b016005830155611c53565b015160001960f88460031b161c191690558a8080611fd6565b81810151835560209485019460019093019290910190611fbb565b909150600585016000526020600020601f840160051c810160208510612066575b90849392915b601f830160051c82018110612057575050611c24565b60008155859450600101612041565b508061203b565b015190508a80611bde565b9250600485016000526020600020906000935b601f19841685106120cf576001945083601f198116106120b6575b505050811b016004830155611bf6565b015160001960f88460031b161c191690558a80806120a6565b8181015183556020948501946001909301929091019061208b565b909150600485016000526020600020601f840160051c810160208510612136575b90849392915b601f830160051c82018110612127575050611bc7565b60008155859450600101612111565b508061210b565b60008080808460018060a01b03600b54168282156121a2575bf11561100457600b54604080519283526001600160a01b03909116602083015287917fcfba6f0d638f02d61bca3cad4c8b0ee671b83be0d14085bda2d196be921be9299190a287611ac0565b506108fc612156565b60405162461bcd60e51b815260206004820152601f60248201527f466c6f77467573696f6e3a2045544820616d6f756e74206d69736d61746368006044820152606490fd5b906122346040516323b872dd60e01b602082015233602482015230604482015260243560648201526064815261222581612823565b6001600160a01b03871661308b565b80612241575b5050611ac2565b600b547fcfba6f0d638f02d61bca3cad4c8b0ee671b83be0d14085bda2d196be921be92991906122809082906001600160a01b03908116908916612dff565b600b54604080519283526001600160a01b03909116602083015290a2858861223a565b60405162461bcd60e51b815260206004820152602160248201527f466c6f77467573696f6e3a20496e76616c6964206d696e2066696c6c2073697a6044820152606560f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601e60248201527f466c6f77467573696f6e3a20546f6f206d616e7920696e74657276616c7300006044820152606490fd5b60405162461bcd60e51b815260206004820152602360248201527f466c6f77467573696f6e3a204e656564206d756c7469706c6520696e74657276604482015262616c7360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f466c6f77467573696f6e3a2057696e646f7720746f6f206c61726765000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f466c6f77467573696f6e3a2057696e646f7720746f6f20736d616c6c000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f466c6f77467573696f6e3a20546f6f206d616e79206f726465727300000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f466c6f77467573696f6e3a2054696d656f757420746f6f20736f6f6e000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601d60248201527f466c6f77467573696f6e3a20496e76616c69642048544c4320686173680000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f466c6f77467573696f6e3a20496e76616c696420726563697069656e740000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f466c6f77467573696f6e3a20496e76616c69642074617267657420746f6b656e6044820152fd5b60405162461bcd60e51b8152602060048201526024808201527f466c6f77467573696f6e3a20556e737570706f727465642074617267657420636044820152633430b4b760e11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f466c6f77467573696f6e3a20416d6f756e7420746f6f20736d616c6c000000006044820152606490fd5b346102aa5760203660031901126102aa576004356001600160401b0381116102aa5760206103d861264b923690600401612896565b600590820190815203019020805460ff19169055005b346102aa5760003660031901126102aa5761267a612d8f565b60015460ff8116156126b95760ff19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b346102aa5760003660031901126102aa5760206040516105a08152f35b346102aa5760003660031901126102aa576020600954604051908152f35b346102aa576020806003193601126102aa5760043560005260048152604060002090815461273381612b1a565b906127416040519283612875565b8082528282018094600052836000206000915b8383106127be5760408051878152865181890181905289928201908960005b8281106127805784840385f35b85518051855280830151858401526040808201519086015260608082015190860152608090810151908501529481019460a090930192600101612773565b6005866001926040516127d081612823565b855481528486015483820152600286015460408201526003860154606082015260048601546080820152815201920192019190612754565b346102aa5760003660031901126102aa576020906008548152f35b60a081019081106001600160401b03821117611eb757604052565b6101e081019081106001600160401b03821117611eb757604052565b604081019081106001600160401b03821117611eb757604052565b90601f801991011681019081106001600160401b03821117611eb757604052565b81601f820112156102aa578035906001600160401b038211611eb757604051926128ca601f8401601f191660200185612875565b828452602083830101116102aa57816000926020809301838601378301015290565b600435906001600160a01b03821682036102aa57565b60005b8381106129155750506000910152565b8181015183820152602001612905565b9060209161293e81518092818552858086019101612902565b601f01601f1916010190565b906005821015610f9a5752565b602090602060408183019282815285518094520193019160005b82811061297f575050505090565b835185529381019392810192600101612971565b80548210156129ab5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c921680156129f1575b60208310146129db57565b634e487b7160e01b600052602260045260246000fd5b91607f16916129d0565b90604051918260008254612a0e816129c1565b90818452602094600191600181169081600014612a7e5750600114612a3f575b505050612a3d92500383612875565b565b600090815285812095935091905b818310612a66575050612a3d9350820101388080612a2e565b85548884018501529485019487945091830191612a4d565b92505050612a3d94925060ff191682840152151560051b820101388080612a2e565b90604051612aad81612823565b608060ff60048395805485526001810154602086015260028101546040860152600381015460608601520154161515910152565b80548210156129ab576000526005602060002091020190600090565b346102aa5760003660031901126102aa5760206040516103e88152f35b6001600160401b038111611eb75760051b60200190565b9190820180921161249c57565b8181029291811591840414171561249c57565b8115612b5b570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161249c57565b600019811461249c5760010190565b90604051612b9a8161283e565b8254815260018301546001600160a01b039081166020830152600284015416604082015260038301546060820152918290612bd7600482016129fb565b6080830152612be8600582016129fb565b60a0830152612bf9600682016129fb565b60c0830152612c0a60078201612aa0565b60e0830152600c810154610100830152600d810154610120830152600e810154610140830152600f810154610160830152601081015461018083015260ff6011820154166005811015610f9a576101c0916012916101a08501520154910152565b15612c7257565b606460405162461bcd60e51b815260206004820152602060248201527f466c6f77467573696f6e3a204f7264657220646f6573206e6f742065786973746044820152fd5b801561249c576000190190565b90612ccd82612b1a565b612cda6040519182612875565b8281528092612ceb601f1991612b1a565b0190602036910137565b80518210156129ab5760209160051b010190565b15612d1057565b60405162461bcd60e51b815260206004820152601d60248201527f466c6f77467573696f6e3a20536c69707061676520746f6f20686967680000006044820152606490fd5b6000526002602052612d6a6040600020612b8d565b6101808101518015612d895761095a60e0612d86930151612e4e565b90565b50504290565b60015460081c6001600160a01b03163303612da657565b60405163118cdaa760e01b8152336004820152602490fd5b600260005414612dcf576002600055565b604051633ee5aeb560e01b8152600490fd5b60ff60015416612ded57565b60405163d93c066560e01b8152600490fd5b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815260808101916001600160401b03831182841017611eb757612a3d9260405261308b565b8051603c810290808204603c149015171561249c576020612d8692015190612b51565b9060009180835260049260209160048352604092838320918254612e9481612b1a565b93612ea187519586612875565b81855285528285208590848087015b848410612ff1575050505050825115612fe8579060029184525260e0612ed7848420612b8d565b015151603c810290808204603c1490151715612fd457612ef79042612b71565b92828094815b8451811015612fb65781612f118287612cf5565b51511015612f22575b600101612efd565b95948615612f9c57612f348786612cf5565b51516000198801888111612f8957612f7b60019361095a8b89612f69612f8197612f61612f73988f612cf5565b515190612b71565b9586925b8d612cf5565b510151612b3e565b97612b31565b969050612f1a565b634e487b7160e01b855260118b52602485fd5b612f81612f73612f7b60019361095a8b8987958692612f6d565b5095965094505082159050612fcf57612d869250612b51565b505090565b634e487b7160e01b83526011600452602483fd5b50919450505050565b6001916005918d8c519061300482612823565b8654825285870154848301528d6002880154908301526003870154606083015286015460808201528152019201920191908590612eb0565b908115613084578181811115613075579061305691612b71565b905b6127109182810292818404149015171561249c57612d8691612b51565b61307e91612b71565b90613058565b5050600090565b906000602091828151910182855af115611004576000513d6130de57506001600160a01b0381163b155b6130bc5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156130b556fea2646970667358221220c802a083c982c925697e15ad1a5e56e5ed038cc69f2dacccabcbf93ac34b1e3c64736f6c63430008180033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x287 JUMPI PUSH3 0x33C0 SWAP1 PUSH1 0x1F CODESIZE DUP4 SWAP1 SUB SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH3 0x28C JUMPI DUP1 DUP4 SWAP2 PUSH1 0x40 SWAP6 DUP7 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x287 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP2 DUP3 SWAP1 SUB PUSH3 0x287 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 PUSH1 0x1 SWAP3 DUP4 PUSH1 0x0 SSTORE CALLER ISZERO PUSH3 0x26F JUMPI DUP4 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR DUP8 SSTORE DUP8 MLOAD SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x64 PUSH1 0xD SSTORE DUP2 ISZERO PUSH3 0x223 JUMPI POP PUSH1 0x64 DUP3 GT PUSH3 0x1DF JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE PUSH1 0xC SSTORE DUP2 MLOAD SWAP1 PUSH6 0x636F736D6F73 PUSH1 0xD0 SHL DUP3 MSTORE PUSH1 0x28 PUSH1 0x26 PUSH1 0x5 SWAP4 DUP5 PUSH1 0x6 DUP3 ADD MSTORE KECCAK256 SWAP3 PUSH1 0xFF NOT SWAP4 DUP4 DUP6 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x27 DUP6 MLOAD PUSH7 0x39BA32B63630B9 PUSH1 0xC9 SHL DUP2 MSTORE DUP3 PUSH1 0x7 DUP3 ADD MSTORE KECCAK256 DUP4 DUP6 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x27 DUP6 MLOAD PUSH7 0x3134BA31B7B4B7 PUSH1 0xC9 SHL DUP2 MSTORE DUP3 PUSH1 0x7 DUP3 ADD MSTORE KECCAK256 DUP4 DUP6 DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 DUP6 MLOAD PUSH8 0x657468657265756D PUSH1 0xC0 SHL DUP2 MSTORE DUP3 PUSH1 0x8 DUP3 ADD MSTORE KECCAK256 DUP4 DUP6 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x27 DUP6 MLOAD PUSH7 0x3837B63CB3B7B7 PUSH1 0xC9 SHL DUP2 MSTORE DUP3 PUSH1 0x7 DUP3 ADD MSTORE KECCAK256 DUP4 DUP6 DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 DUP6 MLOAD PUSH8 0x617262697472756D PUSH1 0xC0 SHL DUP2 MSTORE DUP3 PUSH1 0x8 DUP3 ADD MSTORE KECCAK256 DUP4 DUP6 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH8 0x6F7074696D69736D PUSH1 0xC0 SHL DUP3 MSTORE PUSH1 0x8 DUP3 ADD MSTORE KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH2 0x311D SWAP1 DUP2 PUSH3 0x2A3 DUP3 CODECOPY RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20466565207261746520746F6F2068696768000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C69642066656520636F6C6C6563746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0xA8 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A2046756E6374696F6E206E6F7420666F756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x63 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204E6F204554482073656E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x16F8DE89 EQ PUSH2 0x2808 JUMPI POP DUP1 PUSH4 0x1833F0CF EQ PUSH2 0x2706 JUMPI DUP1 PUSH4 0x1D834409 EQ PUSH2 0x26E8 JUMPI DUP1 PUSH4 0x1DEF6FFE EQ PUSH2 0x26CB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2661 JUMPI DUP1 PUSH4 0x46560023 EQ PUSH2 0x2616 JUMPI DUP1 PUSH4 0x518479B3 EQ PUSH2 0x187A JUMPI DUP1 PUSH4 0x5778472A EQ PUSH2 0x169F JUMPI DUP1 PUSH4 0x58F85880 EQ PUSH2 0x1681 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x165E JUMPI DUP1 PUSH4 0x5D830DD1 EQ PUSH2 0x1640 JUMPI DUP1 PUSH4 0x5F81A57C EQ PUSH2 0x1622 JUMPI DUP1 PUSH4 0x60C7BAE2 EQ PUSH2 0x15E0 JUMPI DUP1 PUSH4 0x6340D55C EQ PUSH2 0x1572 JUMPI DUP1 PUSH4 0x63C69F08 EQ PUSH2 0x14EB JUMPI DUP1 PUSH4 0x679D86A7 EQ PUSH2 0x14AC JUMPI DUP1 PUSH4 0x6C30AAA2 EQ PUSH2 0x145E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13FD JUMPI DUP1 PUSH4 0x7489EC23 EQ PUSH2 0x121E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x11C5 JUMPI DUP1 PUSH4 0x856652E9 EQ PUSH2 0x116C JUMPI DUP1 PUSH4 0x8CE2EC79 EQ PUSH2 0x105A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x102D JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0xFB0 JUMPI DUP1 PUSH4 0x9755DCA0 EQ PUSH2 0xE19 JUMPI DUP1 PUSH4 0x9C3F1E90 EQ PUSH2 0xCBB JUMPI DUP1 PUSH4 0x9CAC0FB2 EQ PUSH2 0xC4F JUMPI DUP1 PUSH4 0xA3F1C420 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xA6329C7F EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xA89A6F69 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xB2A7F494 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xD2C35CE8 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xD62E5D79 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xDC33597D EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xE5EB8A89 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xE6A73B63 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xEC4EB4F9 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xF9759518 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xFCA98AC6 EQ PUSH2 0x2AF JUMPI PUSH4 0xFFA1AD74 EQ PUSH2 0x28E JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AFD JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x2CD PUSH2 0x28EC JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x334 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x36E PUSH2 0x28EC JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH2 0x3D8 PUSH2 0x3F3 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x2D8F JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x5 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH2 0x447 PUSH1 0x4 CALLDATALOAD PUSH2 0x2D55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x484 PUSH2 0x28EC JUMP JUMPDEST PUSH2 0x48C PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C69642066656520636F6C6C6563746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x544 PUSH2 0x28EC JUMP JUMPDEST PUSH2 0x54C PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C6964206578656375746F7200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH2 0x447 PUSH1 0x4 CALLDATALOAD PUSH2 0x2E71 JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0xA0 SWAP2 PUSH2 0x612 SWAP2 PUSH2 0x2AE1 JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 PUSH1 0x64 PUSH1 0x44 DUP2 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x2AA JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x2AA JUMPI DUP4 DUP6 CALLDATASIZE SWAP3 ADD ADD GT PUSH2 0x2AA JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC01 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x6D2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x11 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBEC JUMPI PUSH2 0xBAB JUMPI PUSH2 0x6FE PUSH2 0x2DBE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 DUP4 CALLDATALOAD ISZERO PUSH2 0xB5D JUMPI PUSH1 0x3 DUP6 ADD SLOAD SWAP3 PUSH1 0xF DUP7 ADD SLOAD SWAP2 PUSH2 0x72C DUP4 DUP7 PUSH2 0x2B71 JUMP JUMPDEST DUP7 CALLDATALOAD GT PUSH2 0xB1C JUMPI PUSH1 0xD DUP8 ADD SLOAD NUMBER LT ISZERO PUSH2 0xADB JUMPI PUSH2 0x753 PUSH2 0x74E PUSH1 0x7 DUP10 ADD PUSH2 0x2AA0 JUMP JUMPDEST PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x10 DUP9 ADD SLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0xAC7 JUMPI JUMPDEST POP POP ISZERO PUSH2 0xA74 JUMPI DUP4 CALLDATALOAD ISZERO ISZERO SWAP1 DUP2 PUSH2 0xA6A JUMPI JUMPDEST POP ISZERO PUSH2 0xA2A JUMPI PUSH2 0x786 PUSH1 0x4 CALLDATALOAD PUSH2 0x2E71 JUMP JUMPDEST SWAP4 DUP5 ISZERO ISZERO SWAP3 DUP4 PUSH2 0xA0B JUMPI JUMPDEST PUSH1 0xA DUP9 ADD SLOAD DUP8 CALLDATALOAD LT SWAP2 DUP3 ISZERO SWAP3 PUSH2 0x9F7 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x9A9 JUMPI POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP4 GAS SWAP3 ISZERO PUSH2 0x9A1 JUMPI PUSH2 0x7D0 SWAP1 DUP5 CALLDATALOAD SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x7DD DUP5 PUSH2 0x2823 JUMP JUMPDEST TIMESTAMP DUP5 MSTORE DUP7 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE DUP5 CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP5 LT ISZERO PUSH2 0x98C JUMPI DUP4 PUSH2 0x814 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2AE1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x977 JUMPI PUSH1 0x80 DUP2 PUSH1 0x4 SWAP3 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x856 DUP4 CALLDATALOAD PUSH1 0xF DUP7 ADD SLOAD PUSH2 0x2B31 JUMP JUMPDEST PUSH1 0xF DUP6 ADD SSTORE TIMESTAMP PUSH1 0x10 DUP6 ADD SSTORE PUSH1 0x12 DUP5 ADD SWAP3 DUP4 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x925 JUMPI DUP2 CALLDATALOAD DUP5 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0xE4096EAA9AA9B8F8E8CA77DF4DFF5052B5D6282C11B6653AFBCA6A5A7574C8DA PUSH1 0xA0 PUSH1 0x4 CALLDATALOAD SWAP3 LOG2 PUSH1 0xF DUP3 ADD SLOAD SWAP2 PUSH1 0x3 DUP2 ADD SLOAD DUP4 LT ISZERO PUSH2 0x8D5 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x11 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0xDE99CE77AC3AE0048F3C53988BC6EE856041365B692310C98F709F2E2A6CFBEA PUSH1 0x60 PUSH1 0x4 CALLDATALOAD SWAP3 LOG2 DUP1 DUP1 DUP1 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x970 PUSH2 0x931 DUP7 PUSH2 0x2B8D JUMP JUMPDEST PUSH2 0x96A PUSH2 0x960 PUSH2 0x94E PUSH2 0x160 PUSH2 0x1C0 DUP6 ADD MLOAD SWAP5 ADD SWAP4 DUP5 MLOAD SWAP1 PUSH2 0x2B3E JUMP JUMPDEST PUSH2 0x95A DUP7 CALLDATALOAD DUP9 CALLDATALOAD PUSH2 0x2B3E JUMP JUMPDEST SWAP1 PUSH2 0x2B31 JUMP JUMPDEST SWAP2 DUP5 CALLDATALOAD SWAP1 MLOAD PUSH2 0x2B31 JUMP JUMPDEST SWAP1 PUSH2 0x2B51 JUMP JUMPDEST DUP5 SSTORE PUSH2 0x875 JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x7D0 JUMP JUMPDEST DUP5 PUSH3 0x697A65 PUSH1 0xE8 SHL PUSH1 0x84 SWAP3 PUSH32 0x466C6F77467573696F6E3A2042656C6F77206D696E696D756D2066696C6C2073 DUP7 PUSH1 0x23 PUSH1 0x40 MLOAD SWAP6 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP8 MSTORE PUSH1 0x20 PUSH1 0x4 DUP9 ADD MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xA01 SWAP3 POP PUSH2 0x2B71 JUMP JUMPDEST DUP6 CALLDATALOAD EQ DUP8 DUP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0xA25 PUSH2 0xA19 DUP7 CALLDATALOAD DUP9 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x9 DUP11 ADD SLOAD LT ISZERO PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 DUP2 DUP8 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C696420707269636500000000000000 DUP2 DUP6 ADD MSTORE REVERT JUMPDEST SWAP1 POP ISZERO ISZERO DUP8 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 DUP2 DUP9 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20546F6F206561726C7920666F72206E6578742065 DUP2 DUP7 ADD MSTORE PUSH8 0x3C32B1BABA34B7B7 PUSH1 0xC1 SHL DUP2 DUP5 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xAD1 SWAP3 POP PUSH2 0x2B31 JUMP JUMPDEST TIMESTAMP LT ISZERO DUP9 DUP1 PUSH2 0x763 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 DUP2 DUP8 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204F72646572206578706972656400000000000000 DUP2 DUP6 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D DUP2 DUP8 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20457863656564732072656D61696E696E67000000 DUP2 DUP6 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 DUP2 DUP7 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C696420696E74657276616C20616D6F DUP2 DUP5 ADD MSTORE PUSH3 0x1D5B9D PUSH1 0xEA SHL DUP2 DUP6 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH32 0x466C6F77467573696F6E3A204F72646572206E6F742061637469766500000000 DUP4 SWAP2 PUSH1 0x1C PUSH1 0x40 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE PUSH1 0x20 PUSH1 0x4 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x84 SWAP3 SWAP2 PUSH32 0x466C6F77467573696F6E3A204E6F7420617574686F72697A6564206578656375 PUSH3 0x3A37B9 PUSH1 0xE9 SHL SWAP3 PUSH1 0x23 PUSH1 0x40 MLOAD SWAP6 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP8 MSTORE PUSH1 0x20 PUSH1 0x4 DUP9 ADD MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xC6B PUSH2 0x2D8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC76 JUMPI PUSH1 0xD SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C6964206D6178206F72646572730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB DUP1 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 PUSH1 0x4 DUP2 ADD PUSH2 0xD0A SWAP1 PUSH2 0x29FB JUMP JUMPDEST SWAP3 PUSH2 0xD17 PUSH1 0x5 DUP4 ADD PUSH2 0x29FB JUMP JUMPDEST SWAP4 PUSH2 0xD24 PUSH1 0x6 DUP5 ADD PUSH2 0x29FB JUMP JUMPDEST SWAP5 PUSH2 0xD31 PUSH1 0x7 DUP6 ADD PUSH2 0x2AA0 JUMP JUMPDEST SWAP6 PUSH1 0xC DUP6 ADD SLOAD PUSH1 0xD DUP7 ADD SLOAD SWAP2 PUSH1 0xE DUP8 ADD SLOAD SWAP4 PUSH1 0xF DUP9 ADD SLOAD SWAP6 PUSH1 0x10 DUP10 ADD SLOAD SWAP8 PUSH1 0x11 DUP11 ADD SLOAD PUSH1 0xFF AND SWAP10 PUSH1 0x12 ADD SLOAD SWAP11 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP2 PUSH2 0x260 SWAP5 DUP6 SWAP5 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD MSTORE DUP13 ADD PUSH2 0xD8B SWAP2 PUSH2 0x2925 JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0xA0 DUP14 ADD MSTORE PUSH2 0xD9C SWAP2 PUSH2 0x2925 JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0xC0 DUP13 ADD MSTORE PUSH2 0xDAD SWAP2 PUSH2 0x2925 JUMP JUMPDEST DUP9 MLOAD PUSH1 0xE0 DUP12 ADD MSTORE PUSH1 0x20 DUP10 ADD MLOAD PUSH2 0x100 DUP12 ADD MSTORE PUSH1 0x40 DUP10 ADD MLOAD PUSH2 0x120 DUP12 ADD MSTORE PUSH1 0x60 DUP10 ADD MLOAD PUSH2 0x140 DUP12 ADD MSTORE PUSH1 0x80 SWAP1 SWAP9 ADD MLOAD ISZERO ISZERO PUSH2 0x160 DUP11 ADD MSTORE PUSH2 0x180 DUP10 ADD MSTORE PUSH2 0x1A0 DUP9 ADD MSTORE PUSH2 0x1C0 DUP8 ADD MSTORE PUSH2 0x1E0 DUP7 ADD MSTORE PUSH2 0x200 DUP6 ADD MSTORE PUSH2 0x220 DUP5 ADD PUSH2 0xE0F SWAP2 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x240 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0xE56 DUP2 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO ISZERO PUSH2 0x2C6B JUMP JUMPDEST PUSH2 0xE5E PUSH2 0x2DBE JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x11 DUP2 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xF9A JUMPI PUSH1 0x1 SUB PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD DUP6 DUP2 ADD SWAP1 DUP8 DUP3 MSTORE DUP7 DUP2 MSTORE PUSH2 0xE9B DUP2 PUSH2 0x285A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0xC DUP5 ADD SLOAD SUB PUSH2 0xF10 JUMPI PUSH1 0x60 SWAP5 SWAP3 PUSH32 0x600FFD9313A629C5ACDCB599E269730B878FF6653F1FC57F573686E2DF43FA13 SWAP7 SWAP5 SWAP3 PUSH1 0x4 PUSH1 0x1 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE ADD SLOAD AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xEF5 DUP2 SLOAD PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C696420736563726574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204F72646572206E6F7420636F6D706C6574656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0xFC9 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xFD5 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 PUSH2 0x1019 JUMPI POP PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 PUSH1 0x1 SLOAD PUSH1 0x8 SHR AND DUP3 DUP3 ISZERO PUSH2 0x1010 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1004 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xFFC JUMP JUMPDEST PUSH2 0x102B SWAP3 SWAP2 PUSH1 0x1 SLOAD PUSH1 0x8 SHR AND SWAP1 PUSH2 0x2DFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x5 PUSH1 0x4 CALLDATALOAD DUP2 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2AA JUMPI PUSH2 0x1086 PUSH1 0x9 SLOAD PUSH2 0x2CC3 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP3 PUSH1 0x8 SLOAD SWAP4 JUMPDEST DUP5 DUP2 LT PUSH2 0x10E0 JUMPI DUP8 DUP8 PUSH2 0x10A4 DUP2 PUSH2 0x2CC3 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x10C1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x10BD DUP7 DUP3 PUSH2 0x2957 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x10CE PUSH1 0x1 SWAP3 DUP5 PUSH2 0x2CF5 JUMP JUMPDEST MLOAD PUSH2 0x10D9 DUP3 DUP8 PUSH2 0x2CF5 JUMP JUMPDEST MSTORE ADD PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 ADD SWAP1 DUP3 DUP3 MSTORE DUP6 DUP2 MSTORE PUSH2 0x10F6 DUP2 PUSH2 0x285A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP7 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 DUP9 SWAP1 DUP3 PUSH2 0x114E JUMPI JUMPDEST POP POP PUSH2 0x112F JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1092 JUMP JUMPDEST DUP8 PUSH2 0x1147 SWAP2 PUSH2 0x1141 PUSH1 0x1 SWAP5 SWAP11 DUP13 PUSH2 0x2CF5 JUMP JUMPDEST MSTORE PUSH2 0x2B7E JUMP JUMPDEST SWAP7 SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x11 ADD SLOAD PUSH1 0xFF AND SWAP2 POP PUSH2 0xF9A JUMPI DUP5 DUP2 LT ISZERO PUSH2 0xF9A JUMPI DUP4 EQ DUP8 DUP12 PUSH2 0x111F JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x1185 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x20 SWAP2 PUSH2 0x11B6 SWAP2 PUSH2 0x2993 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x11DE PUSH2 0x2D8F JUMP JUMPDEST PUSH2 0x11E6 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 PUSH2 0x125B SWAP1 DUP5 AND ISZERO ISZERO PUSH2 0x2C6B JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE DUP3 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER SUB PUSH2 0x13B9 JUMPI PUSH2 0x127C PUSH2 0x2DBE JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x11 DUP2 ADD SWAP1 DUP2 SLOAD SWAP5 PUSH1 0xFF DUP7 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xF9A JUMPI PUSH2 0x136A JUMPI PUSH2 0x12B5 PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xF DUP5 ADD SLOAD SWAP1 PUSH2 0x2B71 JUMP JUMPDEST SWAP6 DUP7 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x12C6 JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST DUP8 SWAP5 PUSH1 0x2 DUP1 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE ADD SLOAD AND DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x1358 JUMPI POP PUSH1 0x0 SWAP1 PUSH2 0x134F JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x1004 JUMPI JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x130F DUP2 SLOAD PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE TIMESTAMP SWAP1 DUP4 ADD MSTORE PUSH32 0xE5511ACCE6FBDF775B76E2921D9F62D7F15BE4FD9D14A6DEB11CCA46A5883F6E PUSH1 0x40 CALLER SWAP4 LOG3 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x8CE JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1365 SWAP3 SWAP2 POP CALLER SWAP1 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204F72646572206E6F742063616E63656C6C61626C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204E6F74206F72646572206F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x1416 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH1 0xFF PUSH2 0x1496 PUSH1 0x20 PUSH2 0x3E0 DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x14CD PUSH2 0x28EC JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x150D PUSH2 0x28EC JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x155B JUMPI PUSH2 0x10BD DUP6 PUSH2 0x154F DUP2 DUP10 SUB DUP3 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2957 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1538 JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x158E PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x64 DUP2 GT PUSH2 0x159B JUMPI PUSH1 0xC SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20466565207261746520746F6F2068696768000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x15F9 PUSH2 0x28EC JUMP JUMPDEST PUSH2 0x1601 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x16BE DUP3 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH1 0x0 DUP2 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 DUP4 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x16F6 DUP2 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP5 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH2 0x120 SWAP1 PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH2 0x140 PUSH1 0x0 DUP2 DUP4 ADD MSTORE PUSH2 0x1870 PUSH2 0x160 PUSH1 0x0 DUP2 DUP6 ADD MSTORE PUSH2 0x180 PUSH1 0x0 DUP2 DUP7 ADD MSTORE PUSH2 0x1A0 SWAP2 PUSH1 0x0 DUP4 DUP8 ADD MSTORE PUSH1 0x0 PUSH2 0x1C0 DUP1 SWAP8 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 DUP10 MSTORE PUSH2 0x1775 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2B8D JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP11 DUP11 DUP13 SWAP12 DUP13 MSTORE DUP8 MLOAD DUP2 DUP14 ADD MSTORE DUP8 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x40 DUP9 ADD MLOAD AND DUP2 DUP13 ADD MSTORE DUP7 ADD MLOAD PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD SWAP8 PUSH2 0x17FC DUP12 PUSH2 0x17E6 PUSH2 0x17CE PUSH2 0x260 SWAP13 DUP14 PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x280 DUP5 ADD SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0xA0 DUP12 ADD MLOAD PUSH1 0x1F NOT SWAP4 PUSH1 0xC0 DUP6 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x2925 JUMP JUMPDEST SWAP1 DUP14 PUSH1 0xE0 PUSH1 0xC0 DUP13 ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x2925 JUMP JUMPDEST SWAP10 PUSH2 0x1839 DUP13 DUP3 PUSH1 0xE0 DUP12 ADD MLOAD SWAP2 ADD SWAP1 PUSH1 0x80 DUP1 SWAP2 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST DUP8 ADD MLOAD DUP6 DUP13 ADD MSTORE DUP7 ADD MLOAD DUP8 DUP12 ADD MSTORE DUP6 ADD MLOAD PUSH2 0x1E0 DUP11 ADD MSTORE DUP5 ADD MLOAD PUSH2 0x200 DUP10 ADD MSTORE DUP4 ADD MLOAD PUSH2 0x220 DUP9 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x240 DUP8 ADD SWAP1 PUSH2 0x294A JUMP JUMPDEST ADD MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x188F PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH2 0x18AE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH2 0x18CE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH2 0x18EE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP1 PUSH1 0xA0 CALLDATASIZE PUSH1 0xA3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1908 DUP3 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD DUP3 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x124 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2AA JUMPI PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1940 PUSH2 0x2DBE JUMP JUMPDEST PUSH2 0x1948 PUSH2 0x2DE1 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x24 CALLDATALOAD LT PUSH2 0x25D1 JUMPI PUSH1 0xFF PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP9 MLOAD PUSH2 0x196A DUP2 DUP4 DUP6 DUP14 ADD PUSH2 0x2902 JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x2580 JUMPI DUP4 MLOAD ISZERO PUSH2 0x253C JUMPI DUP3 MLOAD ISZERO PUSH2 0x24F7 JUMPI PUSH2 0x144 CALLDATALOAD ISZERO PUSH2 0x24B2 JUMPI PUSH1 0x64 NUMBER ADD NUMBER GT PUSH2 0x249C JUMPI PUSH1 0x64 NUMBER ADD PUSH2 0x164 CALLDATALOAD GT ISZERO PUSH2 0x2457 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xD SLOAD GT ISZERO PUSH2 0x2412 JUMPI PUSH1 0x5 DUP3 MLOAD LT PUSH2 0x23CD JUMPI PUSH2 0x5A0 DUP3 MLOAD GT PUSH2 0x2388 JUMPI PUSH1 0x1 PUSH1 0x20 DUP4 ADD MLOAD GT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x14 PUSH1 0x20 DUP4 ADD MLOAD GT PUSH2 0x22F2 JUMPI PUSH2 0x1A00 PUSH2 0x3E8 PUSH1 0x40 DUP5 ADD MLOAD GT ISZERO PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MLOAD ISZERO PUSH2 0x22A3 JUMPI PUSH2 0x2710 PUSH2 0x1A1B PUSH1 0xC SLOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x2B3E JUMP JUMPDEST DIV SWAP4 PUSH2 0x1A29 DUP6 PUSH1 0x24 CALLDATALOAD PUSH2 0x2B71 JUMP JUMPDEST SWAP4 PUSH1 0x8 SLOAD PUSH2 0x1A36 DUP2 PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x1A98 PUSH1 0xA8 PUSH1 0x40 MLOAD DUP1 SWAP4 CALLER PUSH1 0x60 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP9 PUSH1 0x60 SHL AND PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x48 DUP4 ADD MSTORE DUP12 PUSH2 0x1A7C DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x68 DUP8 ADD SWAP2 ADD PUSH2 0x2902 JUMP JUMPDEST DUP3 ADD SWAP1 TIMESTAMP PUSH1 0x68 DUP4 ADD MSTORE PUSH1 0x88 DUP3 ADD MSTORE SUB PUSH1 0x88 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x2875 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x21F0 JUMPI POP PUSH1 0x24 CALLDATALOAD CALLVALUE SUB PUSH2 0x21AB JUMPI DUP1 PUSH2 0x213D JUMPI JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1ACF DUP3 PUSH2 0x283E JUMP JUMPDEST DUP7 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP4 ADD MSTORE DUP6 PUSH1 0x60 DUP4 ADD MSTORE DUP8 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE DUP4 PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x144 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x164 CALLDATALOAD PUSH2 0x120 DUP3 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD MSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1EB7 JUMPI DUP2 SWAP1 PUSH2 0x1BBE PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x20EA JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2078 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x206D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1EB7 JUMPI DUP2 SWAP1 PUSH2 0x1C1B PUSH1 0x5 DUP7 ADD SLOAD PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x201A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1FA8 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1F9D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 DUP4 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1EB7 JUMPI DUP2 SWAP1 PUSH2 0x1C78 PUSH1 0x6 DUP7 ADD SLOAD PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1F4A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1ED8 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1ECD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 DUP4 ADD SSTORE JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x8 DUP5 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x9 DUP5 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA DUP5 ADD SSTORE PUSH1 0x80 PUSH1 0xB DUP5 ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0xC DUP4 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0xD DUP4 ADD SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xE DUP4 ADD SSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH1 0xF DUP4 ADD SSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH1 0x10 DUP4 ADD SSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xF9A JUMPI PUSH1 0x12 SWAP2 PUSH2 0x1C0 SWAP2 PUSH1 0xFF DUP1 NOT PUSH1 0x11 DUP8 ADD SLOAD AND SWAP2 AND OR PUSH1 0x11 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP6 DUP7 SLOAD SWAP7 PUSH1 0x1 PUSH1 0x40 SHL DUP9 LT ISZERO PUSH2 0x1EB7 JUMPI PUSH2 0x1E37 DUP8 SWAP5 PUSH32 0xDF9B2EE7E19A4BED367D9C7CBAE54540A83B4E8A242569D2BAB04741CBB0F442 SWAP5 PUSH2 0x1DAF DUP12 PUSH2 0x1E6C SWAP6 PUSH1 0x1 PUSH1 0x20 SWAP15 ADD DUP2 SSTORE PUSH2 0x2993 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP10 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP12 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1DDB DUP2 SLOAD PUSH2 0x2B7E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1DE8 PUSH1 0x9 SLOAD PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x1DF9 PUSH1 0x24 CALLDATALOAD PUSH1 0xA SLOAD PUSH2 0x2B31 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x1E13 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x120 DUP8 MSTORE PUSH2 0x120 DUP8 ADD SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP6 DUP13 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2925 JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP4 ADD SWAP1 PUSH1 0x80 DUP1 SWAP2 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH2 0x164 CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 PUSH32 0x1BA3FBE5FD9D0A7139D0258BB7B035B16ADB3A67CD7B5DB6BB0B545C71483146 PUSH1 0x40 PUSH2 0x144 CALLDATALOAD SWAP4 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x1C98 JUMP JUMPDEST SWAP3 POP PUSH1 0x6 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1F2F JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1F16 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 DUP4 ADD SSTORE PUSH2 0x1CB0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x1F06 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1EEB JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x6 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1F96 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1F87 JUMPI POP POP PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1F71 JUMP JUMPDEST POP DUP1 PUSH2 0x1F6B JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x1C3B JUMP JUMPDEST SWAP3 POP PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1FFF JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1FE6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 DUP4 ADD SSTORE PUSH2 0x1C53 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x1FD6 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1FBB JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2066 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2057 JUMPI POP POP PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2041 JUMP JUMPDEST POP DUP1 PUSH2 0x203B JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x1BDE JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x20CF JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x20B6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x1BF6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x20A6 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x208B JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2136 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2127 JUMPI POP POP PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2111 JUMP JUMPDEST POP DUP1 PUSH2 0x210B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x21A2 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1004 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 SWAP2 PUSH32 0xCFBA6F0D638F02D61BCA3CAD4C8B0EE671B83BE0D14085BDA2D196BE921BE929 SWAP2 SWAP1 LOG2 DUP8 PUSH2 0x1AC0 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x2156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A2045544820616D6F756E74206D69736D6174636800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2234 PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0x2225 DUP2 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x308B JUMP JUMPDEST DUP1 PUSH2 0x2241 JUMPI JUMPDEST POP POP PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH32 0xCFBA6F0D638F02D61BCA3CAD4C8B0EE671B83BE0D14085BDA2D196BE921BE929 SWAP2 SWAP1 PUSH2 0x2280 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP10 AND PUSH2 0x2DFF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 LOG2 DUP6 DUP9 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C6964206D696E2066696C6C2073697A PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20546F6F206D616E7920696E74657276616C730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204E656564206D756C7469706C6520696E74657276 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616C73 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A2057696E646F7720746F6F206C6172676500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A2057696E646F7720746F6F20736D616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20546F6F206D616E79206F72646572730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A2054696D656F757420746F6F20736F6F6E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C69642048544C432068617368000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C696420726563697069656E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C69642074617267657420746F6B656E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20556E737570706F72746564207461726765742063 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3430B4B7 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20416D6F756E7420746F6F20736D616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH2 0x3D8 PUSH2 0x264B SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x5 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x267A PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x26B9 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x5A0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH2 0x2733 DUP2 PUSH2 0x2B1A JUMP JUMPDEST SWAP1 PUSH2 0x2741 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2875 JUMP JUMPDEST DUP1 DUP3 MSTORE DUP3 DUP3 ADD DUP1 SWAP5 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x27BE JUMPI PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE DUP7 MLOAD DUP2 DUP10 ADD DUP2 SWAP1 MSTORE DUP10 SWAP3 DUP3 ADD SWAP1 DUP10 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2780 JUMPI DUP5 DUP5 SUB DUP6 RETURN JUMPDEST DUP6 MLOAD DUP1 MLOAD DUP6 MSTORE DUP1 DUP4 ADD MLOAD DUP6 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE SWAP5 DUP2 ADD SWAP5 PUSH1 0xA0 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x5 DUP7 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x27D0 DUP2 PUSH2 0x2823 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x2754 JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EB7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EB7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EB7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EB7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2AA JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1EB7 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x28CA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x2875 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2AA JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2AA JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2915 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2905 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x293E DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0xF9A JUMPI MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x297F JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2971 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x29AB JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x29F1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x29DB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x29D0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x2A0E DUP2 PUSH2 0x29C1 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2A7E JUMPI POP PUSH1 0x1 EQ PUSH2 0x2A3F JUMPI JUMPDEST POP POP POP PUSH2 0x2A3D SWAP3 POP SUB DUP4 PUSH2 0x2875 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0x2A66 JUMPI POP POP PUSH2 0x2A3D SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2A2E JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2A4D JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2A3D SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2A2E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2AAD DUP2 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 DUP4 SWAP6 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x29AB JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1EB7 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x249C JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x249C JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2B5B JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x249C JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x249C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2B9A DUP2 PUSH2 0x283E JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH2 0x2BD7 PUSH1 0x4 DUP3 ADD PUSH2 0x29FB JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2BE8 PUSH1 0x5 DUP3 ADD PUSH2 0x29FB JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2BF9 PUSH1 0x6 DUP3 ADD PUSH2 0x29FB JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2C0A PUSH1 0x7 DUP3 ADD PUSH2 0x2AA0 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xD DUP2 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xE DUP2 ADD SLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xF DUP2 ADD SLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0x10 DUP2 ADD SLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x11 DUP3 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xF9A JUMPI PUSH2 0x1C0 SWAP2 PUSH1 0x12 SWAP2 PUSH2 0x1A0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2C72 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204F7264657220646F6573206E6F74206578697374 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 ISZERO PUSH2 0x249C JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2CCD DUP3 PUSH2 0x2B1A JUMP JUMPDEST PUSH2 0x2CDA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2875 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2CEB PUSH1 0x1F NOT SWAP2 PUSH2 0x2B1A JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x29AB JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2D10 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20536C69707061676520746F6F2068696768000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x2D6A PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2B8D JUMP JUMPDEST PUSH2 0x180 DUP2 ADD MLOAD DUP1 ISZERO PUSH2 0x2D89 JUMPI PUSH2 0x95A PUSH1 0xE0 PUSH2 0x2D86 SWAP4 ADD MLOAD PUSH2 0x2E4E JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2DA6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x2DCF JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0x2DED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP3 DUP5 LT OR PUSH2 0x1EB7 JUMPI PUSH2 0x2A3D SWAP3 PUSH1 0x40 MSTORE PUSH2 0x308B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3C DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3C EQ SWAP1 ISZERO OR ISZERO PUSH2 0x249C JUMPI PUSH1 0x20 PUSH2 0x2D86 SWAP3 ADD MLOAD SWAP1 PUSH2 0x2B51 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x4 SWAP3 PUSH1 0x20 SWAP2 PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E94 DUP2 PUSH2 0x2B1A JUMP JUMPDEST SWAP4 PUSH2 0x2EA1 DUP8 MLOAD SWAP6 DUP7 PUSH2 0x2875 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP6 SWAP1 DUP5 DUP1 DUP8 ADD JUMPDEST DUP5 DUP5 LT PUSH2 0x2FF1 JUMPI POP POP POP POP POP DUP3 MLOAD ISZERO PUSH2 0x2FE8 JUMPI SWAP1 PUSH1 0x2 SWAP2 DUP5 MSTORE MSTORE PUSH1 0xE0 PUSH2 0x2ED7 DUP5 DUP5 KECCAK256 PUSH2 0x2B8D JUMP JUMPDEST ADD MLOAD MLOAD PUSH1 0x3C DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3C EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2FD4 JUMPI PUSH2 0x2EF7 SWAP1 TIMESTAMP PUSH2 0x2B71 JUMP JUMPDEST SWAP3 DUP3 DUP1 SWAP5 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2FB6 JUMPI DUP2 PUSH2 0x2F11 DUP3 DUP8 PUSH2 0x2CF5 JUMP JUMPDEST MLOAD MLOAD LT ISZERO PUSH2 0x2F22 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2EFD JUMP JUMPDEST SWAP6 SWAP5 DUP7 ISZERO PUSH2 0x2F9C JUMPI PUSH2 0x2F34 DUP8 DUP7 PUSH2 0x2CF5 JUMP JUMPDEST MLOAD MLOAD PUSH1 0x0 NOT DUP9 ADD DUP9 DUP2 GT PUSH2 0x2F89 JUMPI PUSH2 0x2F7B PUSH1 0x1 SWAP4 PUSH2 0x95A DUP12 DUP10 PUSH2 0x2F69 PUSH2 0x2F81 SWAP8 PUSH2 0x2F61 PUSH2 0x2F73 SWAP9 DUP16 PUSH2 0x2CF5 JUMP JUMPDEST MLOAD MLOAD SWAP1 PUSH2 0x2B71 JUMP JUMPDEST SWAP6 DUP7 SWAP3 JUMPDEST DUP14 PUSH2 0x2CF5 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x2B3E JUMP JUMPDEST SWAP8 PUSH2 0x2B31 JUMP JUMPDEST SWAP7 SWAP1 POP PUSH2 0x2F1A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP12 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH2 0x2F81 PUSH2 0x2F73 PUSH2 0x2F7B PUSH1 0x1 SWAP4 PUSH2 0x95A DUP12 DUP10 DUP8 SWAP6 DUP7 SWAP3 PUSH2 0x2F6D JUMP JUMPDEST POP SWAP6 SWAP7 POP SWAP5 POP POP DUP3 ISZERO SWAP1 POP PUSH2 0x2FCF JUMPI PUSH2 0x2D86 SWAP3 POP PUSH2 0x2B51 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP2 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH1 0x5 SWAP2 DUP14 DUP13 MLOAD SWAP1 PUSH2 0x3004 DUP3 PUSH2 0x2823 JUMP JUMPDEST DUP7 SLOAD DUP3 MSTORE DUP6 DUP8 ADD SLOAD DUP5 DUP4 ADD MSTORE DUP14 PUSH1 0x2 DUP9 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3084 JUMPI DUP2 DUP2 DUP2 GT ISZERO PUSH2 0x3075 JUMPI SWAP1 PUSH2 0x3056 SWAP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x249C JUMPI PUSH2 0x2D86 SWAP2 PUSH2 0x2B51 JUMP JUMPDEST PUSH2 0x307E SWAP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP1 PUSH2 0x3058 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x1004 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x30DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x30BC JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x30B5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 MUL LOG0 DUP4 0xC9 DUP3 0xC9 0x25 PUSH10 0x7E15AD1A5E56E5ED038C 0xC6 SWAP16 0x2D 0xAC 0xCC 0xAB 0xCB 0xF9 GASPRICE 0xC3 0x4B 0x1E EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"665:21581:13:-:0;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;;;;;-1:-1:-1;665:21581:13;4811:10;1273:26:0;1269:95;;665:21581:13;;-1:-1:-1;;;;;;665:21581:13;;4811:10;665:21581;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;4811:10;;665:21581;;;;3052:40:0;-1:-1:-1;;3052:40:0;2244:3:13;;665:21581;4842:27;;665:21581;;4926:23;2244:3;4926:23;;665:21581;;;;;;;;5014:28;665:21581;;;5014:28;665:21581;5053:34;665:21581;;;;-1:-1:-1;;;665:21581:13;;;;5148:15;665:21581;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;2244:3;;665:21581;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;2244:3:13;665:21581;;;;;;1269:95:0;665:21581:13;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;665:21581:13;;;1322:31:0;665:21581:13;-1:-1:-1;665:21581:13;;;;;;-1:-1:-1;665:21581:13;;;;;-1:-1:-1;665:21581:13"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10476,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":10390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn":{"entryPoint":10583,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_OrderStatus":{"entryPoint":10570,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":10533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_TWAPConfig":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_bytes32_dyn":{"entryPoint":11459,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_struct_ExecutionRecord_dyn":{"entryPoint":11034,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":11057,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":11089,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":11070,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":11121,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":10747,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":10498,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_uint256":{"entryPoint":11446,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_MAX_SLIPPAGE":{"entryPoint":11005,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10689,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10357,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_49070":{"entryPoint":10275,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49073":{"entryPoint":10302,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_57703":{"entryPoint":10330,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculateSlippage":{"entryPoint":12348,"id":3027,"parameterSlots":2,"returnSlots":1},"fun_calculateTWAP":{"entryPoint":11889,"id":2991,"parameterSlots":1,"returnSlots":1},"fun_callOptionalReturn":{"entryPoint":12427,"id":1415,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":11663,"id":84,"parameterSlots":0,"returnSlots":0},"fun_getIntervalDuration":{"entryPoint":11854,"id":2878,"parameterSlots":1,"returnSlots":1},"fun_getNextExecutionTime":{"entryPoint":11605,"id":2699,"parameterSlots":1,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":11710,"id":1644,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":11745,"id":1549,"parameterSlots":0,"returnSlots":0},"fun_safeTransfer":{"entryPoint":11775,"id":1038,"parameterSlots":3,"returnSlots":0},"increment_uint256":{"entryPoint":11134,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":11509,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_reference_type_struct_TWAPConfig":{"entryPoint":10912,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_TWAPOrder":{"entryPoint":11149,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_96de":{"entryPoint":11371,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e93b":{"entryPoint":11529,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_bytes32_dyn":{"entryPoint":10643,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_struct_ExecutionRecord__dyn":{"entryPoint":10977,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60808060405260043610156100a8575b50361561005b5760405162461bcd60e51b815260206004820152601e60248201527f466c6f77467573696f6e3a2046756e6374696f6e206e6f7420666f756e6400006044820152606490fd5b341561006357005b60405162461bcd60e51b815260206004820152601760248201527f466c6f77467573696f6e3a204e6f204554482073656e740000000000000000006044820152606490fd5b60003560e01c90816316f8de8914612808575080631833f0cf146127065780631d834409146126e85780631def6ffe146126cb5780633f4ba83a146126615780634656002314612616578063518479b31461187a5780635778472a1461169f57806358f85880146116815780635c975abb1461165e5780635d830dd1146116405780635f81a57c1461162257806360c7bae2146115e05780636340d55c1461157257806363c69f08146114eb578063679d86a7146114ac5780636c30aaa21461145e578063715018a6146113fd5780637489ec231461121e5780638456cb59146111c5578063856652e91461116c5780638ce2ec791461105a5780638da5cb5b1461102d57806395ccea6714610fb05780639755dca014610e195780639c3f1e9014610cbb5780639cac0fb214610c4f578063a3f1c42014610648578063a6329c7f146105d9578063a89a6f69146105bb578063b2a7f4941461052b578063c415b95c14610502578063d2c35ce81461046b578063d62e5d791461044f578063dc33597d14610429578063e1f1c4a71461040c578063e5eb8a89146103a3578063e6a73b6314610387578063ec4eb4f91461034d578063f2fde38b146102b4578063f9759518146102af578063fca98ac6146102af5763ffa1ad741461028e573861000f565b346102aa5760003660031901126102aa57602060405160018152f35b600080fd5b612afd565b346102aa5760203660031901126102aa576102cd6128ec565b6102d5612d8f565b6001600160a01b038181169182156103345760018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346102aa5760203660031901126102aa576001600160a01b0361036e6128ec565b1660005260076020526020604060002054604051908152f35b346102aa5760003660031901126102aa57602060405160058152f35b346102aa5760203660031901126102aa576004356001600160401b0381116102aa5760206103d86103f3923690600401612896565b6103e0612d8f565b8160405193828580945193849201612902565b600590820190815203019020805460ff19166001179055005b346102aa5760003660031901126102aa5760206040516127108152f35b346102aa5760203660031901126102aa576020610447600435612d55565b604051908152f35b346102aa5760003660031901126102aa57602060405160148152f35b346102aa5760203660031901126102aa576104846128ec565b61048c612d8f565b6001600160a01b031680156104b3576001600160601b0360a01b600b541617600b55600080f35b60405162461bcd60e51b815260206004820152602160248201527f466c6f77467573696f6e3a20496e76616c69642066656520636f6c6c6563746f6044820152603960f91b6064820152608490fd5b346102aa5760003660031901126102aa57600b546040516001600160a01b039091168152602090f35b346102aa5760203660031901126102aa576105446128ec565b61054c612d8f565b6001600160a01b03168015610576576000908152600660205260409020805460ff19166001179055005b60405162461bcd60e51b815260206004820152601c60248201527f466c6f77467573696f6e3a20496e76616c6964206578656375746f72000000006044820152606490fd5b346102aa5760203660031901126102aa576020610447600435612e71565b346102aa5760403660031901126102aa576024356004356000526004602052604060002080548210156102aa5760a09161061291612ae1565b50805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b346102aa5760803660031901126102aa576001600160401b0360246064604481358481116102aa57366023820112156102aa5780600401359485116102aa57838536920101116102aa5733600052600660205260ff6040600020541615610c01576004356000908152600260205260409020600101546106d2906001600160a01b03161515612c6b565b600435600052600260205260ff601160406000200154166005811015610bec57610bab576106fe612dbe565b6004356000526002602052604060002093833515610b5d57600385015492600f8601549161072c8386612b71565b863511610b1c57600d870154431015610adb5761075361074e60078901612aa0565b612e4e565b6010880154908115918215610ac7575b505015610a7457833515159081610a6a575b5015610a2a57610786600435612e71565b938415159283610a0b575b600a880154873510918215926109f7575b5050156109a95750600435600052600460205260406000208054935a92156109a1576107d09084359061303c565b604051926107dd84612823565b428452863560208501528435604085015260608401526080830152600160401b84101561098c578361081491600182018155612ae1565b9190916109775760808160049251845560208101516001850155604081015160028501556060810151600385015501519101556108568335600f860154612b31565b600f850155426010850155601284019283541560001461092557813584555b6040519283523560208301523560408201524260608201523360808201527fe4096eaa9aa9b8f8e8ca77df4dff5052b5d6282c11b6653afbca6a5a7574c8da60a060043592a2600f8201549160038101548310156108d5575b6001600055005b601101600160ff198254161790555460405191825260208201524260408201527fde99ce77ac3ae0048f3c53988bc6ee856041365b692310c98f709f2e2a6cfbea606060043592a28080806108ce565b61097061093186612b8d565b61096a61096061094e6101606101c0850151940193845190612b3e565b61095a86358835612b3e565b90612b31565b9184359051612b31565b90612b51565b8455610875565b84634e487b7160e01b60005260006004526000fd5b84634e487b7160e01b60005260416004526000fd5b5060006107d0565b8462697a6560e81b6084927f466c6f77467573696f6e3a2042656c6f77206d696e696d756d2066696c6c20738660236040519562461bcd60e51b875260206004880152860152840152820152fd5b610a019250612b71565b85351487806107a2565b610a25610a1986358861303c565b60098a01541015612d09565b610791565b60405162461bcd60e51b8152602060048201526019818701527f466c6f77467573696f6e3a20496e76616c69642070726963650000000000000081850152fd5b9050151587610775565b60405162461bcd60e51b8152602060048201526028818801527f466c6f77467573696f6e3a20546f6f206561726c7920666f72206e657874206581860152673c32b1baba34b7b760c11b81840152608490fd5b610ad19250612b31565b4210158880610763565b5060405162461bcd60e51b8152602060048201526019818701527f466c6f77467573696f6e3a204f7264657220657870697265640000000000000081850152fd5b5060405162461bcd60e51b815260206004820152601d818701527f466c6f77467573696f6e3a20457863656564732072656d61696e696e6700000081850152fd5b60405162461bcd60e51b8152602060048201526023818601527f466c6f77467573696f6e3a20496e76616c696420696e74657276616c20616d6f81840152621d5b9d60ea1b81850152608490fd5b7f466c6f77467573696f6e3a204f72646572206e6f7420616374697665000000008391601c6040519362461bcd60e51b855260206004860152840152820152fd5b83634e487b7160e01b60005260216004526000fd5b608492917f466c6f77467573696f6e3a204e6f7420617574686f72697a6564206578656375623a37b960e91b9260236040519562461bcd60e51b875260206004880152860152840152820152fd5b346102aa5760203660031901126102aa57600435610c6b612d8f565b8015610c7657600d55005b60405162461bcd60e51b815260206004820152601e60248201527f466c6f77467573696f6e3a20496e76616c6964206d6178206f726465727300006044820152606490fd5b346102aa5760203660031901126102aa5760043560005260026020526040600020805490600160a01b6001900380600183015416906002830154169260038301549260048101610d0a906129fb565b92610d17600583016129fb565b93610d24600684016129fb565b94610d3160078501612aa0565b95600c850154600d86015491600e87015493600f8801549560108901549760118a015460ff1699601201549a6040519e8f9e8f916102609485948452602084015260408301526060820152608001528c01610d8b91612925565b8b810360a08d0152610d9c91612925565b8a810360c08c0152610dad91612925565b885160e08b015260208901516101008b015260408901516101208b015260608901516101408b015260809098015115156101608a01526101808901526101a08801526101c08701526101e08601526102008501526102208401610e0f9161294a565b6102408301520390f35b346102aa5760403660031901126102aa576004356024358160005260206002815260018060a01b03610e5681600160406000200154161515612c6b565b610e5e612dbe565b8360005260028252604060002060118101805460ff81166005811015610f9a57600103610f555760405185810190878252868152610e9b8161285a565b519020600c84015403610f1057606094927f600ffd9313a629c5acdcb599e269730b878ff6653f1fc57f573686e2df43fa13969492600460019360ff1916179055015416600052600781526040600020610ef58154612cb6565b90556040519182523390820152426040820152a26001600055005b60405162461bcd60e51b815260048101869052601a60248201527f466c6f77467573696f6e3a20496e76616c6964207365637265740000000000006044820152606490fd5b60405162461bcd60e51b815260048101869052601f60248201527f466c6f77467573696f6e3a204f72646572206e6f7420636f6d706c65746564006044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b346102aa5760403660031901126102aa57610fc96128ec565b60243590610fd5612d8f565b6001600160a01b039081168061101957506000808093819360015460081c16828215611010575bf11561100457005b6040513d6000823e3d90fd5b506108fc610ffc565b61102b929160015460081c1690612dff565b005b346102aa5760003660031901126102aa5760015460405160089190911c6001600160a01b03168152602090f35b346102aa576020806003193601126102aa5760056004358181101590816102aa57611086600954612cc3565b93600093600092600854935b8481106110e05787876110a481612cc3565b9160005b8281106110c157604051806110bd8682612957565b0390f35b806110ce60019284612cf5565b516110d98287612cf5565b52016110a8565b604051848101908282528581526110f68161285a565b5190206000818152600286526040902060018101546001600160a01b031615159088908261114e575b505061112f575b50600101611092565b87611147916111416001949a8c612cf5565b52612b7e565b9690611126565b6011015460ff169150610f9a5784811015610f9a578314878b61111f565b346102aa5760403660031901126102aa576111856128ec565b6001600160a01b03166000908152600360205260409020805460243591908210156102aa576020916111b691612993565b90549060031b1c604051908152f35b346102aa5760003660031901126102aa576111de612d8f565b6111e6612de1565b600160ff19815416176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346102aa576020806003193601126102aa5760043560008181526002835260409020600101546001600160a01b03929061125b9084161515612c6b565b8160005260028152826001604060002001541633036113b95761127c612dbe565b81600052600281526040600020601181019081549460ff86166005811015610f9a5761136a576112b56003830154600f84015490612b71565b9586159283156112c6576001600055005b87946002809360ff19161790550154168015600014611358575060009061134f575b600080809381933390f115611004575b3360005260078152604060002061130f8154612cb6565b905560405192835242908301527fe5511acce6fbdf775b76e2921d9f62d7f15be4fd9d14a6deb11cca46a5883f6e60403393a380808080808080806108ce565b506108fc6112e8565b6113659291503390612dff565b6112f8565b60405162461bcd60e51b815260048101859052602160248201527f466c6f77467573696f6e3a204f72646572206e6f742063616e63656c6c61626c6044820152606560f81b6064820152608490fd5b6064906040519062461bcd60e51b82526004820152601b60248201527f466c6f77467573696f6e3a204e6f74206f72646572206f776e657200000000006044820152fd5b346102aa5760003660031901126102aa57611416612d8f565b60018054610100600160a81b0319811690915560009060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102aa5760203660031901126102aa576004356001600160401b0381116102aa5760ff61149660206103e081943690600401612896565b8101600581520301902054166040519015158152f35b346102aa5760203660031901126102aa576001600160a01b036114cd6128ec565b166000526006602052602060ff604060002054166040519015158152f35b346102aa576020806003193601126102aa576001600160a01b0361150d6128ec565b1660005260036020526040600020906040519081602084549182815201936000526020600020916000905b82821061155b576110bd8561154f81890382612875565b60405191829182612957565b835486529485019460019384019390910190611538565b346102aa5760203660031901126102aa5760043561158e612d8f565b6064811161159b57600c55005b60405162461bcd60e51b815260206004820152601d60248201527f466c6f77467573696f6e3a20466565207261746520746f6f20686967680000006044820152606490fd5b346102aa5760203660031901126102aa576115f96128ec565b611601612d8f565b6001600160a01b03166000908152600660205260409020805460ff19169055005b346102aa5760003660031901126102aa576020600a54604051908152f35b346102aa5760003660031901126102aa576020600d54604051908152f35b346102aa5760003660031901126102aa57602060ff600154166040519015158152f35b346102aa5760003660031901126102aa576020600c54604051908152f35b346102aa576020806003193601126102aa57604051906116be8261283e565b60008252600081830152600060408301526060916000838201528260808201528260a08201528260c08201526040516116f681612823565b60008152600083820152600060408201526000848201526000608082015260e082015261010090600082820152610120906000828201526101406000818301526118706101606000818501526101806000818601526101a09160008387015260006101c080970152600435600052600289526117756040600020612b8d565b946040519a8a8c9b8c528751818d015287015160018060a01b0380911660408d0152604088015116818c015286015160808b01526080860151976117fc8b6117e66117ce6102609c8d60a0850152610280840190612925565b60a08b0151601f199360c08582850301910152612925565b908d60e060c08c01519282850301910152612925565b996118398c8260e08b0151910190608080918051845260208101516020850152604081015160408501526060810151606085015201511515910152565b870151858c0152860151878b01528501516101e08a015284015161020089015283015161022088015282015161024087019061294a565b0151908301520390f35b6101803660031901126102aa5761188f6128ec565b6044356001600160401b0381116102aa576118ae903690600401612896565b906064356001600160401b0381116102aa576118ce903690600401612896565b906084356001600160401b0381116102aa576118ee903690600401612896565b9060a03660a31901126102aa576040519061190882612823565b60a435825260c435602083015260e43560408301526101043560608301526101243580151581036102aa576080830152611940612dbe565b611948612de1565b6103e8602435106125d15760ff604051602081885161196a8183858d01612902565b810160058152030190205416156125805783511561253c578251156124f75761014435156124b25760644301431161249c576064430161016435111561245757336000526007602052604060002054600d5411156124125760058251106123cd576105a0825111612388576001602083015111156123375760146020830151116122f257611a006103e860408401511115612d09565b6060820151156122a357612710611a1b600c54602435612b3e565b0493611a2985602435612b71565b93600854611a3681612b7e565b600855611a9860a860405180933360601b60208301526001600160601b03198860601b16603483015260243560488301528b611a7c815180926020606887019101612902565b8201904260688301526088820152036088810184520182612875565b805160209091012095866001600160a01b0385166121f0575060243534036121ab578061213d575b505b60405190611acf8261283e565b86825233602083015260018060a01b03841660408301528560608301528760808301528260a083015260c08201528360e08201526101443561010082015261016435610120820152426101408201526000610160820152600061018082015260006101a082015260006101c0820152856000526002602052604060002090805182556001820160018060a01b03602083015116906001600160601b0360a01b9182825416179055600283019060018060a01b03604084015116908254161790556060810151600383015560808101518051906001600160401b038211611eb7578190611bbe60048601546129c1565b601f81116120ea575b50602090601f83116001146120785760009261206d575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b038211611eb7578190611c1b60058601546129c1565b601f811161201a575b50602090601f8311600114611fa857600092611f9d575b50508160011b916000199060031b1c19161760058301555b60c08101518051906001600160401b038211611eb7578190611c7860068601546129c1565b601f8111611f4a575b50602090601f8311600114611ed857600092611ecd575b50508160011b916000199060031b1c19161760068301555b60e08101518051600784015560208101516008840155604081015160098401556060810151600a8401556080600b8401910151151560ff80198354169116179055610100810151600c830155610120810151600d830155610140810151600e830155610160810151600f83015561018081015160108301556101a08101516005811015610f9a576012916101c09160ff801960118701541691161760118501550151910155336000526003602052604060002095865496600160401b881015611eb757611e3787947fdf9b2ee7e19a4bed367d9c7cbae54540a83b4e8a242569d2bab04741cbb0f44294611daf8b611e6c95600160209e018155612993565b81549060031b9089821b91600019901b19161790553360005260078b526040600020611ddb8154612b7e565b9055611de8600954612b7e565b600955611df9602435600a54612b31565b600a55611e13604051956101208752610120870190612925565b6001600160a01b03909216858c015260243560408601528482036060860152612925565b946080830190608080918051845260208101516020850152604081015160408501526060810151606085015201511515910152565b8033940390a36040519081526101643583820152817f1ba3fbe5fd9d0a7139d0258bb7b035b16adb3a67cd7b5db6bb0b545c7148314660406101443593a36001600055604051908152f35b634e487b7160e01b600052604160045260246000fd5b015190508a80611c98565b9250600685016000526020600020906000935b601f1984168510611f2f576001945083601f19811610611f16575b505050811b016006830155611cb0565b015160001960f88460031b161c191690558a8080611f06565b81810151835560209485019460019093019290910190611eeb565b909150600685016000526020600020601f840160051c810160208510611f96575b90849392915b601f830160051c82018110611f87575050611c81565b60008155859450600101611f71565b5080611f6b565b015190508a80611c3b565b9250600585016000526020600020906000935b601f1984168510611fff576001945083601f19811610611fe6575b505050811b016005830155611c53565b015160001960f88460031b161c191690558a8080611fd6565b81810151835560209485019460019093019290910190611fbb565b909150600585016000526020600020601f840160051c810160208510612066575b90849392915b601f830160051c82018110612057575050611c24565b60008155859450600101612041565b508061203b565b015190508a80611bde565b9250600485016000526020600020906000935b601f19841685106120cf576001945083601f198116106120b6575b505050811b016004830155611bf6565b015160001960f88460031b161c191690558a80806120a6565b8181015183556020948501946001909301929091019061208b565b909150600485016000526020600020601f840160051c810160208510612136575b90849392915b601f830160051c82018110612127575050611bc7565b60008155859450600101612111565b508061210b565b60008080808460018060a01b03600b54168282156121a2575bf11561100457600b54604080519283526001600160a01b03909116602083015287917fcfba6f0d638f02d61bca3cad4c8b0ee671b83be0d14085bda2d196be921be9299190a287611ac0565b506108fc612156565b60405162461bcd60e51b815260206004820152601f60248201527f466c6f77467573696f6e3a2045544820616d6f756e74206d69736d61746368006044820152606490fd5b906122346040516323b872dd60e01b602082015233602482015230604482015260243560648201526064815261222581612823565b6001600160a01b03871661308b565b80612241575b5050611ac2565b600b547fcfba6f0d638f02d61bca3cad4c8b0ee671b83be0d14085bda2d196be921be92991906122809082906001600160a01b03908116908916612dff565b600b54604080519283526001600160a01b03909116602083015290a2858861223a565b60405162461bcd60e51b815260206004820152602160248201527f466c6f77467573696f6e3a20496e76616c6964206d696e2066696c6c2073697a6044820152606560f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601e60248201527f466c6f77467573696f6e3a20546f6f206d616e7920696e74657276616c7300006044820152606490fd5b60405162461bcd60e51b815260206004820152602360248201527f466c6f77467573696f6e3a204e656564206d756c7469706c6520696e74657276604482015262616c7360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f466c6f77467573696f6e3a2057696e646f7720746f6f206c61726765000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f466c6f77467573696f6e3a2057696e646f7720746f6f20736d616c6c000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f466c6f77467573696f6e3a20546f6f206d616e79206f726465727300000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f466c6f77467573696f6e3a2054696d656f757420746f6f20736f6f6e000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601d60248201527f466c6f77467573696f6e3a20496e76616c69642048544c4320686173680000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f466c6f77467573696f6e3a20496e76616c696420726563697069656e740000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f466c6f77467573696f6e3a20496e76616c69642074617267657420746f6b656e6044820152fd5b60405162461bcd60e51b8152602060048201526024808201527f466c6f77467573696f6e3a20556e737570706f727465642074617267657420636044820152633430b4b760e11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f466c6f77467573696f6e3a20416d6f756e7420746f6f20736d616c6c000000006044820152606490fd5b346102aa5760203660031901126102aa576004356001600160401b0381116102aa5760206103d861264b923690600401612896565b600590820190815203019020805460ff19169055005b346102aa5760003660031901126102aa5761267a612d8f565b60015460ff8116156126b95760ff19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b346102aa5760003660031901126102aa5760206040516105a08152f35b346102aa5760003660031901126102aa576020600954604051908152f35b346102aa576020806003193601126102aa5760043560005260048152604060002090815461273381612b1a565b906127416040519283612875565b8082528282018094600052836000206000915b8383106127be5760408051878152865181890181905289928201908960005b8281106127805784840385f35b85518051855280830151858401526040808201519086015260608082015190860152608090810151908501529481019460a090930192600101612773565b6005866001926040516127d081612823565b855481528486015483820152600286015460408201526003860154606082015260048601546080820152815201920192019190612754565b346102aa5760003660031901126102aa576020906008548152f35b60a081019081106001600160401b03821117611eb757604052565b6101e081019081106001600160401b03821117611eb757604052565b604081019081106001600160401b03821117611eb757604052565b90601f801991011681019081106001600160401b03821117611eb757604052565b81601f820112156102aa578035906001600160401b038211611eb757604051926128ca601f8401601f191660200185612875565b828452602083830101116102aa57816000926020809301838601378301015290565b600435906001600160a01b03821682036102aa57565b60005b8381106129155750506000910152565b8181015183820152602001612905565b9060209161293e81518092818552858086019101612902565b601f01601f1916010190565b906005821015610f9a5752565b602090602060408183019282815285518094520193019160005b82811061297f575050505090565b835185529381019392810192600101612971565b80548210156129ab5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c921680156129f1575b60208310146129db57565b634e487b7160e01b600052602260045260246000fd5b91607f16916129d0565b90604051918260008254612a0e816129c1565b90818452602094600191600181169081600014612a7e5750600114612a3f575b505050612a3d92500383612875565b565b600090815285812095935091905b818310612a66575050612a3d9350820101388080612a2e565b85548884018501529485019487945091830191612a4d565b92505050612a3d94925060ff191682840152151560051b820101388080612a2e565b90604051612aad81612823565b608060ff60048395805485526001810154602086015260028101546040860152600381015460608601520154161515910152565b80548210156129ab576000526005602060002091020190600090565b346102aa5760003660031901126102aa5760206040516103e88152f35b6001600160401b038111611eb75760051b60200190565b9190820180921161249c57565b8181029291811591840414171561249c57565b8115612b5b570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161249c57565b600019811461249c5760010190565b90604051612b9a8161283e565b8254815260018301546001600160a01b039081166020830152600284015416604082015260038301546060820152918290612bd7600482016129fb565b6080830152612be8600582016129fb565b60a0830152612bf9600682016129fb565b60c0830152612c0a60078201612aa0565b60e0830152600c810154610100830152600d810154610120830152600e810154610140830152600f810154610160830152601081015461018083015260ff6011820154166005811015610f9a576101c0916012916101a08501520154910152565b15612c7257565b606460405162461bcd60e51b815260206004820152602060248201527f466c6f77467573696f6e3a204f7264657220646f6573206e6f742065786973746044820152fd5b801561249c576000190190565b90612ccd82612b1a565b612cda6040519182612875565b8281528092612ceb601f1991612b1a565b0190602036910137565b80518210156129ab5760209160051b010190565b15612d1057565b60405162461bcd60e51b815260206004820152601d60248201527f466c6f77467573696f6e3a20536c69707061676520746f6f20686967680000006044820152606490fd5b6000526002602052612d6a6040600020612b8d565b6101808101518015612d895761095a60e0612d86930151612e4e565b90565b50504290565b60015460081c6001600160a01b03163303612da657565b60405163118cdaa760e01b8152336004820152602490fd5b600260005414612dcf576002600055565b604051633ee5aeb560e01b8152600490fd5b60ff60015416612ded57565b60405163d93c066560e01b8152600490fd5b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815260808101916001600160401b03831182841017611eb757612a3d9260405261308b565b8051603c810290808204603c149015171561249c576020612d8692015190612b51565b9060009180835260049260209160048352604092838320918254612e9481612b1a565b93612ea187519586612875565b81855285528285208590848087015b848410612ff1575050505050825115612fe8579060029184525260e0612ed7848420612b8d565b015151603c810290808204603c1490151715612fd457612ef79042612b71565b92828094815b8451811015612fb65781612f118287612cf5565b51511015612f22575b600101612efd565b95948615612f9c57612f348786612cf5565b51516000198801888111612f8957612f7b60019361095a8b89612f69612f8197612f61612f73988f612cf5565b515190612b71565b9586925b8d612cf5565b510151612b3e565b97612b31565b969050612f1a565b634e487b7160e01b855260118b52602485fd5b612f81612f73612f7b60019361095a8b8987958692612f6d565b5095965094505082159050612fcf57612d869250612b51565b505090565b634e487b7160e01b83526011600452602483fd5b50919450505050565b6001916005918d8c519061300482612823565b8654825285870154848301528d6002880154908301526003870154606083015286015460808201528152019201920191908590612eb0565b908115613084578181811115613075579061305691612b71565b905b6127109182810292818404149015171561249c57612d8691612b51565b61307e91612b71565b90613058565b5050600090565b906000602091828151910182855af115611004576000513d6130de57506001600160a01b0381163b155b6130bc5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156130b556fea2646970667358221220c802a083c982c925697e15ad1a5e56e5ed038cc69f2dacccabcbf93ac34b1e3c64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0xA8 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A2046756E6374696F6E206E6F7420666F756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x63 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204E6F204554482073656E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x16F8DE89 EQ PUSH2 0x2808 JUMPI POP DUP1 PUSH4 0x1833F0CF EQ PUSH2 0x2706 JUMPI DUP1 PUSH4 0x1D834409 EQ PUSH2 0x26E8 JUMPI DUP1 PUSH4 0x1DEF6FFE EQ PUSH2 0x26CB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2661 JUMPI DUP1 PUSH4 0x46560023 EQ PUSH2 0x2616 JUMPI DUP1 PUSH4 0x518479B3 EQ PUSH2 0x187A JUMPI DUP1 PUSH4 0x5778472A EQ PUSH2 0x169F JUMPI DUP1 PUSH4 0x58F85880 EQ PUSH2 0x1681 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x165E JUMPI DUP1 PUSH4 0x5D830DD1 EQ PUSH2 0x1640 JUMPI DUP1 PUSH4 0x5F81A57C EQ PUSH2 0x1622 JUMPI DUP1 PUSH4 0x60C7BAE2 EQ PUSH2 0x15E0 JUMPI DUP1 PUSH4 0x6340D55C EQ PUSH2 0x1572 JUMPI DUP1 PUSH4 0x63C69F08 EQ PUSH2 0x14EB JUMPI DUP1 PUSH4 0x679D86A7 EQ PUSH2 0x14AC JUMPI DUP1 PUSH4 0x6C30AAA2 EQ PUSH2 0x145E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13FD JUMPI DUP1 PUSH4 0x7489EC23 EQ PUSH2 0x121E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x11C5 JUMPI DUP1 PUSH4 0x856652E9 EQ PUSH2 0x116C JUMPI DUP1 PUSH4 0x8CE2EC79 EQ PUSH2 0x105A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x102D JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0xFB0 JUMPI DUP1 PUSH4 0x9755DCA0 EQ PUSH2 0xE19 JUMPI DUP1 PUSH4 0x9C3F1E90 EQ PUSH2 0xCBB JUMPI DUP1 PUSH4 0x9CAC0FB2 EQ PUSH2 0xC4F JUMPI DUP1 PUSH4 0xA3F1C420 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xA6329C7F EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xA89A6F69 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xB2A7F494 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xD2C35CE8 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xD62E5D79 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xDC33597D EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xE5EB8A89 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xE6A73B63 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xEC4EB4F9 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xF9759518 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xFCA98AC6 EQ PUSH2 0x2AF JUMPI PUSH4 0xFFA1AD74 EQ PUSH2 0x28E JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AFD JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x2CD PUSH2 0x28EC JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x334 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x36E PUSH2 0x28EC JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH2 0x3D8 PUSH2 0x3F3 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x2D8F JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x5 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH2 0x447 PUSH1 0x4 CALLDATALOAD PUSH2 0x2D55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x484 PUSH2 0x28EC JUMP JUMPDEST PUSH2 0x48C PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C69642066656520636F6C6C6563746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x544 PUSH2 0x28EC JUMP JUMPDEST PUSH2 0x54C PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C6964206578656375746F7200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH2 0x447 PUSH1 0x4 CALLDATALOAD PUSH2 0x2E71 JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0xA0 SWAP2 PUSH2 0x612 SWAP2 PUSH2 0x2AE1 JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 PUSH1 0x64 PUSH1 0x44 DUP2 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x2AA JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x2AA JUMPI DUP4 DUP6 CALLDATASIZE SWAP3 ADD ADD GT PUSH2 0x2AA JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC01 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x6D2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x11 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBEC JUMPI PUSH2 0xBAB JUMPI PUSH2 0x6FE PUSH2 0x2DBE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 DUP4 CALLDATALOAD ISZERO PUSH2 0xB5D JUMPI PUSH1 0x3 DUP6 ADD SLOAD SWAP3 PUSH1 0xF DUP7 ADD SLOAD SWAP2 PUSH2 0x72C DUP4 DUP7 PUSH2 0x2B71 JUMP JUMPDEST DUP7 CALLDATALOAD GT PUSH2 0xB1C JUMPI PUSH1 0xD DUP8 ADD SLOAD NUMBER LT ISZERO PUSH2 0xADB JUMPI PUSH2 0x753 PUSH2 0x74E PUSH1 0x7 DUP10 ADD PUSH2 0x2AA0 JUMP JUMPDEST PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x10 DUP9 ADD SLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0xAC7 JUMPI JUMPDEST POP POP ISZERO PUSH2 0xA74 JUMPI DUP4 CALLDATALOAD ISZERO ISZERO SWAP1 DUP2 PUSH2 0xA6A JUMPI JUMPDEST POP ISZERO PUSH2 0xA2A JUMPI PUSH2 0x786 PUSH1 0x4 CALLDATALOAD PUSH2 0x2E71 JUMP JUMPDEST SWAP4 DUP5 ISZERO ISZERO SWAP3 DUP4 PUSH2 0xA0B JUMPI JUMPDEST PUSH1 0xA DUP9 ADD SLOAD DUP8 CALLDATALOAD LT SWAP2 DUP3 ISZERO SWAP3 PUSH2 0x9F7 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x9A9 JUMPI POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP4 GAS SWAP3 ISZERO PUSH2 0x9A1 JUMPI PUSH2 0x7D0 SWAP1 DUP5 CALLDATALOAD SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x7DD DUP5 PUSH2 0x2823 JUMP JUMPDEST TIMESTAMP DUP5 MSTORE DUP7 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE DUP5 CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP5 LT ISZERO PUSH2 0x98C JUMPI DUP4 PUSH2 0x814 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2AE1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x977 JUMPI PUSH1 0x80 DUP2 PUSH1 0x4 SWAP3 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x856 DUP4 CALLDATALOAD PUSH1 0xF DUP7 ADD SLOAD PUSH2 0x2B31 JUMP JUMPDEST PUSH1 0xF DUP6 ADD SSTORE TIMESTAMP PUSH1 0x10 DUP6 ADD SSTORE PUSH1 0x12 DUP5 ADD SWAP3 DUP4 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x925 JUMPI DUP2 CALLDATALOAD DUP5 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0xE4096EAA9AA9B8F8E8CA77DF4DFF5052B5D6282C11B6653AFBCA6A5A7574C8DA PUSH1 0xA0 PUSH1 0x4 CALLDATALOAD SWAP3 LOG2 PUSH1 0xF DUP3 ADD SLOAD SWAP2 PUSH1 0x3 DUP2 ADD SLOAD DUP4 LT ISZERO PUSH2 0x8D5 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x11 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0xDE99CE77AC3AE0048F3C53988BC6EE856041365B692310C98F709F2E2A6CFBEA PUSH1 0x60 PUSH1 0x4 CALLDATALOAD SWAP3 LOG2 DUP1 DUP1 DUP1 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x970 PUSH2 0x931 DUP7 PUSH2 0x2B8D JUMP JUMPDEST PUSH2 0x96A PUSH2 0x960 PUSH2 0x94E PUSH2 0x160 PUSH2 0x1C0 DUP6 ADD MLOAD SWAP5 ADD SWAP4 DUP5 MLOAD SWAP1 PUSH2 0x2B3E JUMP JUMPDEST PUSH2 0x95A DUP7 CALLDATALOAD DUP9 CALLDATALOAD PUSH2 0x2B3E JUMP JUMPDEST SWAP1 PUSH2 0x2B31 JUMP JUMPDEST SWAP2 DUP5 CALLDATALOAD SWAP1 MLOAD PUSH2 0x2B31 JUMP JUMPDEST SWAP1 PUSH2 0x2B51 JUMP JUMPDEST DUP5 SSTORE PUSH2 0x875 JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x7D0 JUMP JUMPDEST DUP5 PUSH3 0x697A65 PUSH1 0xE8 SHL PUSH1 0x84 SWAP3 PUSH32 0x466C6F77467573696F6E3A2042656C6F77206D696E696D756D2066696C6C2073 DUP7 PUSH1 0x23 PUSH1 0x40 MLOAD SWAP6 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP8 MSTORE PUSH1 0x20 PUSH1 0x4 DUP9 ADD MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xA01 SWAP3 POP PUSH2 0x2B71 JUMP JUMPDEST DUP6 CALLDATALOAD EQ DUP8 DUP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0xA25 PUSH2 0xA19 DUP7 CALLDATALOAD DUP9 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x9 DUP11 ADD SLOAD LT ISZERO PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 DUP2 DUP8 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C696420707269636500000000000000 DUP2 DUP6 ADD MSTORE REVERT JUMPDEST SWAP1 POP ISZERO ISZERO DUP8 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 DUP2 DUP9 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20546F6F206561726C7920666F72206E6578742065 DUP2 DUP7 ADD MSTORE PUSH8 0x3C32B1BABA34B7B7 PUSH1 0xC1 SHL DUP2 DUP5 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xAD1 SWAP3 POP PUSH2 0x2B31 JUMP JUMPDEST TIMESTAMP LT ISZERO DUP9 DUP1 PUSH2 0x763 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 DUP2 DUP8 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204F72646572206578706972656400000000000000 DUP2 DUP6 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D DUP2 DUP8 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20457863656564732072656D61696E696E67000000 DUP2 DUP6 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 DUP2 DUP7 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C696420696E74657276616C20616D6F DUP2 DUP5 ADD MSTORE PUSH3 0x1D5B9D PUSH1 0xEA SHL DUP2 DUP6 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH32 0x466C6F77467573696F6E3A204F72646572206E6F742061637469766500000000 DUP4 SWAP2 PUSH1 0x1C PUSH1 0x40 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE PUSH1 0x20 PUSH1 0x4 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x84 SWAP3 SWAP2 PUSH32 0x466C6F77467573696F6E3A204E6F7420617574686F72697A6564206578656375 PUSH3 0x3A37B9 PUSH1 0xE9 SHL SWAP3 PUSH1 0x23 PUSH1 0x40 MLOAD SWAP6 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP8 MSTORE PUSH1 0x20 PUSH1 0x4 DUP9 ADD MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xC6B PUSH2 0x2D8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC76 JUMPI PUSH1 0xD SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C6964206D6178206F72646572730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB DUP1 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 PUSH1 0x4 DUP2 ADD PUSH2 0xD0A SWAP1 PUSH2 0x29FB JUMP JUMPDEST SWAP3 PUSH2 0xD17 PUSH1 0x5 DUP4 ADD PUSH2 0x29FB JUMP JUMPDEST SWAP4 PUSH2 0xD24 PUSH1 0x6 DUP5 ADD PUSH2 0x29FB JUMP JUMPDEST SWAP5 PUSH2 0xD31 PUSH1 0x7 DUP6 ADD PUSH2 0x2AA0 JUMP JUMPDEST SWAP6 PUSH1 0xC DUP6 ADD SLOAD PUSH1 0xD DUP7 ADD SLOAD SWAP2 PUSH1 0xE DUP8 ADD SLOAD SWAP4 PUSH1 0xF DUP9 ADD SLOAD SWAP6 PUSH1 0x10 DUP10 ADD SLOAD SWAP8 PUSH1 0x11 DUP11 ADD SLOAD PUSH1 0xFF AND SWAP10 PUSH1 0x12 ADD SLOAD SWAP11 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP2 PUSH2 0x260 SWAP5 DUP6 SWAP5 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD MSTORE DUP13 ADD PUSH2 0xD8B SWAP2 PUSH2 0x2925 JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0xA0 DUP14 ADD MSTORE PUSH2 0xD9C SWAP2 PUSH2 0x2925 JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0xC0 DUP13 ADD MSTORE PUSH2 0xDAD SWAP2 PUSH2 0x2925 JUMP JUMPDEST DUP9 MLOAD PUSH1 0xE0 DUP12 ADD MSTORE PUSH1 0x20 DUP10 ADD MLOAD PUSH2 0x100 DUP12 ADD MSTORE PUSH1 0x40 DUP10 ADD MLOAD PUSH2 0x120 DUP12 ADD MSTORE PUSH1 0x60 DUP10 ADD MLOAD PUSH2 0x140 DUP12 ADD MSTORE PUSH1 0x80 SWAP1 SWAP9 ADD MLOAD ISZERO ISZERO PUSH2 0x160 DUP11 ADD MSTORE PUSH2 0x180 DUP10 ADD MSTORE PUSH2 0x1A0 DUP9 ADD MSTORE PUSH2 0x1C0 DUP8 ADD MSTORE PUSH2 0x1E0 DUP7 ADD MSTORE PUSH2 0x200 DUP6 ADD MSTORE PUSH2 0x220 DUP5 ADD PUSH2 0xE0F SWAP2 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x240 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0xE56 DUP2 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO ISZERO PUSH2 0x2C6B JUMP JUMPDEST PUSH2 0xE5E PUSH2 0x2DBE JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x11 DUP2 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xF9A JUMPI PUSH1 0x1 SUB PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD DUP6 DUP2 ADD SWAP1 DUP8 DUP3 MSTORE DUP7 DUP2 MSTORE PUSH2 0xE9B DUP2 PUSH2 0x285A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0xC DUP5 ADD SLOAD SUB PUSH2 0xF10 JUMPI PUSH1 0x60 SWAP5 SWAP3 PUSH32 0x600FFD9313A629C5ACDCB599E269730B878FF6653F1FC57F573686E2DF43FA13 SWAP7 SWAP5 SWAP3 PUSH1 0x4 PUSH1 0x1 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE ADD SLOAD AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xEF5 DUP2 SLOAD PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C696420736563726574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204F72646572206E6F7420636F6D706C6574656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0xFC9 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xFD5 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 PUSH2 0x1019 JUMPI POP PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 PUSH1 0x1 SLOAD PUSH1 0x8 SHR AND DUP3 DUP3 ISZERO PUSH2 0x1010 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1004 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xFFC JUMP JUMPDEST PUSH2 0x102B SWAP3 SWAP2 PUSH1 0x1 SLOAD PUSH1 0x8 SHR AND SWAP1 PUSH2 0x2DFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x5 PUSH1 0x4 CALLDATALOAD DUP2 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2AA JUMPI PUSH2 0x1086 PUSH1 0x9 SLOAD PUSH2 0x2CC3 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP3 PUSH1 0x8 SLOAD SWAP4 JUMPDEST DUP5 DUP2 LT PUSH2 0x10E0 JUMPI DUP8 DUP8 PUSH2 0x10A4 DUP2 PUSH2 0x2CC3 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x10C1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x10BD DUP7 DUP3 PUSH2 0x2957 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x10CE PUSH1 0x1 SWAP3 DUP5 PUSH2 0x2CF5 JUMP JUMPDEST MLOAD PUSH2 0x10D9 DUP3 DUP8 PUSH2 0x2CF5 JUMP JUMPDEST MSTORE ADD PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 ADD SWAP1 DUP3 DUP3 MSTORE DUP6 DUP2 MSTORE PUSH2 0x10F6 DUP2 PUSH2 0x285A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP7 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 DUP9 SWAP1 DUP3 PUSH2 0x114E JUMPI JUMPDEST POP POP PUSH2 0x112F JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1092 JUMP JUMPDEST DUP8 PUSH2 0x1147 SWAP2 PUSH2 0x1141 PUSH1 0x1 SWAP5 SWAP11 DUP13 PUSH2 0x2CF5 JUMP JUMPDEST MSTORE PUSH2 0x2B7E JUMP JUMPDEST SWAP7 SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x11 ADD SLOAD PUSH1 0xFF AND SWAP2 POP PUSH2 0xF9A JUMPI DUP5 DUP2 LT ISZERO PUSH2 0xF9A JUMPI DUP4 EQ DUP8 DUP12 PUSH2 0x111F JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x1185 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x20 SWAP2 PUSH2 0x11B6 SWAP2 PUSH2 0x2993 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x11DE PUSH2 0x2D8F JUMP JUMPDEST PUSH2 0x11E6 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 PUSH2 0x125B SWAP1 DUP5 AND ISZERO ISZERO PUSH2 0x2C6B JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE DUP3 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER SUB PUSH2 0x13B9 JUMPI PUSH2 0x127C PUSH2 0x2DBE JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x11 DUP2 ADD SWAP1 DUP2 SLOAD SWAP5 PUSH1 0xFF DUP7 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xF9A JUMPI PUSH2 0x136A JUMPI PUSH2 0x12B5 PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xF DUP5 ADD SLOAD SWAP1 PUSH2 0x2B71 JUMP JUMPDEST SWAP6 DUP7 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x12C6 JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST DUP8 SWAP5 PUSH1 0x2 DUP1 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE ADD SLOAD AND DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x1358 JUMPI POP PUSH1 0x0 SWAP1 PUSH2 0x134F JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x1004 JUMPI JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x130F DUP2 SLOAD PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE TIMESTAMP SWAP1 DUP4 ADD MSTORE PUSH32 0xE5511ACCE6FBDF775B76E2921D9F62D7F15BE4FD9D14A6DEB11CCA46A5883F6E PUSH1 0x40 CALLER SWAP4 LOG3 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x8CE JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1365 SWAP3 SWAP2 POP CALLER SWAP1 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204F72646572206E6F742063616E63656C6C61626C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204E6F74206F72646572206F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x1416 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH1 0xFF PUSH2 0x1496 PUSH1 0x20 PUSH2 0x3E0 DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x14CD PUSH2 0x28EC JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x150D PUSH2 0x28EC JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x155B JUMPI PUSH2 0x10BD DUP6 PUSH2 0x154F DUP2 DUP10 SUB DUP3 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2957 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1538 JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x158E PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x64 DUP2 GT PUSH2 0x159B JUMPI PUSH1 0xC SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20466565207261746520746F6F2068696768000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x15F9 PUSH2 0x28EC JUMP JUMPDEST PUSH2 0x1601 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x16BE DUP3 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH1 0x0 DUP2 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 DUP4 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x16F6 DUP2 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP5 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH2 0x120 SWAP1 PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH2 0x140 PUSH1 0x0 DUP2 DUP4 ADD MSTORE PUSH2 0x1870 PUSH2 0x160 PUSH1 0x0 DUP2 DUP6 ADD MSTORE PUSH2 0x180 PUSH1 0x0 DUP2 DUP7 ADD MSTORE PUSH2 0x1A0 SWAP2 PUSH1 0x0 DUP4 DUP8 ADD MSTORE PUSH1 0x0 PUSH2 0x1C0 DUP1 SWAP8 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 DUP10 MSTORE PUSH2 0x1775 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2B8D JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP11 DUP11 DUP13 SWAP12 DUP13 MSTORE DUP8 MLOAD DUP2 DUP14 ADD MSTORE DUP8 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x40 DUP9 ADD MLOAD AND DUP2 DUP13 ADD MSTORE DUP7 ADD MLOAD PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD SWAP8 PUSH2 0x17FC DUP12 PUSH2 0x17E6 PUSH2 0x17CE PUSH2 0x260 SWAP13 DUP14 PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x280 DUP5 ADD SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0xA0 DUP12 ADD MLOAD PUSH1 0x1F NOT SWAP4 PUSH1 0xC0 DUP6 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x2925 JUMP JUMPDEST SWAP1 DUP14 PUSH1 0xE0 PUSH1 0xC0 DUP13 ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x2925 JUMP JUMPDEST SWAP10 PUSH2 0x1839 DUP13 DUP3 PUSH1 0xE0 DUP12 ADD MLOAD SWAP2 ADD SWAP1 PUSH1 0x80 DUP1 SWAP2 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST DUP8 ADD MLOAD DUP6 DUP13 ADD MSTORE DUP7 ADD MLOAD DUP8 DUP12 ADD MSTORE DUP6 ADD MLOAD PUSH2 0x1E0 DUP11 ADD MSTORE DUP5 ADD MLOAD PUSH2 0x200 DUP10 ADD MSTORE DUP4 ADD MLOAD PUSH2 0x220 DUP9 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x240 DUP8 ADD SWAP1 PUSH2 0x294A JUMP JUMPDEST ADD MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x188F PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH2 0x18AE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH2 0x18CE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH2 0x18EE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP1 PUSH1 0xA0 CALLDATASIZE PUSH1 0xA3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1908 DUP3 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD DUP3 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x124 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2AA JUMPI PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1940 PUSH2 0x2DBE JUMP JUMPDEST PUSH2 0x1948 PUSH2 0x2DE1 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x24 CALLDATALOAD LT PUSH2 0x25D1 JUMPI PUSH1 0xFF PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP9 MLOAD PUSH2 0x196A DUP2 DUP4 DUP6 DUP14 ADD PUSH2 0x2902 JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x2580 JUMPI DUP4 MLOAD ISZERO PUSH2 0x253C JUMPI DUP3 MLOAD ISZERO PUSH2 0x24F7 JUMPI PUSH2 0x144 CALLDATALOAD ISZERO PUSH2 0x24B2 JUMPI PUSH1 0x64 NUMBER ADD NUMBER GT PUSH2 0x249C JUMPI PUSH1 0x64 NUMBER ADD PUSH2 0x164 CALLDATALOAD GT ISZERO PUSH2 0x2457 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xD SLOAD GT ISZERO PUSH2 0x2412 JUMPI PUSH1 0x5 DUP3 MLOAD LT PUSH2 0x23CD JUMPI PUSH2 0x5A0 DUP3 MLOAD GT PUSH2 0x2388 JUMPI PUSH1 0x1 PUSH1 0x20 DUP4 ADD MLOAD GT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x14 PUSH1 0x20 DUP4 ADD MLOAD GT PUSH2 0x22F2 JUMPI PUSH2 0x1A00 PUSH2 0x3E8 PUSH1 0x40 DUP5 ADD MLOAD GT ISZERO PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MLOAD ISZERO PUSH2 0x22A3 JUMPI PUSH2 0x2710 PUSH2 0x1A1B PUSH1 0xC SLOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x2B3E JUMP JUMPDEST DIV SWAP4 PUSH2 0x1A29 DUP6 PUSH1 0x24 CALLDATALOAD PUSH2 0x2B71 JUMP JUMPDEST SWAP4 PUSH1 0x8 SLOAD PUSH2 0x1A36 DUP2 PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x1A98 PUSH1 0xA8 PUSH1 0x40 MLOAD DUP1 SWAP4 CALLER PUSH1 0x60 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP9 PUSH1 0x60 SHL AND PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x48 DUP4 ADD MSTORE DUP12 PUSH2 0x1A7C DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x68 DUP8 ADD SWAP2 ADD PUSH2 0x2902 JUMP JUMPDEST DUP3 ADD SWAP1 TIMESTAMP PUSH1 0x68 DUP4 ADD MSTORE PUSH1 0x88 DUP3 ADD MSTORE SUB PUSH1 0x88 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x2875 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x21F0 JUMPI POP PUSH1 0x24 CALLDATALOAD CALLVALUE SUB PUSH2 0x21AB JUMPI DUP1 PUSH2 0x213D JUMPI JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1ACF DUP3 PUSH2 0x283E JUMP JUMPDEST DUP7 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP4 ADD MSTORE DUP6 PUSH1 0x60 DUP4 ADD MSTORE DUP8 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE DUP4 PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x144 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x164 CALLDATALOAD PUSH2 0x120 DUP3 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD MSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1EB7 JUMPI DUP2 SWAP1 PUSH2 0x1BBE PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x20EA JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2078 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x206D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1EB7 JUMPI DUP2 SWAP1 PUSH2 0x1C1B PUSH1 0x5 DUP7 ADD SLOAD PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x201A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1FA8 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1F9D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 DUP4 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1EB7 JUMPI DUP2 SWAP1 PUSH2 0x1C78 PUSH1 0x6 DUP7 ADD SLOAD PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1F4A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1ED8 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1ECD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 DUP4 ADD SSTORE JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x8 DUP5 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x9 DUP5 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA DUP5 ADD SSTORE PUSH1 0x80 PUSH1 0xB DUP5 ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0xC DUP4 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0xD DUP4 ADD SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xE DUP4 ADD SSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH1 0xF DUP4 ADD SSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH1 0x10 DUP4 ADD SSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xF9A JUMPI PUSH1 0x12 SWAP2 PUSH2 0x1C0 SWAP2 PUSH1 0xFF DUP1 NOT PUSH1 0x11 DUP8 ADD SLOAD AND SWAP2 AND OR PUSH1 0x11 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP6 DUP7 SLOAD SWAP7 PUSH1 0x1 PUSH1 0x40 SHL DUP9 LT ISZERO PUSH2 0x1EB7 JUMPI PUSH2 0x1E37 DUP8 SWAP5 PUSH32 0xDF9B2EE7E19A4BED367D9C7CBAE54540A83B4E8A242569D2BAB04741CBB0F442 SWAP5 PUSH2 0x1DAF DUP12 PUSH2 0x1E6C SWAP6 PUSH1 0x1 PUSH1 0x20 SWAP15 ADD DUP2 SSTORE PUSH2 0x2993 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP10 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP12 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1DDB DUP2 SLOAD PUSH2 0x2B7E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1DE8 PUSH1 0x9 SLOAD PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x1DF9 PUSH1 0x24 CALLDATALOAD PUSH1 0xA SLOAD PUSH2 0x2B31 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x1E13 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x120 DUP8 MSTORE PUSH2 0x120 DUP8 ADD SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP6 DUP13 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2925 JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP4 ADD SWAP1 PUSH1 0x80 DUP1 SWAP2 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH2 0x164 CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 PUSH32 0x1BA3FBE5FD9D0A7139D0258BB7B035B16ADB3A67CD7B5DB6BB0B545C71483146 PUSH1 0x40 PUSH2 0x144 CALLDATALOAD SWAP4 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x1C98 JUMP JUMPDEST SWAP3 POP PUSH1 0x6 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1F2F JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1F16 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 DUP4 ADD SSTORE PUSH2 0x1CB0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x1F06 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1EEB JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x6 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1F96 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1F87 JUMPI POP POP PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1F71 JUMP JUMPDEST POP DUP1 PUSH2 0x1F6B JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x1C3B JUMP JUMPDEST SWAP3 POP PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1FFF JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1FE6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 DUP4 ADD SSTORE PUSH2 0x1C53 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x1FD6 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1FBB JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2066 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2057 JUMPI POP POP PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2041 JUMP JUMPDEST POP DUP1 PUSH2 0x203B JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x1BDE JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x20CF JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x20B6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x1BF6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x20A6 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x208B JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2136 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2127 JUMPI POP POP PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2111 JUMP JUMPDEST POP DUP1 PUSH2 0x210B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x21A2 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1004 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 SWAP2 PUSH32 0xCFBA6F0D638F02D61BCA3CAD4C8B0EE671B83BE0D14085BDA2D196BE921BE929 SWAP2 SWAP1 LOG2 DUP8 PUSH2 0x1AC0 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x2156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A2045544820616D6F756E74206D69736D6174636800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2234 PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0x2225 DUP2 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x308B JUMP JUMPDEST DUP1 PUSH2 0x2241 JUMPI JUMPDEST POP POP PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH32 0xCFBA6F0D638F02D61BCA3CAD4C8B0EE671B83BE0D14085BDA2D196BE921BE929 SWAP2 SWAP1 PUSH2 0x2280 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP10 AND PUSH2 0x2DFF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 LOG2 DUP6 DUP9 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C6964206D696E2066696C6C2073697A PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20546F6F206D616E7920696E74657276616C730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204E656564206D756C7469706C6520696E74657276 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616C73 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A2057696E646F7720746F6F206C6172676500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A2057696E646F7720746F6F20736D616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20546F6F206D616E79206F72646572730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A2054696D656F757420746F6F20736F6F6E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C69642048544C432068617368000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C696420726563697069656E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20496E76616C69642074617267657420746F6B656E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20556E737570706F72746564207461726765742063 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3430B4B7 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20416D6F756E7420746F6F20736D616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH2 0x3D8 PUSH2 0x264B SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x5 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH2 0x267A PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x26B9 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x5A0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH2 0x2733 DUP2 PUSH2 0x2B1A JUMP JUMPDEST SWAP1 PUSH2 0x2741 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2875 JUMP JUMPDEST DUP1 DUP3 MSTORE DUP3 DUP3 ADD DUP1 SWAP5 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x27BE JUMPI PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE DUP7 MLOAD DUP2 DUP10 ADD DUP2 SWAP1 MSTORE DUP10 SWAP3 DUP3 ADD SWAP1 DUP10 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2780 JUMPI DUP5 DUP5 SUB DUP6 RETURN JUMPDEST DUP6 MLOAD DUP1 MLOAD DUP6 MSTORE DUP1 DUP4 ADD MLOAD DUP6 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE SWAP5 DUP2 ADD SWAP5 PUSH1 0xA0 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x5 DUP7 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x27D0 DUP2 PUSH2 0x2823 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x2754 JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EB7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EB7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EB7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EB7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2AA JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1EB7 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x28CA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x2875 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2AA JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2AA JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2915 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2905 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x293E DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0xF9A JUMPI MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x297F JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2971 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x29AB JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x29F1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x29DB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x29D0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x2A0E DUP2 PUSH2 0x29C1 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2A7E JUMPI POP PUSH1 0x1 EQ PUSH2 0x2A3F JUMPI JUMPDEST POP POP POP PUSH2 0x2A3D SWAP3 POP SUB DUP4 PUSH2 0x2875 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0x2A66 JUMPI POP POP PUSH2 0x2A3D SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2A2E JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2A4D JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2A3D SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2A2E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2AAD DUP2 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 DUP4 SWAP6 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x29AB JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1EB7 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x249C JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x249C JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2B5B JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x249C JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x249C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2B9A DUP2 PUSH2 0x283E JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH2 0x2BD7 PUSH1 0x4 DUP3 ADD PUSH2 0x29FB JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2BE8 PUSH1 0x5 DUP3 ADD PUSH2 0x29FB JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2BF9 PUSH1 0x6 DUP3 ADD PUSH2 0x29FB JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2C0A PUSH1 0x7 DUP3 ADD PUSH2 0x2AA0 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xD DUP2 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xE DUP2 ADD SLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xF DUP2 ADD SLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0x10 DUP2 ADD SLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x11 DUP3 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xF9A JUMPI PUSH2 0x1C0 SWAP2 PUSH1 0x12 SWAP2 PUSH2 0x1A0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2C72 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A204F7264657220646F6573206E6F74206578697374 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 ISZERO PUSH2 0x249C JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2CCD DUP3 PUSH2 0x2B1A JUMP JUMPDEST PUSH2 0x2CDA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2875 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2CEB PUSH1 0x1F NOT SWAP2 PUSH2 0x2B1A JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x29AB JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2D10 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C6F77467573696F6E3A20536C69707061676520746F6F2068696768000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x2D6A PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2B8D JUMP JUMPDEST PUSH2 0x180 DUP2 ADD MLOAD DUP1 ISZERO PUSH2 0x2D89 JUMPI PUSH2 0x95A PUSH1 0xE0 PUSH2 0x2D86 SWAP4 ADD MLOAD PUSH2 0x2E4E JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2DA6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x2DCF JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0x2DED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP3 DUP5 LT OR PUSH2 0x1EB7 JUMPI PUSH2 0x2A3D SWAP3 PUSH1 0x40 MSTORE PUSH2 0x308B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3C DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3C EQ SWAP1 ISZERO OR ISZERO PUSH2 0x249C JUMPI PUSH1 0x20 PUSH2 0x2D86 SWAP3 ADD MLOAD SWAP1 PUSH2 0x2B51 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x4 SWAP3 PUSH1 0x20 SWAP2 PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E94 DUP2 PUSH2 0x2B1A JUMP JUMPDEST SWAP4 PUSH2 0x2EA1 DUP8 MLOAD SWAP6 DUP7 PUSH2 0x2875 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP6 SWAP1 DUP5 DUP1 DUP8 ADD JUMPDEST DUP5 DUP5 LT PUSH2 0x2FF1 JUMPI POP POP POP POP POP DUP3 MLOAD ISZERO PUSH2 0x2FE8 JUMPI SWAP1 PUSH1 0x2 SWAP2 DUP5 MSTORE MSTORE PUSH1 0xE0 PUSH2 0x2ED7 DUP5 DUP5 KECCAK256 PUSH2 0x2B8D JUMP JUMPDEST ADD MLOAD MLOAD PUSH1 0x3C DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3C EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2FD4 JUMPI PUSH2 0x2EF7 SWAP1 TIMESTAMP PUSH2 0x2B71 JUMP JUMPDEST SWAP3 DUP3 DUP1 SWAP5 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2FB6 JUMPI DUP2 PUSH2 0x2F11 DUP3 DUP8 PUSH2 0x2CF5 JUMP JUMPDEST MLOAD MLOAD LT ISZERO PUSH2 0x2F22 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2EFD JUMP JUMPDEST SWAP6 SWAP5 DUP7 ISZERO PUSH2 0x2F9C JUMPI PUSH2 0x2F34 DUP8 DUP7 PUSH2 0x2CF5 JUMP JUMPDEST MLOAD MLOAD PUSH1 0x0 NOT DUP9 ADD DUP9 DUP2 GT PUSH2 0x2F89 JUMPI PUSH2 0x2F7B PUSH1 0x1 SWAP4 PUSH2 0x95A DUP12 DUP10 PUSH2 0x2F69 PUSH2 0x2F81 SWAP8 PUSH2 0x2F61 PUSH2 0x2F73 SWAP9 DUP16 PUSH2 0x2CF5 JUMP JUMPDEST MLOAD MLOAD SWAP1 PUSH2 0x2B71 JUMP JUMPDEST SWAP6 DUP7 SWAP3 JUMPDEST DUP14 PUSH2 0x2CF5 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x2B3E JUMP JUMPDEST SWAP8 PUSH2 0x2B31 JUMP JUMPDEST SWAP7 SWAP1 POP PUSH2 0x2F1A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP12 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH2 0x2F81 PUSH2 0x2F73 PUSH2 0x2F7B PUSH1 0x1 SWAP4 PUSH2 0x95A DUP12 DUP10 DUP8 SWAP6 DUP7 SWAP3 PUSH2 0x2F6D JUMP JUMPDEST POP SWAP6 SWAP7 POP SWAP5 POP POP DUP3 ISZERO SWAP1 POP PUSH2 0x2FCF JUMPI PUSH2 0x2D86 SWAP3 POP PUSH2 0x2B51 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP2 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH1 0x5 SWAP2 DUP14 DUP13 MLOAD SWAP1 PUSH2 0x3004 DUP3 PUSH2 0x2823 JUMP JUMPDEST DUP7 SLOAD DUP3 MSTORE DUP6 DUP8 ADD SLOAD DUP5 DUP4 ADD MSTORE DUP14 PUSH1 0x2 DUP9 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3084 JUMPI DUP2 DUP2 DUP2 GT ISZERO PUSH2 0x3075 JUMPI SWAP1 PUSH2 0x3056 SWAP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x249C JUMPI PUSH2 0x2D86 SWAP2 PUSH2 0x2B51 JUMP JUMPDEST PUSH2 0x307E SWAP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP1 PUSH2 0x3058 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x1004 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x30DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x30BC JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x30B5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 MUL LOG0 DUP4 0xC9 DUP3 0xC9 0x25 PUSH10 0x7E15AD1A5E56E5ED038C 0xC6 SWAP16 0x2D 0xAC 0xCC 0xAB 0xCB 0xF9 GASPRICE 0xC3 0x4B 0x1E EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"665:21581:13:-:0;;;;;;;;;;-1:-1:-1;665:21581:13;;;;;;;-1:-1:-1;;;22195:40:13;;665:21581;;22195:40;;665:21581;;;;;;;;;;;;;22195:40;665:21581;22095:9;:13;665:21581;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;1457:1;665:21581;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;665:21581:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;665:21581:13;;;;2627:22:0;;2623:91;;3004:6;665:21581:13;;-1:-1:-1;;;;;;665:21581:13;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;3052:40:0;-1:-1:-1;;3052:40:0;665:21581:13;2623:91:0;665:21581:13;;-1:-1:-1;;;2672:31:0;;665:21581:13;;2672:31:0;;665:21581:13;;;2672:31:0;665:21581:13;;;;;;-1:-1:-1;;665:21581:13;;;;-1:-1:-1;;;;;665:21581:13;;:::i;:::-;;;;1936:49;665:21581;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;1191:1;665:21581;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;665:21581:13;;;;;;;;;;;;;;:::i;:::-;20246:15;665:21581;;;;;;;;;;;;-1:-1:-1;;665:21581:13;20273:4;665:21581;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;1077:5;665:21581;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;1317:2;665:21581;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;665:21581:13;20871:29;;665:21581;;-1:-1:-1;;;;;665:21581:13;;20949:30;665:21581;;;20949:30;665:21581;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;2123:27;665:21581;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;665:21581:13;20519:22;;665:21581;;;;;;20585:19;665:21581;;;;;;;-1:-1:-1;;665:21581:13;20617:4;665:21581;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;15795:23;665:21581;;15795:23;:::i;665:21581::-;;;;;;-1:-1:-1;;665:21581:13;;;;;;;;;;;;;;;;;;1757:61;;;;;665:21581;1757:61;;;;:::i;:::-;665:21581;;;1757:61;665:21581;1757:61;;665:21581;1757:61;;;;665:21581;;1757:61;;;665:21581;1757:61;;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3974:10;665:21581;;3954:19;665:21581;;;;;;;;;;;;;;;;;4110:6;665:21581;;;;;;4110:20;665:21581;4102:79;;-1:-1:-1;;;;;665:21581:13;4110:34;;4102:79;:::i;:::-;665:21581;;;;4110:6;665:21581;;;4266:22;665:21581;;;4266:22;665:21581;;;;;;;;;;2466:103:11;;:::i;:::-;665:21581:13;;;;4110:6;665:21581;;;;;;;;10481:18;665:21581;;10576:18;;;665:21581;10597:20;;;;665:21581;10576:41;;;;;:::i;:::-;665:21581;;10558:59;665:21581;;10685:19;;;665:21581;10670:12;:34;665:21581;;;10822:38;665:21581;10843:16;;;665:21581;:::i;:::-;10822:38;:::i;:::-;10893:19;;;665:21581;10893:24;;;:99;;;;;665:21581;;;;;;;;19930:9;;:29;;;;665:21581;;;;;11307:23;665:21581;;11307:23;:::i;:::-;11345:13;;;;11341:207;;;;665:21581;11647:28;;;665:21581;;;11629:46;;;;:123;;;665:21581;;;;;;;;;;;;;;;;;;;12185:9;;12219:65;;;;12235:45;665:21581;;;12235:45;;:::i;:::-;665:21581;;;;;;:::i;:::-;12073:15;665:21581;;;;;12031:265;;665:21581;;;;12031:265;;665:21581;;12031:265;;665:21581;;12031:265;;665:21581;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;12031:265;;665:21581;;;;;;12031:265;;665:21581;4110:6;665:21581;;;;12031:265;;665:21581;10576:18;665:21581;;;12031:265;665:21581;;;;12349:38;665:21581;;10597:20;;;665:21581;12349:38;:::i;:::-;10597:20;;;665:21581;12073:15;10893:19;;;665:21581;12493:18;;;665:21581;;;12493:23;12489:214;12493:18;;;665:21581;;;;12489:214;665:21581;;;;;;;;;;;;;;;12073:15;665:21581;;;;3974:10;665:21581;;;;12728:192;665:21581;;;12728:192;;10597:20;;;665:21581;10576:18;;;;665:21581;12984:42;;;12980:213;;12489:214;665:21581;;;;12980:213;4266:22;13043:12;665:21581;;;;;;;;;;;;;;;;;;;12073:15;665:21581;;;;13099:82;665:21581;;;13099:82;;12980:213;;;;;12489:214;19570:24;665:21581;;;:::i;:::-;19520:32;19419:68;19420:41;19441:20;19420:18;;;665:21581;19441:20;;665:21581;;;19420:41;;:::i;:::-;19466:20;665:21581;;;;19466:20;:::i;:::-;19419:68;;:::i;:::-;665:21581;;;;;19520:32;:::i;:::-;19570:24;;:::i;:::-;665:21581;;12489:214;;665:21581;;;;;;;;;;;;;;;;;;;;;;;;12219:65;;665:21581;12219:65;;665:21581;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;11629:123;11711:41;;;;:::i;:::-;665:21581;;11693:59;11629:123;;;;11341:207;11454:82;11394:45;665:21581;;11394:45;;:::i;:::-;11474:28;;;665:21581;-1:-1:-1;11462:40:13;11454:82;:::i;:::-;11341:207;;665:21581;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;19930:29;19943:16;;;;19930:29;;;665:21581;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;10893:99;10954:38;;;;:::i;:::-;10935:15;:57;;10893:99;;;;665:21581;-1:-1:-1;665:21581:13;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;665:21581:13;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;1500:62:0;;:::i;:::-;21286:16:13;;665:21581;;21348:31;665:21581;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;;1653:43;665:21581;;;;;;;;;;;;;;1653:43;665:21581;1653:43;;665:21581;;1653:43;;;;665:21581;;1653:43;;;;665:21581;1653:43;665:21581;1653:43;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;665:21581;1653:43;;;665:21581;1653:43;;;;665:21581;1653:43;;;;665:21581;1653:43;;;;665:21581;1653:43;;;;665:21581;;;1653:43;;;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;;;;;;4110:6;665:21581;;;;;;;4102:79;665:21581;;;;;4110:20;665:21581;;4110:34;;4102:79;:::i;:::-;2466:103:11;;:::i;:::-;665:21581:13;;;4110:6;665:21581;;;;;14673:12;;;665:21581;;;;;;;;;;;;14673:37;665:21581;;;;14775:24;;;665:21581;;;;14775:24;;;;;;:::i;:::-;665:21581;14765:35;;14804:14;;;665:21581;14765:53;665:21581;;;;;15017:57;665:21581;;;;;;;;;;;;14978:10;665:21581;;;;14963:14;665:21581;;;;;14963:28;665:21581;;14963:28;:::i;:::-;665:21581;;;;;;;15046:10;665:21581;;;;15058:15;665:21581;;;;15017:57;665:21581;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;:::i;:::-;;;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;665:21581:13;;;21645:19;665:21581;;;;;;;;;;;;;;21681:33;;;;;21641:161;21681:33;;;;665:21581;21681:33;665:21581;;;;;;;;;21681:33;;;;;21641:161;21783:6;665:21581;;;;;;;21783:6;;:::i;:::-;665:21581;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16250:26;16264:11;665:21581;16250:26;:::i;:::-;16287:17;665:21581;16432:13;665:21581;;16451:10;665:21581;16427:290;16447:14;;;;;;16789:20;;;;;:::i;:::-;16825:13;665:21581;16840:9;;;;;;665:21581;;;;;;;:::i;:::-;;;;16851:3;16884:9;;665:21581;16884:9;;;:::i;:::-;665:21581;16871:22;;;;:::i;:::-;665:21581;;16825:13;;16463:3;665:21581;;16511:19;;;665:21581;;;;16511:19;;;;;;:::i;:::-;665:21581;16501:30;;665:21581;;;;16550:6;665:21581;;;;;;16550:20;;665:21581;-1:-1:-1;;;;;665:21581:13;16550:34;;;665:21581;;16550:34;:70;;16463:3;16546:160;;;;16463:3;;665:21581;;16432:13;;16546:160;16641:23;16683:7;16641:23;;665:21581;16641:23;;;;:::i;:::-;665:21581;16683:7;:::i;:::-;16546:160;;;;16550:70;16588:22;;665:21581;;;;-1:-1:-1;665:21581:13;;;;;;;;16588:32;;16550:70;;;;665:21581;;;;;;-1:-1:-1;;665:21581:13;;;;;;:::i;:::-;-1:-1:-1;;;;;665:21581:13;;;;;1703:47;665:21581;;;;;;;;;;;1703:47;;;;;665:21581;1703:47;;;;:::i;:::-;665:21581;;;1703:47;665:21581;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;1500:62:0;;:::i;:::-;1315:72:10;;:::i;:::-;2408:4;665:21581:13;;;;;;2408:4:10;665:21581:13;2427:20:10;665:21581:13;;;735:10:9;665:21581:13;;2427:20:10;665:21581:13;;;;;;;;;;;;;;;;;;;;4110:6;665:21581;;;;;;4110:20;665:21581;-1:-1:-1;;;;;665:21581:13;;4102:79;;665:21581;;4110:34;;4102:79;:::i;:::-;665:21581;;;4110:6;665:21581;;;;;;;4434:20;665:21581;;4458:10;4434:34;665:21581;;2466:103:11;;:::i;:::-;665:21581:13;;;4110:6;665:21581;;;;;13546:12;;;665:21581;;;;;;;;;;;;;;;13665:41;:18;;;665:21581;13686:20;;;665:21581;13665:41;;:::i;:::-;13731:16;;;;;;13727:561;;665:21581;;;;13727:561;665:21581;;4110:6;665:21581;;;;;;;;13863:17;665:21581;;13863:31;;13859:219;665:21581;;;13915:42;665:21581;13915:42;;;13859:219;665:21581;4458:10;;;;;;13915:42;;;;;13859:219;4458:10;665:21581;;14148:14;665:21581;;;;;14148:28;665:21581;;14148:28;:::i;:::-;665:21581;;;;;;;14260:15;665:21581;;;;14210:66;665:21581;4458:10;14210:66;;13727:561;;;;;;;;;;13915:42;-1:-1:-1;13915:42:13;;;13859:219;14049:12;4458:10;;;;14049:12;;:::i;:::-;13859:219;;665:21581;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;1500:62:0;;:::i;:::-;3004:6;665:21581:13;;-1:-1:-1;;;;;;665:21581:13;;;;;;;;;-1:-1:-1;;;;;665:21581:13;3052:40:0;665:21581:13;;3052:40:0;665:21581:13;;;;;;;-1:-1:-1;;665:21581:13;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;;;:::i;:::-;;;1825:46;665:21581;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;-1:-1:-1;;;;;665:21581:13;;:::i;:::-;;;;1878:51;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;665:21581:13;;:::i;:::-;;;;15505:10;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;1500:62:0;;:::i;:::-;21102:3:13;21088:17;;665:21581;;21150:28;665:21581;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;21102:3;;665:21581;;;;;;;-1:-1:-1;;665:21581:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;665:21581:13;;;;;20723:19;665:21581;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;2090:26;665:21581;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;2210:37;665:21581;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;1796:7:10;665:21581:13;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;2157:30;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15374:6;665:21581;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7609:188;;665:21581;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;:::i;:::-;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;665:21581:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:11;;:::i;:::-;1315:72:10;;:::i;:::-;1128:4:13;665:21581;;6656:36;665:21581;;;;;;;;;;;;;;;;:::i;:::-;;;6744:15;665:21581;;;;;;;;;;;;;6832:29;665:21581;;;;6917:33;665:21581;;;;7003:22;665:21581;;;7094:12;665:21581;7094:12;665:21581;;;;7094:12;665:21581;;;7078:34;665:21581;;;7202:10;665:21581;;7187:14;665:21581;;;;;;7216:16;665:21581;-1:-1:-1;665:21581:13;;;6744:15;665:21581;;17236:42;665:21581;;1244:4;665:21581;;17330:42;665:21581;;;;;;;17424:29;665:21581;;;1317:2;665:21581;;;;17512:52;665:21581;;17610:76;1128:4;665:21581;;;;17618:34;;17610:76;:::i;:::-;665:21581;;;;17705:22;665:21581;;1077:5;7435:30;7450:15;665:21581;;;7435:30;:::i;:::-;665:21581;;7512:26;665:21581;;;7512:26;:::i;:::-;665:21581;7774:12;665:21581;7774:12;;;:::i;:::-;;665:21581;7609:188;;665:21581;;7202:10;;;665:21581;;;7609:188;;665:21581;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;7744:15;;665:21581;;;;;;;;7609:188;665:21581;7609:188;;;;;;;:::i;:::-;665:21581;;;7609:188;;;7599:199;;;-1:-1:-1;;;;;665:21581:13;;;;;;;7907:9;:25;665:21581;;8038:15;8034:179;;7853:741;;;665:21581;;;;;;:::i;:::-;;;;7202:10;665:21581;8657:602;;665:21581;;;;;;;;;8657:602;;665:21581;8657:602;665:21581;8657:602;;665:21581;8657:602;665:21581;8657:602;;665:21581;8657:602;665:21581;8657:602;;665:21581;8657:602;;;665:21581;8657:602;665:21581;8657:602;;665:21581;;;8657:602;;;665:21581;;;8657:602;;;665:21581;7744:15;665:21581;8657:602;;665:21581;;;8657:602;;665:21581;;;8657:602;;665:21581;;8657:602;;;665:21581;;8657:602;;;665:21581;;;;8639:6;665:21581;;;;;;;;;;;;;;;;;;;8657:602;;665:21581;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;8639:6;665:21581;;;;;;;;;8657:602;;665:21581;;;;;;;;;;8657:602;;665:21581;;;;;;8657:602;;665:21581;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;:::i;:::-;;;;;;7853:741;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8657:602;;665:21581;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;6744:15;665:21581;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6744:15;665:21581;;;;8657:602;;;665:21581;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8657:602;;665:21581;;;7187:14;665:21581;;;;;;;7774:12;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8657:602;;;665:21581;7450:15;665:21581;;;8657:602;;;665:21581;7216:16;665:21581;;;;8657:602;;665:21581;;;;;;8657:602;;665:21581;;;;;;8657:602;;665:21581;;;;;8657:602;;;665:21581;6744:15;665:21581;;;;;;;8657:602;665:21581;;;;;;;;;;;;;;;;8657:602;665:21581;;;;7202:10;665:21581;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;9471:200;665:21581;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;7202:10;665:21581;;7187:14;665:21581;;;;;9355:28;665:21581;;9355:28;:::i;:::-;665:21581;;9394:13;665:21581;;9394:13;:::i;:::-;665:21581;;9418:27;665:21581;;;;9418:27;:::i;:::-;665:21581;;;;;;8657:602;665:21581;;8657:602;665:21581;;;;:::i;:::-;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7202:10;;9471:200;;;;665:21581;;;;;;;;;;;;9697:56;665:21581;;;9697:56;;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;665:21581:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;7609:188;;;;;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6744:15;665:21581;;;;;;;;;;;;;;;;;;6744:15;665:21581;;;;;;;;;;;;;;;;;-1:-1:-1;665:21581:13;;;;;-1:-1:-1;665:21581:13;;;;;;;-1:-1:-1;665:21581:13;;;;;;;6744:15;665:21581;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;7609:188;;;;;665:21581;;;;;;;;;;;;6744:15;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6744:15;665:21581;;;;;;;;;;6744:15;665:21581;;;;;;;;;;;;;;;;;;6744:15;665:21581;;;;;;;;;;;;;;;;;-1:-1:-1;665:21581:13;;;;;-1:-1:-1;665:21581:13;;;;;;;-1:-1:-1;665:21581:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;7609:188;;;;;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6744:15;665:21581;;;;;;;;;;;;;;;;;;6744:15;665:21581;;;;;;;;;;;;;;;;;-1:-1:-1;665:21581:13;;;;;-1:-1:-1;665:21581:13;;;8034:179;665:21581;;;;;;;;;;8082:12;665:21581;;8074:43;8038:15;;8074:43;;8034:179;8074:43;;;;8082:12;665:21581;;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;8141:56;;665:21581;8141:56;8034:179;;;8074:43;;;;;665:21581;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;7853:741;665:21581;1745:53:8;665:21581:13;;;;;;1745:53:8;;;7202:10:13;665:21581;1745:53:8;;665:21581:13;8302:4;665:21581;;;;;;;;;;;1745:53:8;;;;;:::i;:::-;-1:-1:-1;;;;;665:21581:13;;1745:53:8;:::i;:::-;8392:15:13;8388:195;;7853:741;;;;;8388:195;8461:12;665:21581;8511:56;;665:21581;8475:11;;665:21581;;-1:-1:-1;;;;;665:21581:13;;;;;;8475:11;:::i;:::-;8461:12;665:21581;;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;8511:56;8388:195;;;;665:21581;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;:::i;:::-;20380:15;665:21581;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;1500:62:0;;:::i;:::-;1796:7:10;665:21581:13;;;;2140:9:10;2136:62;;665:21581:13;;;1796:7:10;665:21581:13;2674:22:10;665:21581:13;;;735:10:9;665:21581:13;;2674:22:10;665:21581:13;2136:62:10;665:21581:13;;-1:-1:-1;;;2172:15:10;;665:21581:13;;2172:15:10;665:21581:13;;;;;;-1:-1:-1;;665:21581:13;;;;;;;1244:4;665:21581;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;2057:26;665:21581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;2025:25;665:21581;;;;;;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;:::o;:::-;;;7609:188;;665:21581;;;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;7609:188;665:21581;;-1:-1:-1;;665:21581:13;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;665:21581:13;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;665:21581:13;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;665:21581:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;665:21581:13;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;665:21581:13;;-1:-1:-1;665:21581:13;;;-1:-1:-1;665:21581:13;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;665:21581:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;665:21581:13;;;;;;;;-1:-1:-1;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;665:21581:13;;;-1:-1:-1;665:21581:13;;;;;-1:-1:-1;665:21581:13;:::o;:::-;;;;;;-1:-1:-1;;665:21581:13;;;;;;;1128:4;665:21581;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;665:21581:13;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:21581:13;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;7609:188;665:21581;7609:188;;665:21581;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;665:21581:13;;;;;;;;;;;;;;;;;;;;15838:279;-1:-1:-1;665:21581:13;15953:6;665:21581;;;;-1:-1:-1;665:21581:13;;:::i;:::-;15983:19;;;665:21581;15983:24;;15979:52;;16071:38;16092:16;16049:60;16092:16;;;16071:38;:::i;16049:60::-;15838:279;:::o;15979:52::-;16016:15;;;16009:22;:::o;1796:162:0:-;665:21581:13;;;;-1:-1:-1;;;;;665:21581:13;735:10:9;1855:23:0;1851:101;;1796:162::o;1851:101::-;665:21581:13;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;665:21581:13;;;1901:40:0;2575:307:11;1899:1;2702:7;665:21581:13;2702:18:11;2698:86;;1899:1;2702:7;665:21581:13;2575:307:11:o;2698:86::-;665:21581:13;;-1:-1:-1;;;2743:30:11;;;;;1878:128:10;665:21581:13;1796:7:10;665:21581:13;;1939:61:10;;1878:128::o;1939:61::-;665:21581:13;;-1:-1:-1;;;1974:15:10;;;;;1219:160:8;665:21581:13;;-1:-1:-1;;;1328:43:8;;;;-1:-1:-1;;;;;665:21581:13;;;1328:43:8;;;665:21581:13;;;;;;;;;1328:43:8;;;665:21581:13;;;;-1:-1:-1;;;;;665:21581:13;;;;;;;;1328:43:8;665:21581:13;;;1328:43:8;:::i;17785:169:13:-;665:21581;;17915:2;665:21581;;;;;;17915:2;665:21581;;;;;;;17921:25;17891:55;17921:25;;665:21581;17891:55;;:::i;17966:857::-;;-1:-1:-1;665:21581:13;;;;18085:16;665:21581;;;18085:16;665:21581;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;18125:19;18121:33;;665:21581;;;;;;18267:16;665:21581;;;;;:::i;:::-;18267:16;;665:21581;18300:2;665:21581;;;;;;18300:2;665:21581;;;;;;;18248:55;:15;;:55;:::i;:::-;18324:22;;18357:23;18406:13;;18441:3;665:21581;;18421:18;;;;;18465:10;;;;;:::i;:::-;;665:21581;18465:35;;18461:270;;18441:3;665:21581;;18406:13;;18461:270;18538:79;;:5;;;;18568:10;;;;:::i;:::-;;665:21581;-1:-1:-1;;665:21581:13;;;;;;;18636:39;665:21581;18591:12;18650:25;18591:12;;18568:45;18694:21;18591:12;;18650:10;18591:12;;;:::i;:::-;;665:21581;18568:45;;:::i;:::-;18538:79;;;;18650:10;;:::i;:::-;;:16;665:21581;18650:25;:::i;18636:39::-;18694:21;;:::i;:::-;18461:270;;;;;665:21581;-1:-1:-1;;;665:21581:13;;;;;;;;18538:79;18694:21;18650:10;18636:39;665:21581;18538:79;18650:25;18538:79;;;;;;;;18421:18;-1:-1:-1;18421:18:13;;-1:-1:-1;18421:18:13;-1:-1:-1;;18769:15:13;;;-1:-1:-1;18769:15:13;;18787:24;;;;:::i;18769:46::-;;;17966:857;:::o;665:21581::-;-1:-1:-1;;;665:21581:13;;;18085:16;665:21581;;;;18121:33;-1:-1:-1;18146:8:13;;-1:-1:-1;;;;18146:8:13:o;665:21581::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18835:373;;18990:18;;18986:32;;19044:27;;;;;;;19088;;;;:::i;:::-;19044:101;;1077:5;665:21581;;;;;;;;;;;;;;;19163:37;;;:::i;19044:101::-;19118:27;;;:::i;:::-;19044:101;;;18986:32;19010:8;;19007:1;19010:8;:::o;8370:720:8:-;;-1:-1:-1;8507:421:8;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:8;;8942:15;;-1:-1:-1;;;;;;665:21581:13;;8960:26:8;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;665:21581:13;;-1:-1:-1;;;9033:40:8;;-1:-1:-1;;;;;665:21581:13;;;9033:40:8;;;665:21581:13;;;9033:40:8;8942:68;9009:1;8994:16;;8942:68;"},"gasEstimates":{"creation":{"codeDepositCost":"2514600","executionCost":"infinite","totalCost":"infinite"},"external":{"":"1147","BASIS_POINTS()":"925","MAX_EXECUTION_INTERVALS()":"881","MAX_SLIPPAGE()":"1047","MAX_WINDOW_MINUTES()":"221","MIN_EXECUTION_AMOUNT()":"1069","MIN_WINDOW_MINUTES()":"969","VERSION()":"1076","addAuthorizedExecutor(address)":"27360","addSupportedChain(string)":"infinite","authorizedExecutors(address)":"2751","cancelOrder(bytes32)":"infinite","claimHTLC(bytes32,bytes32)":"104322","createTWAPOrder(address,uint256,string,string,string,(uint256,uint256,uint256,uint256,bool),bytes32,uint256)":"infinite","emergencyWithdraw(address,uint256)":"infinite","executeTWAPInterval(bytes32,uint256,uint256,bytes)":"infinite","executionHistory(bytes32,uint256)":"15807","feeCollector()":"2964","getCurrentTWAPPrice(bytes32)":"infinite","getExecutionHistory(bytes32)":"infinite","getNextExecutionTime(bytes32)":"infinite","getOrder(bytes32)":"infinite","getOrdersByStatus(uint8)":"infinite","getUserOrders(address)":"infinite","maxOrdersPerUser()":"2478","orderNonce()":"2250","orders(bytes32)":"infinite","owner()":"2775","pause()":"30117","paused()":"2468","protocolFeeRate()":"2434","removeAuthorizedExecutor(address)":"26939","removeSupportedChain(string)":"infinite","renounceOwnership()":"28449","supportedChains(string)":"infinite","totalOrders()":"2302","totalVolume()":"2500","transferOwnership(address)":"29064","unpause()":"27660","updateFeeCollector(address)":"27353","updateMaxOrdersPerUser(uint256)":"25000","updateProtocolFeeRate(uint256)":"24717","userOrderCount(address)":"3245","userOrders(address,uint256)":"7222"},"internal":{"_calculateSlippage(uint256,uint256)":"252","_calculateTWAP(bytes32)":"infinite","_calculateWeightedAveragePrice(struct IFlowFusionBridge.TWAPOrder memory,uint256,uint256)":"infinite","_getIntervalDuration(struct IFlowFusionBridge.TWAPConfig memory)":"infinite","_validateTWAPConfig(struct IFlowFusionBridge.TWAPConfig memory)":"infinite","_verifyPrice(uint256,bytes calldata)":"infinite"}},"methodIdentifiers":{"BASIS_POINTS()":"e1f1c4a7","MAX_EXECUTION_INTERVALS()":"d62e5d79","MAX_SLIPPAGE()":"f9759518","MAX_WINDOW_MINUTES()":"1def6ffe","MIN_EXECUTION_AMOUNT()":"fca98ac6","MIN_WINDOW_MINUTES()":"e6a73b63","VERSION()":"ffa1ad74","addAuthorizedExecutor(address)":"b2a7f494","addSupportedChain(string)":"e5eb8a89","authorizedExecutors(address)":"679d86a7","cancelOrder(bytes32)":"7489ec23","claimHTLC(bytes32,bytes32)":"9755dca0","createTWAPOrder(address,uint256,string,string,string,(uint256,uint256,uint256,uint256,bool),bytes32,uint256)":"518479b3","emergencyWithdraw(address,uint256)":"95ccea67","executeTWAPInterval(bytes32,uint256,uint256,bytes)":"a3f1c420","executionHistory(bytes32,uint256)":"a6329c7f","feeCollector()":"c415b95c","getCurrentTWAPPrice(bytes32)":"a89a6f69","getExecutionHistory(bytes32)":"1833f0cf","getNextExecutionTime(bytes32)":"dc33597d","getOrder(bytes32)":"5778472a","getOrdersByStatus(uint8)":"8ce2ec79","getUserOrders(address)":"63c69f08","maxOrdersPerUser()":"5d830dd1","orderNonce()":"16f8de89","orders(bytes32)":"9c3f1e90","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","protocolFeeRate()":"58f85880","removeAuthorizedExecutor(address)":"60c7bae2","removeSupportedChain(string)":"46560023","renounceOwnership()":"715018a6","supportedChains(string)":"6c30aaa2","totalOrders()":"1d834409","totalVolume()":"5f81a57c","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","updateFeeCollector(address)":"d2c35ce8","updateMaxOrdersPerUser(uint256)":"9cac0fb2","updateProtocolFeeRate(uint256)":"6340d55c","userOrderCount(address)":"ec4eb4f9","userOrders(address,uint256)":"856652e9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFeeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedAt\",\"type\":\"uint256\"}],\"name\":\"HTLCClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"HTLCClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"htlcHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeoutHeight\",\"type\":\"uint256\"}],\"name\":\"HTLCCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cancelledAt\",\"type\":\"uint256\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalExecuted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completionTime\",\"type\":\"uint256\"}],\"name\":\"OrderCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalExecuted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"}],\"name\":\"OrderCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"targetChain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"targetToken\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowMinutes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionIntervals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFillSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enableMEVProtection\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IFlowFusionBridge.TWAPConfig\",\"name\":\"twapConfig\",\"type\":\"tuple\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"name\":\"ProtocolFeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"intervalNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"TWAPExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"intervalNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TWAPExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_EXECUTION_INTERVALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SLIPPAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WINDOW_MINUTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_EXECUTION_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WINDOW_MINUTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"addAuthorizedExecutor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainId\",\"type\":\"string\"}],\"name\":\"addSupportedChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedExecutors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"claimHTLC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"targetChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"targetToken\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"targetRecipient\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowMinutes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionIntervals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFillSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enableMEVProtection\",\"type\":\"bool\"}],\"internalType\":\"struct IFlowFusionBridge.TWAPConfig\",\"name\":\"twapConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"htlcHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timeoutHeight\",\"type\":\"uint256\"}],\"name\":\"createTWAPOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"intervalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"priceProof\",\"type\":\"bytes\"}],\"name\":\"executeTWAPInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"executionHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getCurrentTWAPPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getExecutionHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct IFlowFusionBridge.ExecutionRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getNextExecutionTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"targetChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"targetToken\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"targetRecipient\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowMinutes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionIntervals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFillSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enableMEVProtection\",\"type\":\"bool\"}],\"internalType\":\"struct IFlowFusionBridge.TWAPConfig\",\"name\":\"twapConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"htlcHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timeoutHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastExecution\",\"type\":\"uint256\"},{\"internalType\":\"enum IFlowFusionBridge.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IFlowFusionBridge.TWAPOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFlowFusionBridge.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"getOrdersByStatus\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserOrders\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxOrdersPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"targetChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"targetToken\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"targetRecipient\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowMinutes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionIntervals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFillSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enableMEVProtection\",\"type\":\"bool\"}],\"internalType\":\"struct IFlowFusionBridge.TWAPConfig\",\"name\":\"twapConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"htlcHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timeoutHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastExecution\",\"type\":\"uint256\"},{\"internalType\":\"enum IFlowFusionBridge.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"removeAuthorizedExecutor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainId\",\"type\":\"string\"}],\"name\":\"removeSupportedChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"supportedChains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"updateFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxOrders\",\"type\":\"uint256\"}],\"name\":\"updateMaxOrdersPerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeeRate\",\"type\":\"uint256\"}],\"name\":\"updateProtocolFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userOrderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userOrders\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"FlowFusion Team\",\"details\":\"Handles order creation, TWAP execution, and cross-chain coordination\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"cancelOrder(bytes32)\":{\"params\":{\"orderId\":\"Order to cancel\"}},\"claimHTLC(bytes32,bytes32)\":{\"params\":{\"orderId\":\"Order to claim\",\"secret\":\"Secret to unlock HTLC\"}},\"createTWAPOrder(address,uint256,string,string,string,(uint256,uint256,uint256,uint256,bool),bytes32,uint256)\":{\"params\":{\"htlcHash\":\"Hash for HTLC mechanism\",\"sourceAmount\":\"Amount of source tokens\",\"sourceToken\":\"Address of source token (address(0) for ETH)\",\"targetChain\":\"Target blockchain identifier\",\"targetRecipient\":\"Recipient address on target chain\",\"targetToken\":\"Target token identifier\",\"timeoutHeight\":\"Block height timeout\",\"twapConfig\":\"TWAP execution configuration\"},\"returns\":{\"orderId\":\"Unique order identifier\"}},\"executeTWAPInterval(bytes32,uint256,uint256,bytes)\":{\"params\":{\"executionPrice\":\"Price for this execution\",\"intervalAmount\":\"Amount to execute in this interval\",\"orderId\":\"Order to execute\",\"priceProof\":\"Proof of price validity (for oracle verification)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"FlowFusion Bridge\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelOrder(bytes32)\":{\"notice\":\"Cancel an order and refund remaining tokens\"},\"claimHTLC(bytes32,bytes32)\":{\"notice\":\"Claim HTLC with secret to complete cross-chain swap\"},\"createTWAPOrder(address,uint256,string,string,string,(uint256,uint256,uint256,uint256,bool),bytes32,uint256)\":{\"notice\":\"Create a new TWAP order for cross-chain execution\"},\"executeTWAPInterval(bytes32,uint256,uint256,bytes)\":{\"notice\":\"Execute a TWAP interval for an order\"}},\"notice\":\"Multi-chain TWAP bridge for professional trading with MEV protection\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FlowFusionBridge.sol\":\"FlowFusionBridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/FlowFusionBridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"./libraries/TWAPMath.sol\\\";\\r\\nimport \\\"./interfaces/IFlowFusionBridge.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title FlowFusion Bridge\\r\\n * @notice Multi-chain TWAP bridge for professional trading with MEV protection\\r\\n * @dev Handles order creation, TWAP execution, and cross-chain coordination\\r\\n * @author FlowFusion Team\\r\\n */\\r\\ncontract FlowFusionBridge is \\r\\n    IFlowFusionBridge, \\r\\n    ReentrancyGuard, \\r\\n    Pausable, \\r\\n    Ownable \\r\\n{\\r\\n    using SafeERC20 for IERC20;\\r\\n    using TWAPMath for uint256;\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                CONSTANTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    uint256 public constant BASIS_POINTS = 10000;\\r\\n    uint256 public constant MAX_SLIPPAGE = 1000; // 10%\\r\\n    uint256 public constant MIN_WINDOW_MINUTES = 5;\\r\\n    uint256 public constant MAX_WINDOW_MINUTES = 1440; // 24 hours\\r\\n    uint256 public constant MAX_EXECUTION_INTERVALS = 20;\\r\\n    uint256 public constant MIN_EXECUTION_AMOUNT = 1000; // Minimum wei to prevent dust attacks\\r\\n    uint256 public constant VERSION = 1;\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                 STATE\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    mapping(bytes32 => TWAPOrder) public orders;\\r\\n    mapping(address => bytes32[]) public userOrders;\\r\\n    mapping(bytes32 => ExecutionRecord[]) public executionHistory;\\r\\n    mapping(string => bool) public supportedChains;\\r\\n    mapping(address => bool) public authorizedExecutors;\\r\\n    mapping(address => uint256) public userOrderCount; // Track user order counts\\r\\n    \\r\\n    uint256 public orderNonce;\\r\\n    uint256 public totalOrders;\\r\\n    uint256 public totalVolume;\\r\\n    address public feeCollector;\\r\\n    uint256 public protocolFeeRate; // basis points\\r\\n    uint256 public maxOrdersPerUser = 100; // Prevent spam\\r\\n    \\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                EVENTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /* event OrderCreated(\\r\\n        bytes32 indexed orderId,\\r\\n        address indexed user,\\r\\n        string targetChain,\\r\\n        address sourceToken,\\r\\n        uint256 sourceAmount,\\r\\n        string targetToken,\\r\\n        TWAPConfig twapConfig\\r\\n    ); */\\r\\n\\r\\n    event TWAPExecution(\\r\\n        bytes32 indexed orderId,\\r\\n        uint256 intervalNumber,\\r\\n        uint256 executedAmount,\\r\\n        uint256 averagePrice,\\r\\n        uint256 timestamp,\\r\\n        address executor\\r\\n    );\\r\\n\\r\\n    event OrderCompleted(\\r\\n        bytes32 indexed orderId,\\r\\n        uint256 totalExecuted,\\r\\n        uint256 averagePrice,\\r\\n        uint256 completionTime\\r\\n    );\\r\\n\\r\\n    event OrderCancelled(\\r\\n        bytes32 indexed orderId,\\r\\n        address indexed user,\\r\\n        uint256 refundAmount,\\r\\n        uint256 cancelledAt\\r\\n    );\\r\\n\\r\\n    /* event HTLCCreated(\\r\\n        bytes32 indexed orderId,\\r\\n        bytes32 indexed htlcHash,\\r\\n        uint256 amount,\\r\\n        uint256 timeoutHeight\\r\\n    ); */\\r\\n\\r\\n    event HTLCClaimed(\\r\\n        bytes32 indexed orderId,\\r\\n        bytes32 secret,\\r\\n        address claimer,\\r\\n        uint256 claimedAt\\r\\n    );\\r\\n\\r\\n    event ProtocolFeeCollected(\\r\\n        bytes32 indexed orderId,\\r\\n        uint256 feeAmount,\\r\\n        address feeCollector\\r\\n    );\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                               MODIFIERS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    modifier onlyAuthorizedExecutor() {\\r\\n        require(authorizedExecutors[msg.sender], \\\"FlowFusion: Not authorized executor\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier orderExists(bytes32 orderId) {\\r\\n        require(orders[orderId].user != address(0), \\\"FlowFusion: Order does not exist\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier orderActive(bytes32 orderId) {\\r\\n        require(orders[orderId].status == OrderStatus.Executing, \\\"FlowFusion: Order not active\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyOrderOwner(bytes32 orderId) {\\r\\n        require(orders[orderId].user == msg.sender, \\\"FlowFusion: Not order owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                              CONSTRUCTOR\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    constructor(\\r\\n        address _feeCollector,\\r\\n        uint256 _protocolFeeRate\\r\\n    ) Ownable(msg.sender) {\\r\\n        require(_feeCollector != address(0), \\\"FlowFusion: Invalid fee collector\\\");\\r\\n        require(_protocolFeeRate <= 100, \\\"FlowFusion: Fee rate too high\\\"); // Max 1%\\r\\n        \\r\\n        feeCollector = _feeCollector;\\r\\n        protocolFeeRate = _protocolFeeRate;\\r\\n        \\r\\n        // Initialize supported chains\\r\\n        supportedChains[\\\"cosmos\\\"] = true;\\r\\n        supportedChains[\\\"stellar\\\"] = true;\\r\\n        supportedChains[\\\"bitcoin\\\"] = true;\\r\\n        supportedChains[\\\"ethereum\\\"] = true;\\r\\n        supportedChains[\\\"polygon\\\"] = true;\\r\\n        supportedChains[\\\"arbitrum\\\"] = true;\\r\\n        supportedChains[\\\"optimism\\\"] = true;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                            ORDER MANAGEMENT\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Create a new TWAP order for cross-chain execution\\r\\n     * @param sourceToken Address of source token (address(0) for ETH)\\r\\n     * @param sourceAmount Amount of source tokens\\r\\n     * @param targetChain Target blockchain identifier\\r\\n     * @param targetToken Target token identifier\\r\\n     * @param targetRecipient Recipient address on target chain\\r\\n     * @param twapConfig TWAP execution configuration\\r\\n     * @param htlcHash Hash for HTLC mechanism\\r\\n     * @param timeoutHeight Block height timeout\\r\\n     * @return orderId Unique order identifier\\r\\n     */\\r\\n    function createTWAPOrder(\\r\\n        address sourceToken,\\r\\n        uint256 sourceAmount,\\r\\n        string memory targetChain,\\r\\n        string memory targetToken,\\r\\n        string memory targetRecipient,\\r\\n        TWAPConfig memory twapConfig,\\r\\n        bytes32 htlcHash,\\r\\n        uint256 timeoutHeight\\r\\n    ) external payable nonReentrant whenNotPaused returns (bytes32 orderId) {\\r\\n        // Validate inputs\\r\\n        require(sourceAmount >= MIN_EXECUTION_AMOUNT, \\\"FlowFusion: Amount too small\\\");\\r\\n        require(supportedChains[targetChain], \\\"FlowFusion: Unsupported target chain\\\");\\r\\n        require(bytes(targetToken).length > 0, \\\"FlowFusion: Invalid target token\\\");\\r\\n        require(bytes(targetRecipient).length > 0, \\\"FlowFusion: Invalid recipient\\\");\\r\\n        require(htlcHash != bytes32(0), \\\"FlowFusion: Invalid HTLC hash\\\");\\r\\n        require(timeoutHeight > block.number + 100, \\\"FlowFusion: Timeout too soon\\\"); // At least 100 blocks\\r\\n        require(userOrderCount[msg.sender] < maxOrdersPerUser, \\\"FlowFusion: Too many orders\\\");\\r\\n        \\r\\n        // Validate TWAP configuration\\r\\n        _validateTWAPConfig(twapConfig);\\r\\n        \\r\\n        // Calculate protocol fee\\r\\n        uint256 protocolFee = (sourceAmount * protocolFeeRate) / BASIS_POINTS;\\r\\n        uint256 netAmount = sourceAmount - protocolFee;\\r\\n        \\r\\n        // Generate order ID\\r\\n        orderId = keccak256(abi.encodePacked(\\r\\n            msg.sender,\\r\\n            sourceToken,\\r\\n            sourceAmount,\\r\\n            targetChain,\\r\\n            block.timestamp,\\r\\n            orderNonce++\\r\\n        ));\\r\\n        \\r\\n        // Handle token transfer\\r\\n        if (sourceToken == address(0)) {\\r\\n            require(msg.value == sourceAmount, \\\"FlowFusion: ETH amount mismatch\\\");\\r\\n            // Send protocol fee to fee collector\\r\\n            if (protocolFee > 0) {\\r\\n                payable(feeCollector).transfer(protocolFee);\\r\\n                emit ProtocolFeeCollected(orderId, protocolFee, feeCollector);\\r\\n            }\\r\\n        } else {\\r\\n            IERC20(sourceToken).safeTransferFrom(msg.sender, address(this), sourceAmount);\\r\\n            // Send protocol fee to fee collector\\r\\n            if (protocolFee > 0) {\\r\\n                IERC20(sourceToken).safeTransfer(feeCollector, protocolFee);\\r\\n                emit ProtocolFeeCollected(orderId, protocolFee, feeCollector);\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        // Create order\\r\\n        orders[orderId] = TWAPOrder({\\r\\n            id: orderId,\\r\\n            user: msg.sender,\\r\\n            sourceToken: sourceToken,\\r\\n            sourceAmount: netAmount, // Store net amount after fee\\r\\n            targetChain: targetChain,\\r\\n            targetToken: targetToken,\\r\\n            targetRecipient: targetRecipient,\\r\\n            twapConfig: twapConfig,\\r\\n            htlcHash: htlcHash,\\r\\n            timeoutHeight: timeoutHeight,\\r\\n            createdAt: block.timestamp,\\r\\n            executedAmount: 0,\\r\\n            lastExecution: 0,\\r\\n            status: OrderStatus.Executing,\\r\\n            averagePrice: 0\\r\\n        });\\r\\n        \\r\\n        // Update mappings\\r\\n        userOrders[msg.sender].push(orderId);\\r\\n        userOrderCount[msg.sender]++;\\r\\n        totalOrders++;\\r\\n        totalVolume += sourceAmount;\\r\\n        \\r\\n        emit OrderCreated(\\r\\n            orderId,\\r\\n            msg.sender,\\r\\n            targetChain,\\r\\n            sourceToken,\\r\\n            sourceAmount,\\r\\n            targetToken,\\r\\n            twapConfig\\r\\n        );\\r\\n        \\r\\n        emit HTLCCreated(orderId, htlcHash, netAmount, timeoutHeight);\\r\\n        \\r\\n        return orderId;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Execute a TWAP interval for an order\\r\\n     * @param orderId Order to execute\\r\\n     * @param intervalAmount Amount to execute in this interval\\r\\n     * @param executionPrice Price for this execution\\r\\n     * @param priceProof Proof of price validity (for oracle verification)\\r\\n     */\\r\\n    function executeTWAPInterval(\\r\\n        bytes32 orderId,\\r\\n        uint256 intervalAmount,\\r\\n        uint256 executionPrice,\\r\\n        bytes calldata priceProof\\r\\n    ) external onlyAuthorizedExecutor orderExists(orderId) orderActive(orderId) nonReentrant {\\r\\n        TWAPOrder storage order = orders[orderId];\\r\\n        \\r\\n        // Validate execution timing\\r\\n        require(intervalAmount > 0, \\\"FlowFusion: Invalid interval amount\\\");\\r\\n        require(intervalAmount <= order.sourceAmount - order.executedAmount, \\\"FlowFusion: Exceeds remaining\\\");\\r\\n        require(block.number < order.timeoutHeight, \\\"FlowFusion: Order expired\\\");\\r\\n        \\r\\n        // Check minimum interval time\\r\\n        uint256 intervalDuration = _getIntervalDuration(order.twapConfig);\\r\\n        require(\\r\\n            order.lastExecution == 0 || \\r\\n            block.timestamp >= order.lastExecution + intervalDuration,\\r\\n            \\\"FlowFusion: Too early for next execution\\\"\\r\\n        );\\r\\n        \\r\\n        // Verify price (implement oracle price verification)\\r\\n        require(_verifyPrice(executionPrice, priceProof), \\\"FlowFusion: Invalid price\\\");\\r\\n        \\r\\n        // Calculate and validate slippage\\r\\n        uint256 twapPrice = _calculateTWAP(orderId);\\r\\n        if (twapPrice > 0) {\\r\\n            uint256 slippage = _calculateSlippage(twapPrice, executionPrice);\\r\\n            require(slippage <= order.twapConfig.maxSlippage, \\\"FlowFusion: Slippage too high\\\");\\r\\n        }\\r\\n        \\r\\n        // Validate minimum fill size\\r\\n        require(\\r\\n            intervalAmount >= order.twapConfig.minFillSize || \\r\\n            intervalAmount == order.sourceAmount - order.executedAmount, // Allow final small amount\\r\\n            \\\"FlowFusion: Below minimum fill size\\\"\\r\\n        );\\r\\n        \\r\\n        // Execute interval\\r\\n        uint256 intervalNumber = executionHistory[orderId].length;\\r\\n        \\r\\n        // Record execution\\r\\n        executionHistory[orderId].push(ExecutionRecord({\\r\\n            timestamp: block.timestamp,\\r\\n            amount: intervalAmount,\\r\\n            price: executionPrice,\\r\\n            gasUsed: gasleft(),\\r\\n            slippage: twapPrice > 0 ? _calculateSlippage(twapPrice, executionPrice) : 0\\r\\n        }));\\r\\n        \\r\\n        // Update order state\\r\\n        order.executedAmount += intervalAmount;\\r\\n        order.lastExecution = block.timestamp;\\r\\n        \\r\\n        // Update average price\\r\\n        if (order.averagePrice == 0) {\\r\\n            order.averagePrice = executionPrice;\\r\\n        } else {\\r\\n            order.averagePrice = _calculateWeightedAveragePrice(order, executionPrice, intervalAmount);\\r\\n        }\\r\\n        \\r\\n        emit TWAPExecution(\\r\\n            orderId, \\r\\n            intervalNumber, \\r\\n            intervalAmount, \\r\\n            executionPrice, \\r\\n            block.timestamp,\\r\\n            msg.sender\\r\\n        );\\r\\n        \\r\\n        // Check if order is complete\\r\\n        if (order.executedAmount >= order.sourceAmount) {\\r\\n            order.status = OrderStatus.Completed;\\r\\n            emit OrderCompleted(orderId, order.executedAmount, order.averagePrice, block.timestamp);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Cancel an order and refund remaining tokens\\r\\n     * @param orderId Order to cancel\\r\\n     */\\r\\n    function cancelOrder(bytes32 orderId) \\r\\n        external \\r\\n        orderExists(orderId) \\r\\n        onlyOrderOwner(orderId)\\r\\n        nonReentrant \\r\\n    {\\r\\n        TWAPOrder storage order = orders[orderId];\\r\\n        require(order.status == OrderStatus.Executing, \\\"FlowFusion: Order not cancellable\\\");\\r\\n        \\r\\n        uint256 refundAmount = order.sourceAmount - order.executedAmount;\\r\\n        \\r\\n        if (refundAmount > 0) {\\r\\n            order.status = OrderStatus.Cancelled;\\r\\n            \\r\\n            // Refund tokens\\r\\n            if (order.sourceToken == address(0)) {\\r\\n                payable(msg.sender).transfer(refundAmount);\\r\\n            } else {\\r\\n                IERC20(order.sourceToken).safeTransfer(msg.sender, refundAmount);\\r\\n            }\\r\\n            \\r\\n            // Decrease user order count\\r\\n            userOrderCount[msg.sender]--;\\r\\n            \\r\\n            emit OrderCancelled(orderId, msg.sender, refundAmount, block.timestamp);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Claim HTLC with secret to complete cross-chain swap\\r\\n     * @param orderId Order to claim\\r\\n     * @param secret Secret to unlock HTLC\\r\\n     */\\r\\n    function claimHTLC(bytes32 orderId, bytes32 secret) \\r\\n        external \\r\\n        orderExists(orderId) \\r\\n        nonReentrant \\r\\n    {\\r\\n        TWAPOrder storage order = orders[orderId];\\r\\n        require(order.status == OrderStatus.Completed, \\\"FlowFusion: Order not completed\\\");\\r\\n        require(keccak256(abi.encodePacked(secret)) == order.htlcHash, \\\"FlowFusion: Invalid secret\\\");\\r\\n        \\r\\n        order.status = OrderStatus.Claimed;\\r\\n        \\r\\n        // Decrease user order count\\r\\n        userOrderCount[order.user]--;\\r\\n        \\r\\n        emit HTLCClaimed(orderId, secret, msg.sender, block.timestamp);\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                            VIEW FUNCTIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    function getOrder(bytes32 orderId) external view returns (TWAPOrder memory) {\\r\\n        return orders[orderId];\\r\\n    }\\r\\n    \\r\\n    function getUserOrders(address user) external view returns (bytes32[] memory) {\\r\\n        return userOrders[user];\\r\\n    }\\r\\n    \\r\\n    function getExecutionHistory(bytes32 orderId) external view returns (ExecutionRecord[] memory) {\\r\\n        return executionHistory[orderId];\\r\\n    }\\r\\n    \\r\\n    function getCurrentTWAPPrice(bytes32 orderId) external view returns (uint256) {\\r\\n        return _calculateTWAP(orderId);\\r\\n    }\\r\\n    \\r\\n    function getNextExecutionTime(bytes32 orderId) external view returns (uint256) {\\r\\n        TWAPOrder memory order = orders[orderId];\\r\\n        if (order.lastExecution == 0) return block.timestamp;\\r\\n        return order.lastExecution + _getIntervalDuration(order.twapConfig);\\r\\n    }\\r\\n\\r\\n    function getOrdersByStatus(OrderStatus status) external view returns (bytes32[] memory) {\\r\\n        bytes32[] memory result = new bytes32[](totalOrders);\\r\\n        uint256 count = 0;\\r\\n        \\r\\n        // Note: This is inefficient for large datasets. Consider using events or off-chain indexing\\r\\n        for (uint256 i = 0; i < orderNonce; i++) {\\r\\n            bytes32 orderId = keccak256(abi.encodePacked(i));\\r\\n            if (orders[orderId].user != address(0) && orders[orderId].status == status) {\\r\\n                result[count] = orderId;\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        // Resize array\\r\\n        bytes32[] memory trimmed = new bytes32[](count);\\r\\n        for (uint256 i = 0; i < count; i++) {\\r\\n            trimmed[i] = result[i];\\r\\n        }\\r\\n        \\r\\n        return trimmed;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                           INTERNAL FUNCTIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    function _validateTWAPConfig(TWAPConfig memory config) internal pure {\\r\\n        require(config.windowMinutes >= MIN_WINDOW_MINUTES, \\\"FlowFusion: Window too small\\\");\\r\\n        require(config.windowMinutes <= MAX_WINDOW_MINUTES, \\\"FlowFusion: Window too large\\\");\\r\\n        require(config.executionIntervals > 1, \\\"FlowFusion: Need multiple intervals\\\");\\r\\n        require(config.executionIntervals <= MAX_EXECUTION_INTERVALS, \\\"FlowFusion: Too many intervals\\\");\\r\\n        require(config.maxSlippage <= MAX_SLIPPAGE, \\\"FlowFusion: Slippage too high\\\");\\r\\n        require(config.minFillSize > 0, \\\"FlowFusion: Invalid min fill size\\\");\\r\\n    }\\r\\n    \\r\\n    function _getIntervalDuration(TWAPConfig memory config) internal pure returns (uint256) {\\r\\n        return (config.windowMinutes * 60) / config.executionIntervals;\\r\\n    }\\r\\n    \\r\\n    function _calculateTWAP(bytes32 orderId) internal view returns (uint256) {\\r\\n        ExecutionRecord[] memory history = executionHistory[orderId];\\r\\n        if (history.length == 0) return 0;\\r\\n        \\r\\n        TWAPOrder memory order = orders[orderId];\\r\\n        uint256 windowStart = block.timestamp - (order.twapConfig.windowMinutes * 60);\\r\\n        \\r\\n        uint256 totalValue = 0;\\r\\n        uint256 totalWeight = 0;\\r\\n        \\r\\n        for (uint256 i = 0; i < history.length; i++) {\\r\\n            if (history[i].timestamp >= windowStart) {\\r\\n                uint256 weight = i > 0 ? \\r\\n                    history[i].timestamp - history[i-1].timestamp : 1;\\r\\n                totalValue += history[i].price * weight;\\r\\n                totalWeight += weight;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        return totalWeight > 0 ? totalValue / totalWeight : 0;\\r\\n    }\\r\\n    \\r\\n    function _calculateSlippage(uint256 expectedPrice, uint256 actualPrice) \\r\\n        internal \\r\\n        pure \\r\\n        returns (uint256) \\r\\n    {\\r\\n        if (expectedPrice == 0) return 0;\\r\\n        uint256 diff = expectedPrice > actualPrice ? \\r\\n            expectedPrice - actualPrice : actualPrice - expectedPrice;\\r\\n        return (diff * BASIS_POINTS) / expectedPrice;\\r\\n    }\\r\\n    \\r\\n    function _calculateWeightedAveragePrice(\\r\\n        TWAPOrder memory order,\\r\\n        uint256 newPrice,\\r\\n        uint256 newAmount\\r\\n    ) internal pure returns (uint256) {\\r\\n        uint256 totalValue = (order.averagePrice * order.executedAmount) + (newPrice * newAmount);\\r\\n        uint256 totalAmount = order.executedAmount + newAmount;\\r\\n        return totalValue / totalAmount;\\r\\n    }\\r\\n    \\r\\n    function _verifyPrice(uint256 price, bytes calldata proof) internal pure returns (bool) {\\r\\n        // Implement price oracle verification\\r\\n        // This is simplified - integrate with Chainlink, Pyth, or other oracles\\r\\n        // For now, just validate that price is positive and proof is provided\\r\\n        return price > 0 && proof.length > 0;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                            ADMIN FUNCTIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    function addSupportedChain(string memory chainId) external onlyOwner {\\r\\n        supportedChains[chainId] = true;\\r\\n    }\\r\\n    \\r\\n    function removeSupportedChain(string memory chainId) external onlyOwner {\\r\\n        supportedChains[chainId] = false;\\r\\n    }\\r\\n    \\r\\n    function addAuthorizedExecutor(address executor) external onlyOwner {\\r\\n        require(executor != address(0), \\\"FlowFusion: Invalid executor\\\");\\r\\n        authorizedExecutors[executor] = true;\\r\\n    }\\r\\n    \\r\\n    function removeAuthorizedExecutor(address executor) external onlyOwner {\\r\\n        authorizedExecutors[executor] = false;\\r\\n    }\\r\\n    \\r\\n    function updateFeeCollector(address newFeeCollector) external onlyOwner {\\r\\n        require(newFeeCollector != address(0), \\\"FlowFusion: Invalid fee collector\\\");\\r\\n        feeCollector = newFeeCollector;\\r\\n    }\\r\\n    \\r\\n    function updateProtocolFeeRate(uint256 newFeeRate) external onlyOwner {\\r\\n        require(newFeeRate <= 100, \\\"FlowFusion: Fee rate too high\\\");\\r\\n        protocolFeeRate = newFeeRate;\\r\\n    }\\r\\n\\r\\n    function updateMaxOrdersPerUser(uint256 newMaxOrders) external onlyOwner {\\r\\n        require(newMaxOrders > 0, \\\"FlowFusion: Invalid max orders\\\");\\r\\n        maxOrdersPerUser = newMaxOrders;\\r\\n    }\\r\\n    \\r\\n    function pause() external onlyOwner {\\r\\n        _pause();\\r\\n    }\\r\\n    \\r\\n    function unpause() external onlyOwner {\\r\\n        _unpause();\\r\\n    }\\r\\n    \\r\\n    function emergencyWithdraw(address token, uint256 amount) external onlyOwner {\\r\\n        if (token == address(0)) {\\r\\n            payable(owner()).transfer(amount);\\r\\n        } else {\\r\\n            IERC20(token).safeTransfer(owner(), amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                        RECEIVE & FALLBACK\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    receive() external payable {\\r\\n        // Allow contract to receive ETH\\r\\n        require(msg.value > 0, \\\"FlowFusion: No ETH sent\\\");\\r\\n    }\\r\\n    \\r\\n    fallback() external payable {\\r\\n        revert(\\\"FlowFusion: Function not found\\\");\\r\\n    }\\r\\n}\",\"keccak256\":\"0x5430752df81a7871e0102b87ed0c31f762951103fc149b2717e0df429bcf3611\",\"license\":\"MIT\"},\"contracts/interfaces/IFlowFusionBridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\n/**\\r\\n * @title IFlowFusionBridge\\r\\n * @notice Interface for FlowFusion Multi-Chain TWAP Bridge\\r\\n */\\r\\ninterface IFlowFusionBridge {\\r\\n    \\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                STRUCTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    struct TWAPConfig {\\r\\n        uint256 windowMinutes;      // TWAP calculation window (5-1440 minutes)\\r\\n        uint256 executionIntervals; // Number of execution intervals (2-20)\\r\\n        uint256 maxSlippage;        // Maximum slippage in basis points (1-1000)\\r\\n        uint256 minFillSize;        // Minimum fill size per interval\\r\\n        bool enableMEVProtection;   // Enable MEV protection\\r\\n    }\\r\\n    \\r\\n    struct TWAPOrder {\\r\\n        bytes32 id;                 // Unique order identifier\\r\\n        address user;               // Order creator\\r\\n        address sourceToken;        // Source token address (address(0) for ETH)\\r\\n        uint256 sourceAmount;       // Total source amount\\r\\n        string targetChain;         // Target blockchain identifier\\r\\n        string targetToken;         // Target token identifier\\r\\n        string targetRecipient;     // Recipient address on target chain\\r\\n        TWAPConfig twapConfig;      // TWAP execution configuration\\r\\n        bytes32 htlcHash;          // Hash for HTLC mechanism\\r\\n        uint256 timeoutHeight;      // Block height timeout\\r\\n        uint256 createdAt;          // Creation timestamp\\r\\n        uint256 executedAmount;     // Amount already executed\\r\\n        uint256 lastExecution;      // Last execution timestamp\\r\\n        OrderStatus status;         // Current order status\\r\\n        uint256 averagePrice;       // Weighted average execution price\\r\\n    }\\r\\n    \\r\\n    struct ExecutionRecord {\\r\\n        uint256 timestamp;          // Execution timestamp\\r\\n        uint256 amount;            // Amount executed\\r\\n        uint256 price;             // Execution price\\r\\n        uint256 gasUsed;           // Gas used for execution\\r\\n        uint256 slippage;          // Slippage in basis points\\r\\n    }\\r\\n    \\r\\n    enum OrderStatus {\\r\\n        Executing,      // Order is being executed\\r\\n        Completed,      // All intervals executed\\r\\n        Cancelled,      // Order cancelled by user\\r\\n        Expired,        // Order expired (timeout reached)\\r\\n        Claimed         // HTLC claimed (cross-chain completed)\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                EVENTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    event OrderCreated(\\r\\n        bytes32 indexed orderId,\\r\\n        address indexed user,\\r\\n        string targetChain,\\r\\n        address sourceToken,\\r\\n        uint256 sourceAmount,\\r\\n        string targetToken,\\r\\n        TWAPConfig twapConfig\\r\\n    );\\r\\n\\r\\n    event TWAPExecution(\\r\\n        bytes32 indexed orderId,\\r\\n        uint256 intervalNumber,\\r\\n        uint256 executedAmount,\\r\\n        uint256 averagePrice,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n\\r\\n    event OrderCompleted(\\r\\n        bytes32 indexed orderId,\\r\\n        uint256 totalExecuted,\\r\\n        uint256 averagePrice\\r\\n    );\\r\\n\\r\\n    event OrderCancelled(\\r\\n        bytes32 indexed orderId,\\r\\n        address indexed user,\\r\\n        uint256 refundAmount\\r\\n    );\\r\\n\\r\\n    event HTLCCreated(\\r\\n        bytes32 indexed orderId,\\r\\n        bytes32 indexed htlcHash,\\r\\n        uint256 amount,\\r\\n        uint256 timeoutHeight\\r\\n    );\\r\\n\\r\\n    event HTLCClaimed(\\r\\n        bytes32 indexed orderId,\\r\\n        bytes32 secret,\\r\\n        address claimer\\r\\n    );\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                            MAIN FUNCTIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Create a new TWAP order for cross-chain execution\\r\\n     */\\r\\n    function createTWAPOrder(\\r\\n        address sourceToken,\\r\\n        uint256 sourceAmount,\\r\\n        string memory targetChain,\\r\\n        string memory targetToken,\\r\\n        string memory targetRecipient,\\r\\n        TWAPConfig memory twapConfig,\\r\\n        bytes32 htlcHash,\\r\\n        uint256 timeoutHeight\\r\\n    ) external payable returns (bytes32 orderId);\\r\\n\\r\\n    /**\\r\\n     * @notice Execute a TWAP interval for an order\\r\\n     */\\r\\n    function executeTWAPInterval(\\r\\n        bytes32 orderId,\\r\\n        uint256 intervalAmount,\\r\\n        uint256 executionPrice,\\r\\n        bytes calldata priceProof\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Cancel an order and refund remaining tokens\\r\\n     */\\r\\n    function cancelOrder(bytes32 orderId) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Claim HTLC with secret to complete cross-chain swap\\r\\n     */\\r\\n    function claimHTLC(bytes32 orderId, bytes32 secret) external;\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                            VIEW FUNCTIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    function getOrder(bytes32 orderId) external view returns (TWAPOrder memory);\\r\\n    function getUserOrders(address user) external view returns (bytes32[] memory);\\r\\n    function getExecutionHistory(bytes32 orderId) external view returns (ExecutionRecord[] memory);\\r\\n    function getCurrentTWAPPrice(bytes32 orderId) external view returns (uint256);\\r\\n    function getNextExecutionTime(bytes32 orderId) external view returns (uint256);\\r\\n}\",\"keccak256\":\"0x43f4dfae76e7f0cafeeb31436df057dd90bbf13c22acd22ac639e3dcd8466faa\",\"license\":\"MIT\"},\"contracts/libraries/TWAPMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\n/**\\r\\n * @title TWAPMath\\r\\n * @notice Library for Time-Weighted Average Price calculations and related math\\r\\n * @dev Used by FlowFusion Bridge for sophisticated TWAP execution\\r\\n */\\r\\nlibrary TWAPMath {\\r\\n    \\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                CONSTANTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    uint256 constant BASIS_POINTS = 10000;\\r\\n    uint256 constant PRECISION = 1e18;\\r\\n    \\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                STRUCTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    struct PricePoint {\\r\\n        uint256 timestamp;\\r\\n        uint256 price;\\r\\n        uint256 volume;\\r\\n    }\\r\\n    \\r\\n    struct TWAPData {\\r\\n        uint256 cumulativePrice;\\r\\n        uint256 cumulativeVolume;\\r\\n        uint256 lastUpdateTime;\\r\\n        uint256 windowStart;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                            TWAP CALCULATIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate Time-Weighted Average Price from price points\\r\\n     * @param pricePoints Array of price data points\\r\\n     * @param windowStart Start of the TWAP window (timestamp)\\r\\n     * @param windowEnd End of the TWAP window (timestamp)\\r\\n     * @return twapPrice Calculated TWAP price\\r\\n     */\\r\\n    function calculateTWAP(\\r\\n        PricePoint[] memory pricePoints,\\r\\n        uint256 windowStart,\\r\\n        uint256 windowEnd\\r\\n    ) internal pure returns (uint256 twapPrice) {\\r\\n        require(windowEnd > windowStart, \\\"Invalid window\\\");\\r\\n        \\r\\n        if (pricePoints.length == 0) return 0;\\r\\n        \\r\\n        uint256 totalValue = 0;\\r\\n        uint256 totalTime = 0;\\r\\n        \\r\\n        for (uint256 i = 0; i < pricePoints.length; i++) {\\r\\n            if (pricePoints[i].timestamp >= windowStart && pricePoints[i].timestamp <= windowEnd) {\\r\\n                uint256 timeWeight = i > 0 ? \\r\\n                    pricePoints[i].timestamp - pricePoints[i-1].timestamp : \\r\\n                    windowEnd - windowStart;\\r\\n                \\r\\n                // Prevent division by zero and overflow\\r\\n                if (timeWeight > 0 && pricePoints[i].price > 0) {\\r\\n                    totalValue += pricePoints[i].price * timeWeight;\\r\\n                    totalTime += timeWeight;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        return totalTime > 0 ? totalValue / totalTime : 0;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate Volume-Weighted Average Price\\r\\n     * @param pricePoints Array of price data points with volume\\r\\n     * @param windowStart Start of the VWAP window\\r\\n     * @param windowEnd End of the VWAP window\\r\\n     * @return vwapPrice Calculated VWAP price\\r\\n     */\\r\\n    function calculateVWAP(\\r\\n        PricePoint[] memory pricePoints,\\r\\n        uint256 windowStart,\\r\\n        uint256 windowEnd\\r\\n    ) internal pure returns (uint256 vwapPrice) {\\r\\n        require(windowEnd > windowStart, \\\"Invalid window\\\");\\r\\n        \\r\\n        if (pricePoints.length == 0) return 0;\\r\\n        \\r\\n        uint256 totalValue = 0;\\r\\n        uint256 totalVolume = 0;\\r\\n        \\r\\n        for (uint256 i = 0; i < pricePoints.length; i++) {\\r\\n            if (pricePoints[i].timestamp >= windowStart && \\r\\n                pricePoints[i].timestamp <= windowEnd &&\\r\\n                pricePoints[i].volume > 0) {\\r\\n                \\r\\n                totalValue += pricePoints[i].price * pricePoints[i].volume;\\r\\n                totalVolume += pricePoints[i].volume;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        return totalVolume > 0 ? totalValue / totalVolume : 0;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                         SLIPPAGE CALCULATIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate slippage between expected and actual price\\r\\n     * @param expectedPrice Expected price\\r\\n     * @param actualPrice Actual execution price\\r\\n     * @return slippage Slippage in basis points\\r\\n     */\\r\\n    function calculateSlippage(\\r\\n        uint256 expectedPrice,\\r\\n        uint256 actualPrice\\r\\n    ) internal pure returns (uint256 slippage) {\\r\\n        if (expectedPrice == 0) return 0;\\r\\n        \\r\\n        uint256 difference = expectedPrice > actualPrice ? \\r\\n            expectedPrice - actualPrice : \\r\\n            actualPrice - expectedPrice;\\r\\n        \\r\\n        return (difference * BASIS_POINTS) / expectedPrice;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Check if slippage is within tolerance\\r\\n     * @param expectedPrice Expected price\\r\\n     * @param actualPrice Actual price\\r\\n     * @param maxSlippage Maximum allowed slippage in basis points\\r\\n     * @return isValid True if slippage is within tolerance\\r\\n     */\\r\\n    function isSlippageAcceptable(\\r\\n        uint256 expectedPrice,\\r\\n        uint256 actualPrice,\\r\\n        uint256 maxSlippage\\r\\n    ) internal pure returns (bool isValid) {\\r\\n        uint256 slippage = calculateSlippage(expectedPrice, actualPrice);\\r\\n        return slippage <= maxSlippage;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                        PRICE IMPACT CALCULATIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate price impact for a given trade size\\r\\n     * @param currentPrice Current market price\\r\\n     * @param tradeSize Size of the trade\\r\\n     * @param liquidity Available liquidity\\r\\n     * @return priceImpact Price impact in basis points\\r\\n     */\\r\\n    function calculatePriceImpact(\\r\\n        uint256 currentPrice,\\r\\n        uint256 tradeSize,\\r\\n        uint256 liquidity\\r\\n    ) internal pure returns (uint256 priceImpact) {\\r\\n        if (liquidity == 0 || currentPrice == 0) return BASIS_POINTS; // 100% impact\\r\\n        \\r\\n        // Simplified price impact model: impact = (tradeSize / liquidity) * 100%\\r\\n        uint256 impactRatio = (tradeSize * BASIS_POINTS) / liquidity;\\r\\n        \\r\\n        // Cap at 100% impact\\r\\n        return impactRatio > BASIS_POINTS ? BASIS_POINTS : impactRatio;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                         INTERVAL CALCULATIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate optimal interval size for TWAP execution\\r\\n     * @param totalAmount Total amount to execute\\r\\n     * @param numberOfIntervals Number of execution intervals\\r\\n     * @param minFillSize Minimum fill size per interval\\r\\n     * @return intervalSize Optimal size per interval\\r\\n     */\\r\\n    function calculateIntervalSize(\\r\\n        uint256 totalAmount,\\r\\n        uint256 numberOfIntervals,\\r\\n        uint256 minFillSize\\r\\n    ) internal pure returns (uint256 intervalSize) {\\r\\n        require(numberOfIntervals > 0, \\\"Invalid intervals\\\");\\r\\n        \\r\\n        uint256 baseSize = totalAmount / numberOfIntervals;\\r\\n        return baseSize < minFillSize ? minFillSize : baseSize;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate time between intervals\\r\\n     * @param windowMinutes Total execution window in minutes\\r\\n     * @param numberOfIntervals Number of execution intervals\\r\\n     * @return intervalDuration Duration between intervals in seconds\\r\\n     */\\r\\n    function calculateIntervalDuration(\\r\\n        uint256 windowMinutes,\\r\\n        uint256 numberOfIntervals\\r\\n    ) internal pure returns (uint256 intervalDuration) {\\r\\n        require(numberOfIntervals > 0, \\\"Invalid intervals\\\");\\r\\n        return (windowMinutes * 60) / numberOfIntervals;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                         WEIGHTED AVERAGES\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate weighted average price\\r\\n     * @param prices Array of prices\\r\\n     * @param weights Array of weights (same length as prices)\\r\\n     * @return weightedAverage Calculated weighted average\\r\\n     */\\r\\n    function calculateWeightedAverage(\\r\\n        uint256[] memory prices,\\r\\n        uint256[] memory weights\\r\\n    ) internal pure returns (uint256 weightedAverage) {\\r\\n        require(prices.length == weights.length, \\\"Array length mismatch\\\");\\r\\n        \\r\\n        if (prices.length == 0) return 0;\\r\\n        \\r\\n        uint256 totalValue = 0;\\r\\n        uint256 totalWeight = 0;\\r\\n        \\r\\n        for (uint256 i = 0; i < prices.length; i++) {\\r\\n            totalValue += prices[i] * weights[i];\\r\\n            totalWeight += weights[i];\\r\\n        }\\r\\n        \\r\\n        return totalWeight > 0 ? totalValue / totalWeight : 0;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Update running weighted average with new data point\\r\\n     * @param currentAverage Current weighted average\\r\\n     * @param currentWeight Current total weight\\r\\n     * @param newPrice New price to incorporate\\r\\n     * @param newWeight Weight of new price\\r\\n     * @return newAverage Updated weighted average\\r\\n     * @return newTotalWeight Updated total weight\\r\\n     */\\r\\n    function updateWeightedAverage(\\r\\n        uint256 currentAverage,\\r\\n        uint256 currentWeight,\\r\\n        uint256 newPrice,\\r\\n        uint256 newWeight\\r\\n    ) internal pure returns (uint256 newAverage, uint256 newTotalWeight) {\\r\\n        newTotalWeight = currentWeight + newWeight;\\r\\n        \\r\\n        if (newTotalWeight == 0) {\\r\\n            return (0, 0);\\r\\n        }\\r\\n        \\r\\n        uint256 totalValue = (currentAverage * currentWeight) + (newPrice * newWeight);\\r\\n        newAverage = totalValue / newTotalWeight;\\r\\n        \\r\\n        return (newAverage, newTotalWeight);\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                          UTILITY FUNCTIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Safe multiplication with overflow protection\\r\\n     */\\r\\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) return 0;\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"Multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Safe division with zero protection\\r\\n     */\\r\\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b > 0, \\\"Division by zero\\\");\\r\\n        return a / b;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate percentage of a value\\r\\n     * @param value Base value\\r\\n     * @param percentage Percentage in basis points\\r\\n     * @return result Calculated percentage\\r\\n     */\\r\\n    function percentage(uint256 value, uint256 percentage) internal pure returns (uint256) {\\r\\n        return (value * percentage) / BASIS_POINTS;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Linear interpolation between two values\\r\\n     * @param start Start value\\r\\n     * @param end End value\\r\\n     * @param progress Progress from 0 to PRECISION (1e18)\\r\\n     * @return interpolated Interpolated value\\r\\n     */\\r\\n    function linearInterpolation(\\r\\n        uint256 start,\\r\\n        uint256 end,\\r\\n        uint256 progress\\r\\n    ) internal pure returns (uint256 interpolated) {\\r\\n        require(progress <= PRECISION, \\\"Progress out of range\\\");\\r\\n        \\r\\n        if (progress == 0) return start;\\r\\n        if (progress == PRECISION) return end;\\r\\n        \\r\\n        if (end >= start) {\\r\\n            uint256 diff = end - start;\\r\\n            return start + (diff * progress) / PRECISION;\\r\\n        } else {\\r\\n            uint256 diff = start - end;\\r\\n            return start - (diff * progress) / PRECISION;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate exponential moving average\\r\\n     * @param currentEMA Current EMA value\\r\\n     * @param newValue New value to incorporate\\r\\n     * @param alpha Smoothing factor (0 to PRECISION)\\r\\n     * @return newEMA Updated EMA value\\r\\n     */\\r\\n    function exponentialMovingAverage(\\r\\n        uint256 currentEMA,\\r\\n        uint256 newValue,\\r\\n        uint256 alpha\\r\\n    ) internal pure returns (uint256 newEMA) {\\r\\n        require(alpha <= PRECISION, \\\"Alpha out of range\\\");\\r\\n        \\r\\n        // EMA = alpha * newValue + (1 - alpha) * currentEMA\\r\\n        uint256 newComponent = (alpha * newValue) / PRECISION;\\r\\n        uint256 oldComponent = ((PRECISION - alpha) * currentEMA) / PRECISION;\\r\\n        \\r\\n        return newComponent + oldComponent;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2fc68c835e605d051cdd51802e411af55d59bd71f45298237580e667134db8d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1606,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":1496,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"_paused","offset":0,"slot":"1","type":"t_bool"},{"astId":8,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"_owner","offset":1,"slot":"1","type":"t_address"},{"astId":1727,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"orders","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_struct(TWAPOrder)3333_storage)"},{"astId":1732,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"userOrders","offset":0,"slot":"3","type":"t_mapping(t_address,t_array(t_bytes32)dyn_storage)"},{"astId":1738,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"executionHistory","offset":0,"slot":"4","type":"t_mapping(t_bytes32,t_array(t_struct(ExecutionRecord)3344_storage)dyn_storage)"},{"astId":1742,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"supportedChains","offset":0,"slot":"5","type":"t_mapping(t_string_memory_ptr,t_bool)"},{"astId":1746,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"authorizedExecutors","offset":0,"slot":"6","type":"t_mapping(t_address,t_bool)"},{"astId":1750,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"userOrderCount","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":1752,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"orderNonce","offset":0,"slot":"8","type":"t_uint256"},{"astId":1754,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"totalOrders","offset":0,"slot":"9","type":"t_uint256"},{"astId":1756,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"totalVolume","offset":0,"slot":"10","type":"t_uint256"},{"astId":1758,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"feeCollector","offset":0,"slot":"11","type":"t_address"},{"astId":1760,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"protocolFeeRate","offset":0,"slot":"12","type":"t_uint256"},{"astId":1763,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"maxOrdersPerUser","offset":0,"slot":"13","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_struct(ExecutionRecord)3344_storage)dyn_storage":{"base":"t_struct(ExecutionRecord)3344_storage","encoding":"dynamic_array","label":"struct IFlowFusionBridge.ExecutionRecord[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(OrderStatus)3350":{"encoding":"inplace","label":"enum IFlowFusionBridge.OrderStatus","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_bytes32)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bytes32[])","numberOfBytes":"32","value":"t_array(t_bytes32)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_array(t_struct(ExecutionRecord)3344_storage)dyn_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct IFlowFusionBridge.ExecutionRecord[])","numberOfBytes":"32","value":"t_array(t_struct(ExecutionRecord)3344_storage)dyn_storage"},"t_mapping(t_bytes32,t_struct(TWAPOrder)3333_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct IFlowFusionBridge.TWAPOrder)","numberOfBytes":"32","value":"t_struct(TWAPOrder)3333_storage"},"t_mapping(t_string_memory_ptr,t_bool)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => bool)","numberOfBytes":"32","value":"t_bool"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(ExecutionRecord)3344_storage":{"encoding":"inplace","label":"struct IFlowFusionBridge.ExecutionRecord","members":[{"astId":3335,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"timestamp","offset":0,"slot":"0","type":"t_uint256"},{"astId":3337,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"amount","offset":0,"slot":"1","type":"t_uint256"},{"astId":3339,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"price","offset":0,"slot":"2","type":"t_uint256"},{"astId":3341,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"gasUsed","offset":0,"slot":"3","type":"t_uint256"},{"astId":3343,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"slippage","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_struct(TWAPConfig)3300_storage":{"encoding":"inplace","label":"struct IFlowFusionBridge.TWAPConfig","members":[{"astId":3291,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"windowMinutes","offset":0,"slot":"0","type":"t_uint256"},{"astId":3293,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"executionIntervals","offset":0,"slot":"1","type":"t_uint256"},{"astId":3295,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"maxSlippage","offset":0,"slot":"2","type":"t_uint256"},{"astId":3297,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"minFillSize","offset":0,"slot":"3","type":"t_uint256"},{"astId":3299,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"enableMEVProtection","offset":0,"slot":"4","type":"t_bool"}],"numberOfBytes":"160"},"t_struct(TWAPOrder)3333_storage":{"encoding":"inplace","label":"struct IFlowFusionBridge.TWAPOrder","members":[{"astId":3302,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"id","offset":0,"slot":"0","type":"t_bytes32"},{"astId":3304,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"user","offset":0,"slot":"1","type":"t_address"},{"astId":3306,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"sourceToken","offset":0,"slot":"2","type":"t_address"},{"astId":3308,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"sourceAmount","offset":0,"slot":"3","type":"t_uint256"},{"astId":3310,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"targetChain","offset":0,"slot":"4","type":"t_string_storage"},{"astId":3312,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"targetToken","offset":0,"slot":"5","type":"t_string_storage"},{"astId":3314,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"targetRecipient","offset":0,"slot":"6","type":"t_string_storage"},{"astId":3317,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"twapConfig","offset":0,"slot":"7","type":"t_struct(TWAPConfig)3300_storage"},{"astId":3319,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"htlcHash","offset":0,"slot":"12","type":"t_bytes32"},{"astId":3321,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"timeoutHeight","offset":0,"slot":"13","type":"t_uint256"},{"astId":3323,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"createdAt","offset":0,"slot":"14","type":"t_uint256"},{"astId":3325,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"executedAmount","offset":0,"slot":"15","type":"t_uint256"},{"astId":3327,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"lastExecution","offset":0,"slot":"16","type":"t_uint256"},{"astId":3330,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"status","offset":0,"slot":"17","type":"t_enum(OrderStatus)3350"},{"astId":3332,"contract":"contracts/FlowFusionBridge.sol:FlowFusionBridge","label":"averagePrice","offset":0,"slot":"18","type":"t_uint256"}],"numberOfBytes":"608"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"cancelOrder(bytes32)":{"notice":"Cancel an order and refund remaining tokens"},"claimHTLC(bytes32,bytes32)":{"notice":"Claim HTLC with secret to complete cross-chain swap"},"createTWAPOrder(address,uint256,string,string,string,(uint256,uint256,uint256,uint256,bool),bytes32,uint256)":{"notice":"Create a new TWAP order for cross-chain execution"},"executeTWAPInterval(bytes32,uint256,uint256,bytes)":{"notice":"Execute a TWAP interval for an order"}},"notice":"Multi-chain TWAP bridge for professional trading with MEV protection","version":1}}},"contracts/interfaces/IFlowFusionBridge.sol":{"IFlowFusionBridge":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"},{"indexed":false,"internalType":"address","name":"claimer","type":"address"}],"name":"HTLCClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"htlcHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timeoutHeight","type":"uint256"}],"name":"HTLCCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"refundAmount","type":"uint256"}],"name":"OrderCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"totalExecuted","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"averagePrice","type":"uint256"}],"name":"OrderCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"targetChain","type":"string"},{"indexed":false,"internalType":"address","name":"sourceToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"sourceAmount","type":"uint256"},{"indexed":false,"internalType":"string","name":"targetToken","type":"string"},{"components":[{"internalType":"uint256","name":"windowMinutes","type":"uint256"},{"internalType":"uint256","name":"executionIntervals","type":"uint256"},{"internalType":"uint256","name":"maxSlippage","type":"uint256"},{"internalType":"uint256","name":"minFillSize","type":"uint256"},{"internalType":"bool","name":"enableMEVProtection","type":"bool"}],"indexed":false,"internalType":"struct IFlowFusionBridge.TWAPConfig","name":"twapConfig","type":"tuple"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"intervalNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"executedAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"averagePrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TWAPExecution","type":"event"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"claimHTLC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sourceToken","type":"address"},{"internalType":"uint256","name":"sourceAmount","type":"uint256"},{"internalType":"string","name":"targetChain","type":"string"},{"internalType":"string","name":"targetToken","type":"string"},{"internalType":"string","name":"targetRecipient","type":"string"},{"components":[{"internalType":"uint256","name":"windowMinutes","type":"uint256"},{"internalType":"uint256","name":"executionIntervals","type":"uint256"},{"internalType":"uint256","name":"maxSlippage","type":"uint256"},{"internalType":"uint256","name":"minFillSize","type":"uint256"},{"internalType":"bool","name":"enableMEVProtection","type":"bool"}],"internalType":"struct IFlowFusionBridge.TWAPConfig","name":"twapConfig","type":"tuple"},{"internalType":"bytes32","name":"htlcHash","type":"bytes32"},{"internalType":"uint256","name":"timeoutHeight","type":"uint256"}],"name":"createTWAPOrder","outputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"uint256","name":"intervalAmount","type":"uint256"},{"internalType":"uint256","name":"executionPrice","type":"uint256"},{"internalType":"bytes","name":"priceProof","type":"bytes"}],"name":"executeTWAPInterval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getCurrentTWAPPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getExecutionHistory","outputs":[{"components":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"gasUsed","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"internalType":"struct IFlowFusionBridge.ExecutionRecord[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getNextExecutionTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getOrder","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"sourceToken","type":"address"},{"internalType":"uint256","name":"sourceAmount","type":"uint256"},{"internalType":"string","name":"targetChain","type":"string"},{"internalType":"string","name":"targetToken","type":"string"},{"internalType":"string","name":"targetRecipient","type":"string"},{"components":[{"internalType":"uint256","name":"windowMinutes","type":"uint256"},{"internalType":"uint256","name":"executionIntervals","type":"uint256"},{"internalType":"uint256","name":"maxSlippage","type":"uint256"},{"internalType":"uint256","name":"minFillSize","type":"uint256"},{"internalType":"bool","name":"enableMEVProtection","type":"bool"}],"internalType":"struct IFlowFusionBridge.TWAPConfig","name":"twapConfig","type":"tuple"},{"internalType":"bytes32","name":"htlcHash","type":"bytes32"},{"internalType":"uint256","name":"timeoutHeight","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"executedAmount","type":"uint256"},{"internalType":"uint256","name":"lastExecution","type":"uint256"},{"internalType":"enum IFlowFusionBridge.OrderStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"averagePrice","type":"uint256"}],"internalType":"struct IFlowFusionBridge.TWAPOrder","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserOrders","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"IFlowFusionBridge","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"cancelOrder(bytes32)":"7489ec23","claimHTLC(bytes32,bytes32)":"9755dca0","createTWAPOrder(address,uint256,string,string,string,(uint256,uint256,uint256,uint256,bool),bytes32,uint256)":"518479b3","executeTWAPInterval(bytes32,uint256,uint256,bytes)":"a3f1c420","getCurrentTWAPPrice(bytes32)":"a89a6f69","getExecutionHistory(bytes32)":"1833f0cf","getNextExecutionTime(bytes32)":"dc33597d","getOrder(bytes32)":"5778472a","getUserOrders(address)":"63c69f08"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"HTLCClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"htlcHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeoutHeight\",\"type\":\"uint256\"}],\"name\":\"HTLCCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalExecuted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"}],\"name\":\"OrderCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"targetChain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"targetToken\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowMinutes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionIntervals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFillSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enableMEVProtection\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IFlowFusionBridge.TWAPConfig\",\"name\":\"twapConfig\",\"type\":\"tuple\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"intervalNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TWAPExecution\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"claimHTLC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"targetChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"targetToken\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"targetRecipient\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowMinutes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionIntervals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFillSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enableMEVProtection\",\"type\":\"bool\"}],\"internalType\":\"struct IFlowFusionBridge.TWAPConfig\",\"name\":\"twapConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"htlcHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timeoutHeight\",\"type\":\"uint256\"}],\"name\":\"createTWAPOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"intervalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"priceProof\",\"type\":\"bytes\"}],\"name\":\"executeTWAPInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getCurrentTWAPPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getExecutionHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct IFlowFusionBridge.ExecutionRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getNextExecutionTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"targetChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"targetToken\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"targetRecipient\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowMinutes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionIntervals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFillSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enableMEVProtection\",\"type\":\"bool\"}],\"internalType\":\"struct IFlowFusionBridge.TWAPConfig\",\"name\":\"twapConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"htlcHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timeoutHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastExecution\",\"type\":\"uint256\"},{\"internalType\":\"enum IFlowFusionBridge.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IFlowFusionBridge.TWAPOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserOrders\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"IFlowFusionBridge\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelOrder(bytes32)\":{\"notice\":\"Cancel an order and refund remaining tokens\"},\"claimHTLC(bytes32,bytes32)\":{\"notice\":\"Claim HTLC with secret to complete cross-chain swap\"},\"createTWAPOrder(address,uint256,string,string,string,(uint256,uint256,uint256,uint256,bool),bytes32,uint256)\":{\"notice\":\"Create a new TWAP order for cross-chain execution\"},\"executeTWAPInterval(bytes32,uint256,uint256,bytes)\":{\"notice\":\"Execute a TWAP interval for an order\"}},\"notice\":\"Interface for FlowFusion Multi-Chain TWAP Bridge\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFlowFusionBridge.sol\":\"IFlowFusionBridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IFlowFusionBridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\n/**\\r\\n * @title IFlowFusionBridge\\r\\n * @notice Interface for FlowFusion Multi-Chain TWAP Bridge\\r\\n */\\r\\ninterface IFlowFusionBridge {\\r\\n    \\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                STRUCTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    struct TWAPConfig {\\r\\n        uint256 windowMinutes;      // TWAP calculation window (5-1440 minutes)\\r\\n        uint256 executionIntervals; // Number of execution intervals (2-20)\\r\\n        uint256 maxSlippage;        // Maximum slippage in basis points (1-1000)\\r\\n        uint256 minFillSize;        // Minimum fill size per interval\\r\\n        bool enableMEVProtection;   // Enable MEV protection\\r\\n    }\\r\\n    \\r\\n    struct TWAPOrder {\\r\\n        bytes32 id;                 // Unique order identifier\\r\\n        address user;               // Order creator\\r\\n        address sourceToken;        // Source token address (address(0) for ETH)\\r\\n        uint256 sourceAmount;       // Total source amount\\r\\n        string targetChain;         // Target blockchain identifier\\r\\n        string targetToken;         // Target token identifier\\r\\n        string targetRecipient;     // Recipient address on target chain\\r\\n        TWAPConfig twapConfig;      // TWAP execution configuration\\r\\n        bytes32 htlcHash;          // Hash for HTLC mechanism\\r\\n        uint256 timeoutHeight;      // Block height timeout\\r\\n        uint256 createdAt;          // Creation timestamp\\r\\n        uint256 executedAmount;     // Amount already executed\\r\\n        uint256 lastExecution;      // Last execution timestamp\\r\\n        OrderStatus status;         // Current order status\\r\\n        uint256 averagePrice;       // Weighted average execution price\\r\\n    }\\r\\n    \\r\\n    struct ExecutionRecord {\\r\\n        uint256 timestamp;          // Execution timestamp\\r\\n        uint256 amount;            // Amount executed\\r\\n        uint256 price;             // Execution price\\r\\n        uint256 gasUsed;           // Gas used for execution\\r\\n        uint256 slippage;          // Slippage in basis points\\r\\n    }\\r\\n    \\r\\n    enum OrderStatus {\\r\\n        Executing,      // Order is being executed\\r\\n        Completed,      // All intervals executed\\r\\n        Cancelled,      // Order cancelled by user\\r\\n        Expired,        // Order expired (timeout reached)\\r\\n        Claimed         // HTLC claimed (cross-chain completed)\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                EVENTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    event OrderCreated(\\r\\n        bytes32 indexed orderId,\\r\\n        address indexed user,\\r\\n        string targetChain,\\r\\n        address sourceToken,\\r\\n        uint256 sourceAmount,\\r\\n        string targetToken,\\r\\n        TWAPConfig twapConfig\\r\\n    );\\r\\n\\r\\n    event TWAPExecution(\\r\\n        bytes32 indexed orderId,\\r\\n        uint256 intervalNumber,\\r\\n        uint256 executedAmount,\\r\\n        uint256 averagePrice,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n\\r\\n    event OrderCompleted(\\r\\n        bytes32 indexed orderId,\\r\\n        uint256 totalExecuted,\\r\\n        uint256 averagePrice\\r\\n    );\\r\\n\\r\\n    event OrderCancelled(\\r\\n        bytes32 indexed orderId,\\r\\n        address indexed user,\\r\\n        uint256 refundAmount\\r\\n    );\\r\\n\\r\\n    event HTLCCreated(\\r\\n        bytes32 indexed orderId,\\r\\n        bytes32 indexed htlcHash,\\r\\n        uint256 amount,\\r\\n        uint256 timeoutHeight\\r\\n    );\\r\\n\\r\\n    event HTLCClaimed(\\r\\n        bytes32 indexed orderId,\\r\\n        bytes32 secret,\\r\\n        address claimer\\r\\n    );\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                            MAIN FUNCTIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Create a new TWAP order for cross-chain execution\\r\\n     */\\r\\n    function createTWAPOrder(\\r\\n        address sourceToken,\\r\\n        uint256 sourceAmount,\\r\\n        string memory targetChain,\\r\\n        string memory targetToken,\\r\\n        string memory targetRecipient,\\r\\n        TWAPConfig memory twapConfig,\\r\\n        bytes32 htlcHash,\\r\\n        uint256 timeoutHeight\\r\\n    ) external payable returns (bytes32 orderId);\\r\\n\\r\\n    /**\\r\\n     * @notice Execute a TWAP interval for an order\\r\\n     */\\r\\n    function executeTWAPInterval(\\r\\n        bytes32 orderId,\\r\\n        uint256 intervalAmount,\\r\\n        uint256 executionPrice,\\r\\n        bytes calldata priceProof\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Cancel an order and refund remaining tokens\\r\\n     */\\r\\n    function cancelOrder(bytes32 orderId) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Claim HTLC with secret to complete cross-chain swap\\r\\n     */\\r\\n    function claimHTLC(bytes32 orderId, bytes32 secret) external;\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                            VIEW FUNCTIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    function getOrder(bytes32 orderId) external view returns (TWAPOrder memory);\\r\\n    function getUserOrders(address user) external view returns (bytes32[] memory);\\r\\n    function getExecutionHistory(bytes32 orderId) external view returns (ExecutionRecord[] memory);\\r\\n    function getCurrentTWAPPrice(bytes32 orderId) external view returns (uint256);\\r\\n    function getNextExecutionTime(bytes32 orderId) external view returns (uint256);\\r\\n}\",\"keccak256\":\"0x43f4dfae76e7f0cafeeb31436df057dd90bbf13c22acd22ac639e3dcd8466faa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"cancelOrder(bytes32)":{"notice":"Cancel an order and refund remaining tokens"},"claimHTLC(bytes32,bytes32)":{"notice":"Claim HTLC with secret to complete cross-chain swap"},"createTWAPOrder(address,uint256,string,string,string,(uint256,uint256,uint256,uint256,bool),bytes32,uint256)":{"notice":"Create a new TWAP order for cross-chain execution"},"executeTWAPInterval(bytes32,uint256,uint256,bytes)":{"notice":"Execute a TWAP interval for an order"}},"notice":"Interface for FlowFusion Multi-Chain TWAP Bridge","version":1}}},"contracts/libraries/TWAPMath.sol":{"TWAPMath":{"abi":[],"devdoc":{"details":"Used by FlowFusion Bridge for sophisticated TWAP execution","kind":"dev","methods":{},"title":"TWAPMath","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e33234d49393d199c4dacdd56a3d3816542bd9bf261ff25aa7586fd96742558964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 ORIGIN CALLVALUE 0xD4 SWAP4 SWAP4 0xD1 SWAP10 0xC4 0xDA 0xCD 0xD5 PUSH11 0x3D3816542BD9BF261FF25A 0xA7 PC PUSH16 0xD96742558964736F6C63430008180033 ","sourceMap":"241:12172:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e33234d49393d199c4dacdd56a3d3816542bd9bf261ff25aa7586fd96742558964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 ORIGIN CALLVALUE 0xD4 SWAP4 SWAP4 0xD1 SWAP10 0xC4 0xDA 0xCD 0xD5 PUSH11 0x3D3816542BD9BF261FF25A 0xA7 PC PUSH16 0xD96742558964736F6C63430008180033 ","sourceMap":"241:12172:15:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"calculateIntervalDuration(uint256,uint256)":"infinite","calculateIntervalSize(uint256,uint256,uint256)":"infinite","calculatePriceImpact(uint256,uint256,uint256)":"infinite","calculateSlippage(uint256,uint256)":"infinite","calculateTWAP(struct TWAPMath.PricePoint memory[] memory,uint256,uint256)":"infinite","calculateVWAP(struct TWAPMath.PricePoint memory[] memory,uint256,uint256)":"infinite","calculateWeightedAverage(uint256[] memory,uint256[] memory)":"infinite","exponentialMovingAverage(uint256,uint256,uint256)":"infinite","isSlippageAcceptable(uint256,uint256,uint256)":"infinite","linearInterpolation(uint256,uint256,uint256)":"infinite","percentage(uint256,uint256)":"infinite","safeDiv(uint256,uint256)":"infinite","safeMul(uint256,uint256)":"infinite","updateWeightedAverage(uint256,uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used by FlowFusion Bridge for sophisticated TWAP execution\",\"kind\":\"dev\",\"methods\":{},\"title\":\"TWAPMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for Time-Weighted Average Price calculations and related math\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TWAPMath.sol\":\"TWAPMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libraries/TWAPMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\n/**\\r\\n * @title TWAPMath\\r\\n * @notice Library for Time-Weighted Average Price calculations and related math\\r\\n * @dev Used by FlowFusion Bridge for sophisticated TWAP execution\\r\\n */\\r\\nlibrary TWAPMath {\\r\\n    \\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                CONSTANTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    uint256 constant BASIS_POINTS = 10000;\\r\\n    uint256 constant PRECISION = 1e18;\\r\\n    \\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                STRUCTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    struct PricePoint {\\r\\n        uint256 timestamp;\\r\\n        uint256 price;\\r\\n        uint256 volume;\\r\\n    }\\r\\n    \\r\\n    struct TWAPData {\\r\\n        uint256 cumulativePrice;\\r\\n        uint256 cumulativeVolume;\\r\\n        uint256 lastUpdateTime;\\r\\n        uint256 windowStart;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                            TWAP CALCULATIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate Time-Weighted Average Price from price points\\r\\n     * @param pricePoints Array of price data points\\r\\n     * @param windowStart Start of the TWAP window (timestamp)\\r\\n     * @param windowEnd End of the TWAP window (timestamp)\\r\\n     * @return twapPrice Calculated TWAP price\\r\\n     */\\r\\n    function calculateTWAP(\\r\\n        PricePoint[] memory pricePoints,\\r\\n        uint256 windowStart,\\r\\n        uint256 windowEnd\\r\\n    ) internal pure returns (uint256 twapPrice) {\\r\\n        require(windowEnd > windowStart, \\\"Invalid window\\\");\\r\\n        \\r\\n        if (pricePoints.length == 0) return 0;\\r\\n        \\r\\n        uint256 totalValue = 0;\\r\\n        uint256 totalTime = 0;\\r\\n        \\r\\n        for (uint256 i = 0; i < pricePoints.length; i++) {\\r\\n            if (pricePoints[i].timestamp >= windowStart && pricePoints[i].timestamp <= windowEnd) {\\r\\n                uint256 timeWeight = i > 0 ? \\r\\n                    pricePoints[i].timestamp - pricePoints[i-1].timestamp : \\r\\n                    windowEnd - windowStart;\\r\\n                \\r\\n                // Prevent division by zero and overflow\\r\\n                if (timeWeight > 0 && pricePoints[i].price > 0) {\\r\\n                    totalValue += pricePoints[i].price * timeWeight;\\r\\n                    totalTime += timeWeight;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        return totalTime > 0 ? totalValue / totalTime : 0;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate Volume-Weighted Average Price\\r\\n     * @param pricePoints Array of price data points with volume\\r\\n     * @param windowStart Start of the VWAP window\\r\\n     * @param windowEnd End of the VWAP window\\r\\n     * @return vwapPrice Calculated VWAP price\\r\\n     */\\r\\n    function calculateVWAP(\\r\\n        PricePoint[] memory pricePoints,\\r\\n        uint256 windowStart,\\r\\n        uint256 windowEnd\\r\\n    ) internal pure returns (uint256 vwapPrice) {\\r\\n        require(windowEnd > windowStart, \\\"Invalid window\\\");\\r\\n        \\r\\n        if (pricePoints.length == 0) return 0;\\r\\n        \\r\\n        uint256 totalValue = 0;\\r\\n        uint256 totalVolume = 0;\\r\\n        \\r\\n        for (uint256 i = 0; i < pricePoints.length; i++) {\\r\\n            if (pricePoints[i].timestamp >= windowStart && \\r\\n                pricePoints[i].timestamp <= windowEnd &&\\r\\n                pricePoints[i].volume > 0) {\\r\\n                \\r\\n                totalValue += pricePoints[i].price * pricePoints[i].volume;\\r\\n                totalVolume += pricePoints[i].volume;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        return totalVolume > 0 ? totalValue / totalVolume : 0;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                         SLIPPAGE CALCULATIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate slippage between expected and actual price\\r\\n     * @param expectedPrice Expected price\\r\\n     * @param actualPrice Actual execution price\\r\\n     * @return slippage Slippage in basis points\\r\\n     */\\r\\n    function calculateSlippage(\\r\\n        uint256 expectedPrice,\\r\\n        uint256 actualPrice\\r\\n    ) internal pure returns (uint256 slippage) {\\r\\n        if (expectedPrice == 0) return 0;\\r\\n        \\r\\n        uint256 difference = expectedPrice > actualPrice ? \\r\\n            expectedPrice - actualPrice : \\r\\n            actualPrice - expectedPrice;\\r\\n        \\r\\n        return (difference * BASIS_POINTS) / expectedPrice;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Check if slippage is within tolerance\\r\\n     * @param expectedPrice Expected price\\r\\n     * @param actualPrice Actual price\\r\\n     * @param maxSlippage Maximum allowed slippage in basis points\\r\\n     * @return isValid True if slippage is within tolerance\\r\\n     */\\r\\n    function isSlippageAcceptable(\\r\\n        uint256 expectedPrice,\\r\\n        uint256 actualPrice,\\r\\n        uint256 maxSlippage\\r\\n    ) internal pure returns (bool isValid) {\\r\\n        uint256 slippage = calculateSlippage(expectedPrice, actualPrice);\\r\\n        return slippage <= maxSlippage;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                        PRICE IMPACT CALCULATIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate price impact for a given trade size\\r\\n     * @param currentPrice Current market price\\r\\n     * @param tradeSize Size of the trade\\r\\n     * @param liquidity Available liquidity\\r\\n     * @return priceImpact Price impact in basis points\\r\\n     */\\r\\n    function calculatePriceImpact(\\r\\n        uint256 currentPrice,\\r\\n        uint256 tradeSize,\\r\\n        uint256 liquidity\\r\\n    ) internal pure returns (uint256 priceImpact) {\\r\\n        if (liquidity == 0 || currentPrice == 0) return BASIS_POINTS; // 100% impact\\r\\n        \\r\\n        // Simplified price impact model: impact = (tradeSize / liquidity) * 100%\\r\\n        uint256 impactRatio = (tradeSize * BASIS_POINTS) / liquidity;\\r\\n        \\r\\n        // Cap at 100% impact\\r\\n        return impactRatio > BASIS_POINTS ? BASIS_POINTS : impactRatio;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                         INTERVAL CALCULATIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate optimal interval size for TWAP execution\\r\\n     * @param totalAmount Total amount to execute\\r\\n     * @param numberOfIntervals Number of execution intervals\\r\\n     * @param minFillSize Minimum fill size per interval\\r\\n     * @return intervalSize Optimal size per interval\\r\\n     */\\r\\n    function calculateIntervalSize(\\r\\n        uint256 totalAmount,\\r\\n        uint256 numberOfIntervals,\\r\\n        uint256 minFillSize\\r\\n    ) internal pure returns (uint256 intervalSize) {\\r\\n        require(numberOfIntervals > 0, \\\"Invalid intervals\\\");\\r\\n        \\r\\n        uint256 baseSize = totalAmount / numberOfIntervals;\\r\\n        return baseSize < minFillSize ? minFillSize : baseSize;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate time between intervals\\r\\n     * @param windowMinutes Total execution window in minutes\\r\\n     * @param numberOfIntervals Number of execution intervals\\r\\n     * @return intervalDuration Duration between intervals in seconds\\r\\n     */\\r\\n    function calculateIntervalDuration(\\r\\n        uint256 windowMinutes,\\r\\n        uint256 numberOfIntervals\\r\\n    ) internal pure returns (uint256 intervalDuration) {\\r\\n        require(numberOfIntervals > 0, \\\"Invalid intervals\\\");\\r\\n        return (windowMinutes * 60) / numberOfIntervals;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                         WEIGHTED AVERAGES\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate weighted average price\\r\\n     * @param prices Array of prices\\r\\n     * @param weights Array of weights (same length as prices)\\r\\n     * @return weightedAverage Calculated weighted average\\r\\n     */\\r\\n    function calculateWeightedAverage(\\r\\n        uint256[] memory prices,\\r\\n        uint256[] memory weights\\r\\n    ) internal pure returns (uint256 weightedAverage) {\\r\\n        require(prices.length == weights.length, \\\"Array length mismatch\\\");\\r\\n        \\r\\n        if (prices.length == 0) return 0;\\r\\n        \\r\\n        uint256 totalValue = 0;\\r\\n        uint256 totalWeight = 0;\\r\\n        \\r\\n        for (uint256 i = 0; i < prices.length; i++) {\\r\\n            totalValue += prices[i] * weights[i];\\r\\n            totalWeight += weights[i];\\r\\n        }\\r\\n        \\r\\n        return totalWeight > 0 ? totalValue / totalWeight : 0;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Update running weighted average with new data point\\r\\n     * @param currentAverage Current weighted average\\r\\n     * @param currentWeight Current total weight\\r\\n     * @param newPrice New price to incorporate\\r\\n     * @param newWeight Weight of new price\\r\\n     * @return newAverage Updated weighted average\\r\\n     * @return newTotalWeight Updated total weight\\r\\n     */\\r\\n    function updateWeightedAverage(\\r\\n        uint256 currentAverage,\\r\\n        uint256 currentWeight,\\r\\n        uint256 newPrice,\\r\\n        uint256 newWeight\\r\\n    ) internal pure returns (uint256 newAverage, uint256 newTotalWeight) {\\r\\n        newTotalWeight = currentWeight + newWeight;\\r\\n        \\r\\n        if (newTotalWeight == 0) {\\r\\n            return (0, 0);\\r\\n        }\\r\\n        \\r\\n        uint256 totalValue = (currentAverage * currentWeight) + (newPrice * newWeight);\\r\\n        newAverage = totalValue / newTotalWeight;\\r\\n        \\r\\n        return (newAverage, newTotalWeight);\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                          UTILITY FUNCTIONS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n    \\r\\n    /**\\r\\n     * @notice Safe multiplication with overflow protection\\r\\n     */\\r\\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) return 0;\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"Multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Safe division with zero protection\\r\\n     */\\r\\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b > 0, \\\"Division by zero\\\");\\r\\n        return a / b;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate percentage of a value\\r\\n     * @param value Base value\\r\\n     * @param percentage Percentage in basis points\\r\\n     * @return result Calculated percentage\\r\\n     */\\r\\n    function percentage(uint256 value, uint256 percentage) internal pure returns (uint256) {\\r\\n        return (value * percentage) / BASIS_POINTS;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Linear interpolation between two values\\r\\n     * @param start Start value\\r\\n     * @param end End value\\r\\n     * @param progress Progress from 0 to PRECISION (1e18)\\r\\n     * @return interpolated Interpolated value\\r\\n     */\\r\\n    function linearInterpolation(\\r\\n        uint256 start,\\r\\n        uint256 end,\\r\\n        uint256 progress\\r\\n    ) internal pure returns (uint256 interpolated) {\\r\\n        require(progress <= PRECISION, \\\"Progress out of range\\\");\\r\\n        \\r\\n        if (progress == 0) return start;\\r\\n        if (progress == PRECISION) return end;\\r\\n        \\r\\n        if (end >= start) {\\r\\n            uint256 diff = end - start;\\r\\n            return start + (diff * progress) / PRECISION;\\r\\n        } else {\\r\\n            uint256 diff = start - end;\\r\\n            return start - (diff * progress) / PRECISION;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @notice Calculate exponential moving average\\r\\n     * @param currentEMA Current EMA value\\r\\n     * @param newValue New value to incorporate\\r\\n     * @param alpha Smoothing factor (0 to PRECISION)\\r\\n     * @return newEMA Updated EMA value\\r\\n     */\\r\\n    function exponentialMovingAverage(\\r\\n        uint256 currentEMA,\\r\\n        uint256 newValue,\\r\\n        uint256 alpha\\r\\n    ) internal pure returns (uint256 newEMA) {\\r\\n        require(alpha <= PRECISION, \\\"Alpha out of range\\\");\\r\\n        \\r\\n        // EMA = alpha * newValue + (1 - alpha) * currentEMA\\r\\n        uint256 newComponent = (alpha * newValue) / PRECISION;\\r\\n        uint256 oldComponent = ((PRECISION - alpha) * currentEMA) / PRECISION;\\r\\n        \\r\\n        return newComponent + oldComponent;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2fc68c835e605d051cdd51802e411af55d59bd71f45298237580e667134db8d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Library for Time-Weighted Average Price calculations and related math","version":1}}},"contracts/test/TestERC20.sol":{"TestERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"title":"TestERC20","version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":971,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":933,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60406080815234620003a05762000c54803803806200001e81620003a5565b9283398101606082820312620003a05781516001600160401b039290838111620003a0578262000050918301620003cb565b60209283830151858111620003a05786916200006e918501620003cb565b920151938151818111620002a0576003908154906001948583811c9316801562000395575b888410146200037f578190601f9384811162000329575b508890848311600114620002c257600092620002b6575b505060001982851b1c191690851b1782555b8451928311620002a05760049485548581811c9116801562000295575b88821014620002805782811162000235575b5086918411600114620001ca57938394918492600095620001be575b50501b92600019911b1c19161781555b3315620001a757600254908382018092116200019257506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a35161081690816200043e8239f35b601190634e487b7160e01b6000525260246000fd5b602490600085519163ec442f0560e01b8352820152fd5b0151935038806200011e565b9190601f198416928660005284886000209460005b8a898383106200021d575050501062000202575b50505050811b0181556200012e565b01519060f884600019921b161c1916905538808080620001f3565b868601518955909701969485019488935001620001df565b86600052876000208380870160051c8201928a881062000276575b0160051c019086905b8281106200026957505062000102565b6000815501869062000259565b9250819262000250565b602287634e487b7160e01b6000525260246000fd5b90607f1690620000f0565b634e487b7160e01b600052604160045260246000fd5b015190503880620000c1565b90879350601f19831691866000528a6000209260005b8c828210620003125750508411620002f9575b505050811b018255620000d3565b015160001983871b60f8161c19169055388080620002eb565b8385015186558b97909501949384019301620002d8565b90915084600052886000208480850160051c8201928b861062000375575b918991869594930160051c01915b82811062000365575050620000aa565b6000815585945089910162000355565b9250819262000347565b634e487b7160e01b600052602260045260246000fd5b92607f169262000093565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620002a057604052565b919080601f84011215620003a05782516001600160401b038111620002a05760209062000401601f8201601f19168301620003a5565b92818452828287010111620003a05760005b8181106200042957508260009394955001015290565b85810183015184820184015282016200041356fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146105ae57508163095ea7b31461050457816318160ddd146104e557816323b872dd146103ee578163313ce567146103d257816340c10f191461032657816342966c681461027157816370a082311461023a57816395d89b411461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6106d1565b6100c26106ec565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086106d1565b6024359033610702565b5160018152f35b8383346100e557816003193601126100e55780519082845460018160011c9060018316928315610230575b602093848410811461021d5783885290811561020157506001146101ac575b505050829003601f01601f191682019267ffffffffffffffff8411838510176101995750829182610195925282610688565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106101ed5750505050830101858080610163565b8054888601830152930192849082016101d7565b60ff1916878501525050151560051b8401019050858080610163565b634e487b7160e01b895260228a52602489fd5b91607f1691610144565b5050346100e55760203660031901126100e55760209181906001600160a01b036102626106d1565b16815280845220549051908152f35b8383346100e55760203660031901126100e5578235903315610310573383528260205280832054938285106102e557508183943385528460205203818420558160025403600255519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a380f35b905163391434e360e21b81523391810191825260208201859052604082018390529081906060010390fd5b51634b637e8f60e11b8152808401839052602490fd5b919050346103ce57806003193601126103ce576103416106d1565b6001600160a01b031691602435919083156103b957600254908382018092116103a6575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b8280fd5b5050346100e557816003193601126100e5576020905160128152f35b905082346104e25760603660031901126104e25761040a6106d1565b6104126106ec565b916044359360018060a01b03831680835260016020528683203384526020528683205491600019831061044e575b602088610112898989610702565b8683106104b657811561049f5733156104885750825260016020908152868320338452815291869020908590039055829061011287610440565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346100e557816003193601126100e5576020906002549051908152f35b9050346103ce57816003193601126103ce5761051e6106d1565b602435903315610597576001600160a01b031691821561058057508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b849084346103ce57826003193601126103ce578260035460018160011c906001831692831561067e575b602093848410811461021d57838852908115610201575060011461062857505050829003601f01601f191682019267ffffffffffffffff8411838510176101995750829182610195925282610688565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061066a5750505050830101858080610163565b805488860183015293019284908201610654565b91607f16916105d8565b6020808252825181830181905290939260005b8281106106bd57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161069b565b600435906001600160a01b03821682036106e757565b600080fd5b602435906001600160a01b03821682036106e757565b916001600160a01b038084169283156107c757169283156107ae576000908382528160205260408220549083821061077c575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea26469706673582212204dd4de9af52c5216c7b5d79c316f0ac033fab2a5c287b5b185164013f2f3cc0664736f6c63430008180033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLVALUE PUSH3 0x3A0 JUMPI PUSH3 0xC54 DUP1 CODESIZE SUB DUP1 PUSH3 0x1E DUP2 PUSH3 0x3A5 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH3 0x3A0 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH3 0x3A0 JUMPI DUP3 PUSH3 0x50 SWAP2 DUP4 ADD PUSH3 0x3CB JUMP JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP4 ADD MLOAD DUP6 DUP2 GT PUSH3 0x3A0 JUMPI DUP7 SWAP2 PUSH3 0x6E SWAP2 DUP6 ADD PUSH3 0x3CB JUMP JUMPDEST SWAP3 ADD MLOAD SWAP4 DUP2 MLOAD DUP2 DUP2 GT PUSH3 0x2A0 JUMPI PUSH1 0x3 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 SWAP5 DUP6 DUP4 DUP2 SHR SWAP4 AND DUP1 ISZERO PUSH3 0x395 JUMPI JUMPDEST DUP9 DUP5 LT EQ PUSH3 0x37F JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH3 0x329 JUMPI JUMPDEST POP DUP9 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2C2 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2B6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP6 SHL SHR NOT AND SWAP1 DUP6 SHL OR DUP3 SSTORE JUMPDEST DUP5 MLOAD SWAP3 DUP4 GT PUSH3 0x2A0 JUMPI PUSH1 0x4 SWAP5 DUP6 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x295 JUMPI JUMPDEST DUP9 DUP3 LT EQ PUSH3 0x280 JUMPI DUP3 DUP2 GT PUSH3 0x235 JUMPI JUMPDEST POP DUP7 SWAP2 DUP5 GT PUSH1 0x1 EQ PUSH3 0x1CA JUMPI SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x1BE JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST CALLER ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x192 JUMPI POP PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x2 SSTORE CALLER DUP4 MSTORE DUP3 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE DUP5 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 MLOAD PUSH2 0x816 SWAP1 DUP2 PUSH3 0x43E DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x0 DUP6 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x11E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP3 DUP7 PUSH1 0x0 MSTORE DUP5 DUP9 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP11 DUP10 DUP4 DUP4 LT PUSH3 0x21D JUMPI POP POP POP LT PUSH3 0x202 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0x12E JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x1F3 JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP ADD PUSH3 0x1DF JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP4 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP9 LT PUSH3 0x276 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x269 JUMPI POP POP PUSH3 0x102 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x259 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x250 JUMP JUMPDEST PUSH1 0x22 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xF0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xC1 JUMP JUMPDEST SWAP1 DUP8 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP7 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x312 JUMPI POP POP DUP5 GT PUSH3 0x2F9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0xD3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP8 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x2EB JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP12 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2D8 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x375 JUMPI JUMPDEST SWAP2 DUP10 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x365 JUMPI POP POP PUSH3 0xAA JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH3 0x355 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x347 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH3 0x93 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x2A0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x3A0 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x2A0 JUMPI PUSH1 0x20 SWAP1 PUSH3 0x401 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x3A5 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x3A0 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x429 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x413 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x5AE JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x504 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x4E5 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x3EE JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x3D2 JUMPI DUP2 PUSH4 0x40C10F19 EQ PUSH2 0x326 JUMPI DUP2 PUSH4 0x42966C68 EQ PUSH2 0x271 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x23A JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x702 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x21D JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x201 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1AC JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x199 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x195 SWAP3 MSTORE DUP3 PUSH2 0x688 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x1ED JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x163 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x163 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x144 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x262 PUSH2 0x6D1 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI DUP3 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x310 JUMPI CALLER DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP4 DUP3 DUP6 LT PUSH2 0x2E5 JUMPI POP DUP2 DUP4 SWAP5 CALLER DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE SUB DUP2 DUP5 KECCAK256 SSTORE DUP2 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x3CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI PUSH2 0x341 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3A6 JUMPI POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE DUP6 DUP6 MSTORE DUP5 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4E2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4E2 JUMPI PUSH2 0x40A PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x6EC JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0x44E JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x112 DUP10 DUP10 DUP10 PUSH2 0x702 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x4B6 JUMPI DUP2 ISZERO PUSH2 0x49F JUMPI CALLER ISZERO PUSH2 0x488 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x112 DUP8 PUSH2 0x440 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x3CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI PUSH2 0x51E PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x597 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x580 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x3CE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x67E JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x21D JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x201 JUMPI POP PUSH1 0x1 EQ PUSH2 0x628 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x199 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x195 SWAP3 MSTORE DUP3 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x66A JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x163 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x654 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6BD JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6E7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6E7 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x7C7 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x77C JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xD4 0xDE SWAP11 CREATE2 0x2C MSTORE AND 0xC7 0xB5 0xD7 SWAP13 BALANCE PUSH16 0xAC033FAB2A5C287B5B185164013F2F3 0xCC MOD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"212:522:16:-:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;212:522:16;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1648:13:5;212:522:16;;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;;;;;;;;-1:-1:-1;212:522:16;;;;-1:-1:-1;;;;212:522:16;;;;;;;;;;;;;;;;;;;;1671:17:5;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;;;;;395:10;7432:21:5;7428:91;;6137:21;212:522:16;;;;;;;;;;;-1:-1:-1;212:522:16;6987:25:5;212:522:16;6137:21:5;212:522:16;395:10;212:522;;;;;;;;;;;;;;;;;;;395:10;6987:25:5;;212:522:16;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;-1:-1:-1;212:522:16;7428:91:5;212:522:16;;-1:-1:-1;212:522:16;;7476:32:5;;;;;;;;212:522:16;7476:32:5;212:522:16;;;;-1:-1:-1;212:522:16;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;-1:-1:-1;212:522:16;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;;;-1:-1:-1;212:522:16;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;-1:-1:-1;212:522:16;;;;;;;;;;;;-1:-1:-1;212:522:16;;1671:17:5;212:522:16;;-1:-1:-1;212:522:16;;;;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;-1:-1:-1;212:522:16;;-1:-1:-1;212:522:16;;;;;;;;;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;;-1:-1:-1;;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;;;-1:-1:-1;212:522:16;;;;;;;;;-1:-1:-1;212:522:16;;;;;;;;;-1:-1:-1;;212:522:16;;;-1:-1:-1;;;;;212:522:16;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;212:522:16;;;;;;;;;;-1:-1:-1;;212:522:16;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;;;;;;-1:-1:-1;212:522:16;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1772,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_3712":{"entryPoint":1745,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":1672,"id":null,"parameterSlots":2,"returnSlots":1},"fun_transfer":{"entryPoint":1794,"id":619,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146105ae57508163095ea7b31461050457816318160ddd146104e557816323b872dd146103ee578163313ce567146103d257816340c10f191461032657816342966c681461027157816370a082311461023a57816395d89b411461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6106d1565b6100c26106ec565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086106d1565b6024359033610702565b5160018152f35b8383346100e557816003193601126100e55780519082845460018160011c9060018316928315610230575b602093848410811461021d5783885290811561020157506001146101ac575b505050829003601f01601f191682019267ffffffffffffffff8411838510176101995750829182610195925282610688565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106101ed5750505050830101858080610163565b8054888601830152930192849082016101d7565b60ff1916878501525050151560051b8401019050858080610163565b634e487b7160e01b895260228a52602489fd5b91607f1691610144565b5050346100e55760203660031901126100e55760209181906001600160a01b036102626106d1565b16815280845220549051908152f35b8383346100e55760203660031901126100e5578235903315610310573383528260205280832054938285106102e557508183943385528460205203818420558160025403600255519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a380f35b905163391434e360e21b81523391810191825260208201859052604082018390529081906060010390fd5b51634b637e8f60e11b8152808401839052602490fd5b919050346103ce57806003193601126103ce576103416106d1565b6001600160a01b031691602435919083156103b957600254908382018092116103a6575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b8280fd5b5050346100e557816003193601126100e5576020905160128152f35b905082346104e25760603660031901126104e25761040a6106d1565b6104126106ec565b916044359360018060a01b03831680835260016020528683203384526020528683205491600019831061044e575b602088610112898989610702565b8683106104b657811561049f5733156104885750825260016020908152868320338452815291869020908590039055829061011287610440565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346100e557816003193601126100e5576020906002549051908152f35b9050346103ce57816003193601126103ce5761051e6106d1565b602435903315610597576001600160a01b031691821561058057508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b849084346103ce57826003193601126103ce578260035460018160011c906001831692831561067e575b602093848410811461021d57838852908115610201575060011461062857505050829003601f01601f191682019267ffffffffffffffff8411838510176101995750829182610195925282610688565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061066a5750505050830101858080610163565b805488860183015293019284908201610654565b91607f16916105d8565b6020808252825181830181905290939260005b8281106106bd57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161069b565b600435906001600160a01b03821682036106e757565b600080fd5b602435906001600160a01b03821682036106e757565b916001600160a01b038084169283156107c757169283156107ae576000908382528160205260408220549083821061077c575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea26469706673582212204dd4de9af52c5216c7b5d79c316f0ac033fab2a5c287b5b185164013f2f3cc0664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x5AE JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x504 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x4E5 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x3EE JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x3D2 JUMPI DUP2 PUSH4 0x40C10F19 EQ PUSH2 0x326 JUMPI DUP2 PUSH4 0x42966C68 EQ PUSH2 0x271 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x23A JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x702 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x21D JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x201 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1AC JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x199 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x195 SWAP3 MSTORE DUP3 PUSH2 0x688 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x1ED JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x163 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x163 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x144 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x262 PUSH2 0x6D1 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI DUP3 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x310 JUMPI CALLER DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP4 DUP3 DUP6 LT PUSH2 0x2E5 JUMPI POP DUP2 DUP4 SWAP5 CALLER DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE SUB DUP2 DUP5 KECCAK256 SSTORE DUP2 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x3CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI PUSH2 0x341 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3A6 JUMPI POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE DUP6 DUP6 MSTORE DUP5 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4E2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4E2 JUMPI PUSH2 0x40A PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x6EC JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0x44E JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x112 DUP10 DUP10 DUP10 PUSH2 0x702 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x4B6 JUMPI DUP2 ISZERO PUSH2 0x49F JUMPI CALLER ISZERO PUSH2 0x488 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x112 DUP8 PUSH2 0x440 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x3CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI PUSH2 0x51E PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x597 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x580 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x3CE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x67E JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x21D JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x201 JUMPI POP PUSH1 0x1 EQ PUSH2 0x628 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x199 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x195 SWAP3 MSTORE DUP3 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x66A JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x163 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x654 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6BD JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6E7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6E7 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x7C7 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x77C JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xD4 0xDE SWAP11 CREATE2 0x2C MSTORE AND 0xC7 0xB5 0xD7 SWAP13 BALANCE PUSH16 0xAC033FAB2A5C287B5B185164013F2F3 0xCC MOD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"212:522:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:5:5;212:522:16;;:::i;:::-;;;735:10:9;;3388:5:5;:::i;:::-;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:522:16;;;;;-1:-1:-1;;212:522:16;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;212:522:16;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:522:16;;;;;-1:-1:-1;;212:522:16;;;;;;;;-1:-1:-1;212:522:16;;;;;;-1:-1:-1;;;212:522:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:522:16;;;;;;;;-1:-1:-1;;;;;212:522:16;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:522:16;;;;;;704:10;;7958:21:5;7954:89;;704:10:16;212:522;;;;;;;;;6244:19:5;;;;6240:115;;704:10:16;;;;;212:522;;;;;;;;;;;6714:21:5;212:522:16;;6714:21:5;212:522:16;;;;;6987:25:5;212:522:16;704:10;6987:25:5;;212:522:16;;6240:115:5;212:522:16;;-1:-1:-1;;;6290:50:5;;704:10:16;6290:50:5;;;212:522:16;;;;;;;;;;;;;;;;;;;;6290:50:5;;;7954:89;212:522:16;-1:-1:-1;;;8002:30:5;;;;;212:522:16;;;;;8002:30:5;212:522:16;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;212:522:16;;;;;;7432:21:5;;7428:91;;6137:21;212:522:16;;;;;;;;;;;;;6987:25:5;212:522:16;;;6137:21:5;212:522:16;;;;;;;;;;;;;;;;;;;;6987:25:5;212:522:16;;;-1:-1:-1;;;212:522:16;;;;;;;;7428:91:5;212:522:16;;;;7476:32:5;;;;;;;;212:522:16;7476:32:5;212:522:16;;;;;;;;;;;;;;;;;;;;;2761:2:5;212:522:16;;;;;;;;;;;;-1:-1:-1;;212:522:16;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;735:10:9;212:522:16;;;;;;;;10503:17:5;;;10484:36;;10480:309;;212:522:16;;4890:5:5;;;;;;:::i;10480:309::-;10540:24;;;10536:130;;9717:19;;9713:89;;735:10:9;9815:21:5;9811:90;;-1:-1:-1;212:522:16;;;;;;;;;;735:10:9;212:522:16;;;;;;;;;;;;;;;;4890:5:5;10480:309;;;9811:90;212:522:16;;-1:-1:-1;;;9859:31:5;;;;;212:522:16;;;;;9859:31:5;9713:89;212:522:16;;-1:-1:-1;;;9759:32:5;;;;;212:522:16;;;;;9759:32:5;10536:130;212:522:16;;-1:-1:-1;;;10591:60:5;;735:10:9;10591:60:5;;;212:522:16;;;;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;6290:50:5;;;212:522:16;;;;;;;;;;;;;;;;;;;2881:12:5;212:522:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:9;;9717:19:5;9713:89;;-1:-1:-1;;;;;212:522:16;;9815:21:5;;9811:90;;735:10:9;;;212:522:16;735:10:9;;212:522:16;;8746:4:5;212:522:16;;;;;;;;;;;;;;;;;9989:31:5;735:10:9;;9989:31:5;;212:522:16;8746:4:5;212:522:16;;;9811:90:5;212:522:16;;-1:-1:-1;;;9859:31:5;;;;;212:522:16;;;;;9859:31:5;9713:89;212:522:16;;-1:-1:-1;;;9759:32:5;;;;;212:522:16;;;;;9759:32:5;212:522:16;;;;;;;;;;;;;;;;1837:5:5;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:522:16;;;;;-1:-1:-1;;212:522:16;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1837:5:5;212:522:16;;;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;212:522:16;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;212:522:16;;;;;;:::o;5297:300:5:-;;-1:-1:-1;;;;;212:522:16;;;;5380:18:5;;5376:86;;212:522:16;5475:16:5;;;5471:86;;5997:540;212:522:16;;;;;;;;;;;6244:19:5;;;;6240:115;;212:522:16;;;;;6987:25:5;212:522:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:25:5;5297:300::o;6240:115::-;212:522:16;;-1:-1:-1;;;6290:50:5;;-1:-1:-1;;;;;212:522:16;;;;6290:50:5;;;212:522:16;;;;;;;;;;;;;;;;6290:50:5;5471:86;212:522:16;;-1:-1:-1;;;5514:32:5;;5396:1;5514:32;;;212:522:16;;;5514:32:5;5376:86;212:522:16;;-1:-1:-1;;;5421:30:5;;5396:1;5421:30;;;212:522:16;;;5421:30:5"},"gasEstimates":{"creation":{"codeDepositCost":"414000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"2788","approve(address,uint256)":"24349","balanceOf(address)":"2585","burn(uint256)":"50680","decimals()":"262","mint(address,uint256)":"50704","name()":"infinite","symbol()":"infinite","totalSupply()":"2324","transfer(address,uint256)":"50977","transferFrom(address,address,uint256)":"75544"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"TestERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burn tokens for testing\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens for testing\"}},\"notice\":\"Simple ERC20 token for testing FlowFusion Bridge\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestERC20.sol\":\"TestERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/test/TestERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title TestERC20\\r\\n * @notice Simple ERC20 token for testing FlowFusion Bridge\\r\\n */\\r\\ncontract TestERC20 is ERC20 {\\r\\n    constructor(\\r\\n        string memory name,\\r\\n        string memory symbol,\\r\\n        uint256 initialSupply\\r\\n    ) ERC20(name, symbol) {\\r\\n        _mint(msg.sender, initialSupply);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Mint tokens for testing\\r\\n     */\\r\\n    function mint(address to, uint256 amount) external {\\r\\n        _mint(to, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Burn tokens for testing\\r\\n     */\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender, amount);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x35caa3840b0755123ed3426b1a6189f1eaad17fe246b2f798ba0b82341308c65\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":397,"contract":"contracts/test/TestERC20.sol:TestERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":403,"contract":"contracts/test/TestERC20.sol:TestERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":405,"contract":"contracts/test/TestERC20.sol:TestERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":407,"contract":"contracts/test/TestERC20.sol:TestERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":409,"contract":"contracts/test/TestERC20.sol:TestERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burn(uint256)":{"notice":"Burn tokens for testing"},"mint(address,uint256)":{"notice":"Mint tokens for testing"}},"notice":"Simple ERC20 token for testing FlowFusion Bridge","version":1}}}}}}